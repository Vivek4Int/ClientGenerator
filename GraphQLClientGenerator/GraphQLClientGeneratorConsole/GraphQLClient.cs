// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
#endif

namespace APIMGraphQLClient
{
    #region base classes
    public struct GraphQlFieldMetadata
    {
        public string Name { get; set; }
        public string DefaultAlias { get; set; }
        public bool IsComplex { get; set; }
        public bool RequiresParameters { get; set; }
        public Type QueryBuilderType { get; set; }
    }
    
    public enum Formatting
    {
        None,
        Indented
    }
    
    public class GraphQlObjectTypeAttribute : global::System.Attribute
    {
        public string TypeName { get; }
    
        public GraphQlObjectTypeAttribute(string typeName) => TypeName = typeName;
    }
    
    #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
    public class QueryBuilderParameterConverter<T> : global::Newtonsoft.Json.JsonConverter
    {
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.Null:
                    return null;
    
                default:
                    return (QueryBuilderParameter<T>)(T)serializer.Deserialize(reader, typeof(T));
            }
        }
    
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            if (value == null)
                writer.WriteNull();
            else
                serializer.Serialize(writer, ((QueryBuilderParameter<T>)value).Value, typeof(T));
        }
    
        public override bool CanConvert(Type objectType) => objectType.IsSubclassOf(typeof(QueryBuilderParameter));
    }
    
    public class GraphQlInterfaceJsonConverter : global::Newtonsoft.Json.JsonConverter
    {
        private const string FieldNameType = "__typename";
    
        private static readonly Dictionary<string, Type> InterfaceTypeMapping =
            typeof(GraphQlInterfaceJsonConverter).Assembly.GetTypes()
                .Select(t => new { Type = t, Attribute = t.GetCustomAttribute<GraphQlObjectTypeAttribute>() })
                .Where(x => x.Attribute != null && x.Type.Namespace == typeof(GraphQlInterfaceJsonConverter).Namespace)
                .ToDictionary(x => x.Attribute.TypeName, x => x.Type);
    
        public override bool CanConvert(Type objectType) => objectType.IsInterface || objectType.IsArray;
    
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            while (reader.TokenType == JsonToken.Comment)
                reader.Read();
    
            switch (reader.TokenType)
            {
                case JsonToken.Null:
                    return null;
    
                case JsonToken.StartObject:
                    var jObject = JObject.Load(reader);
                    if (!jObject.TryGetValue(FieldNameType, out var token) || token.Type != JTokenType.String)
                        throw CreateJsonReaderException(reader, $"\"{GetType().FullName}\" requires JSON object to contain \"{FieldNameType}\" field with type name");
    
                    var typeName = token.Value<string>();
                    if (!InterfaceTypeMapping.TryGetValue(typeName, out var type))
                        throw CreateJsonReaderException(reader, $"type \"{typeName}\" not found");
    
                    using (reader = CloneReader(jObject, reader))
                        return serializer.Deserialize(reader, type);
    
                case JsonToken.StartArray:
                    var elementType = GetElementType(objectType);
                    if (elementType == null)
                        throw CreateJsonReaderException(reader, $"array element type could not be resolved for type \"{objectType.FullName}\"");
    
                    return ReadArray(reader, objectType, elementType, serializer);
    
                default:
                    throw CreateJsonReaderException(reader, $"unrecognized token: {reader.TokenType}");
            }
        }
    
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) => serializer.Serialize(writer, value);
    
        private static JsonReader CloneReader(JToken jToken, JsonReader reader)
        {
            var jObjectReader = jToken.CreateReader();
            jObjectReader.Culture = reader.Culture;
            jObjectReader.CloseInput = reader.CloseInput;
            jObjectReader.SupportMultipleContent = reader.SupportMultipleContent;
            jObjectReader.DateTimeZoneHandling = reader.DateTimeZoneHandling;
            jObjectReader.FloatParseHandling = reader.FloatParseHandling;
            jObjectReader.DateFormatString = reader.DateFormatString;
            jObjectReader.DateParseHandling = reader.DateParseHandling;
            return jObjectReader;
        }
    
        private static JsonReaderException CreateJsonReaderException(JsonReader reader, string message)
        {
            if (reader is IJsonLineInfo lineInfo && lineInfo.HasLineInfo())
                return new JsonReaderException(message, reader.Path, lineInfo.LineNumber, lineInfo.LinePosition, null);
    
            return new JsonReaderException(message);
        }
    
        private static Type GetElementType(Type arrayOrGenericContainer) =>
            arrayOrGenericContainer.IsArray ? arrayOrGenericContainer.GetElementType() : arrayOrGenericContainer.GenericTypeArguments.FirstOrDefault();
    
        private IList ReadArray(JsonReader reader, Type targetType, Type elementType, JsonSerializer serializer)
        {
            var list = CreateCompatibleList(targetType, elementType);
            while (reader.Read() && reader.TokenType != JsonToken.EndArray)
                list.Add(ReadJson(reader, elementType, null, serializer));
    
            if (!targetType.IsArray)
                return list;
    
            var array = Array.CreateInstance(elementType, list.Count);
            list.CopyTo(array, 0);
            return array;
        }
    
        private static IList CreateCompatibleList(Type targetContainerType, Type elementType) =>
            (IList)Activator.CreateInstance(targetContainerType.IsArray || targetContainerType.IsAbstract ? typeof(List<>).MakeGenericType(elementType) : targetContainerType);
    }
    #endif
    
    internal static class GraphQlQueryHelper
    {
        private static readonly Regex RegexGraphQlIdentifier = new Regex(@"^[_A-Za-z][_0-9A-Za-z]*$", RegexOptions.Compiled);
        private static readonly Regex RegexEscapeGraphQlString = new Regex(@"[\\\""/\b\f\n\r\t]", RegexOptions.Compiled);
    
        public static string GetIndentation(int level, byte indentationSize)
        {
            return new String(' ', level * indentationSize);
        }
    
        public static string EscapeGraphQlStringValue(string value)
        {
            return RegexEscapeGraphQlString.Replace(value, m => @$"\{GetEscapeSequence(m.Value)}");
        }
    
        private static string GetEscapeSequence(string input)
        {
            switch (input)
            {
                case "\\":
                    return "\\";
                case "\"":
                    return "\"";
                case "/":
                    return "/";
                case "\b":
                    return "b";
                case "\f":
                    return "f";
                case "\n":
                    return "n";
                case "\r":
                    return "r";
                case "\t":
                    return "t";
                default:
                    throw new InvalidOperationException($"invalid character: {input}");
            }
        }
    
        public static string BuildArgumentValue(object value, string formatMask, GraphQlBuilderOptions options, int level)
        {
            var serializer = options.ArgumentBuilder ?? DefaultGraphQlArgumentBuilder.Instance;
            if (serializer.TryBuild(new GraphQlArgumentBuilderContext { Value = value, FormatMask = formatMask, Options = options, Level = level }, out var serializedValue))
                return serializedValue;
    
            if (value is null)
                return "null";
    
            var enumerable = value as IEnumerable;
            if (!String.IsNullOrEmpty(formatMask) && enumerable == null)
                return
                    value is IFormattable formattable
                        ? $"\"{EscapeGraphQlStringValue(formattable.ToString(formatMask, CultureInfo.InvariantCulture))}\""
                        : throw new ArgumentException($"Value must implement {nameof(IFormattable)} interface to use a format mask. ", nameof(value));
    
            if (value is Enum @enum)
                return ConvertEnumToString(@enum);
    
            if (value is bool @bool)
                return @bool ? "true" : "false";
    
            if (value is DateTime dateTime)
                return $"\"{dateTime.ToString("O")}\"";
    
            if (value is DateTimeOffset dateTimeOffset)
                return $"\"{dateTimeOffset.ToString("O")}\"";
    
            if (value is IGraphQlInputObject inputObject)
                return BuildInputObject(inputObject, options, level + 2);
    
            if (value is Guid)
                return $"\"{value}\"";
    
            if (value is String @string)
                return $"\"{EscapeGraphQlStringValue(@string)}\"";
    
            if (enumerable != null)
                return BuildEnumerableArgument(enumerable, formatMask, options, level, '[', ']');
    
            if (value is short || value is ushort || value is byte || value is int || value is uint || value is long || value is ulong || value is float || value is double || value is decimal)
                return Convert.ToString(value, CultureInfo.InvariantCulture);
    
            var argumentValue = EscapeGraphQlStringValue(Convert.ToString(value, CultureInfo.InvariantCulture));
            return $"\"{argumentValue}\"";
        }
    
        public static string BuildEnumerableArgument(IEnumerable enumerable, string formatMask, GraphQlBuilderOptions options, int level, char openingSymbol, char closingSymbol)
        {
            var builder = new StringBuilder();
            builder.Append(openingSymbol);
            var delimiter = String.Empty;
            foreach (var item in enumerable)
            {
                builder.Append(delimiter);
    
                if (options.Formatting == Formatting.Indented)
                {
                    builder.AppendLine();
                    builder.Append(GetIndentation(level + 1, options.IndentationSize));
                }
    
                builder.Append(BuildArgumentValue(item, formatMask, options, level));
                delimiter = ",";
            }
    
            builder.Append(closingSymbol);
            return builder.ToString();
        }
    
        public static string BuildInputObject(IGraphQlInputObject inputObject, GraphQlBuilderOptions options, int level)
        {
            var builder = new StringBuilder();
            builder.Append("{");
    
            var isIndentedFormatting = options.Formatting == Formatting.Indented;
            string valueSeparator;
            if (isIndentedFormatting)
            {
                builder.AppendLine();
                valueSeparator = ": ";
            }
            else
                valueSeparator = ":";
    
            var separator = String.Empty;
            foreach (var propertyValue in inputObject.GetPropertyValues())
            {
                var queryBuilderParameter = propertyValue.Value as QueryBuilderParameter;
                var value =
                    queryBuilderParameter?.Name != null
                        ? $"${queryBuilderParameter.Name}"
                        : BuildArgumentValue(queryBuilderParameter == null ? propertyValue.Value : queryBuilderParameter.Value, propertyValue.FormatMask, options, level);
    
                builder.Append(isIndentedFormatting ? GetIndentation(level, options.IndentationSize) : separator);
                builder.Append(propertyValue.Name);
                builder.Append(valueSeparator);
                builder.Append(value);
    
                separator = ",";
    
                if (isIndentedFormatting)
                    builder.AppendLine();
            }
    
            if (isIndentedFormatting)
                builder.Append(GetIndentation(level - 1, options.IndentationSize));
    
            builder.Append("}");
    
            return builder.ToString();
        }
    
        public static string BuildDirective(GraphQlDirective directive, GraphQlBuilderOptions options, int level)
        {
            if (directive == null)
                return String.Empty;
    
            var isIndentedFormatting = options.Formatting == Formatting.Indented;
            var indentationSpace = isIndentedFormatting ? " " : String.Empty;
            var builder = new StringBuilder();
            builder.Append(indentationSpace);
            builder.Append("@");
            builder.Append(directive.Name);
            builder.Append("(");
    
            string separator = null;
            foreach (var kvp in directive.Arguments)
            {
                var argumentName = kvp.Key;
                var argument = kvp.Value;
    
                builder.Append(separator);
                builder.Append(argumentName);
                builder.Append(":");
                builder.Append(indentationSpace);
    
                if (argument.Name == null)
                    builder.Append(BuildArgumentValue(argument.Value, null, options, level));
                else
                {
                    builder.Append("$");
                    builder.Append(argument.Name);
                }
    
                separator = isIndentedFormatting ? ", " : ",";
            }
    
            builder.Append(")");
            return builder.ToString();
        }
    
        public static void ValidateGraphQlIdentifier(string name, string identifier)
        {
            if (identifier != null && !RegexGraphQlIdentifier.IsMatch(identifier))
                throw new ArgumentException("value must match " + RegexGraphQlIdentifier, name);
        }
    
        private static string ConvertEnumToString(Enum @enum)
        {
            var enumMember = @enum.GetType().GetField(@enum.ToString());
            if (enumMember == null)
                throw new InvalidOperationException("enum member resolution failed");
    
            var enumMemberAttribute = (EnumMemberAttribute)enumMember.GetCustomAttribute(typeof(EnumMemberAttribute));
    
            return enumMemberAttribute == null
                ? @enum.ToString()
                : enumMemberAttribute.Value;
        }
    }
    
    public interface IGraphQlArgumentBuilder
    {
        bool TryBuild(GraphQlArgumentBuilderContext context, out string graphQlString);
    }
    
    public class GraphQlArgumentBuilderContext
    {
        public object Value { get; set; }
        public string FormatMask { get; set; }
        public GraphQlBuilderOptions Options { get; set; }
        public int Level { get; set; }
    }
    
    public class DefaultGraphQlArgumentBuilder : IGraphQlArgumentBuilder
    {
        private static readonly Regex RegexWhiteSpace = new Regex(@"\s", RegexOptions.Compiled);
    
        public static readonly DefaultGraphQlArgumentBuilder Instance = new();
    
        public bool TryBuild(GraphQlArgumentBuilderContext context, out string graphQlString)
        {
    #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
            if (context.Value is JValue jValue)
            {
                switch (jValue.Type)
                {
                    case JTokenType.Null:
                        graphQlString = "null";
                        return true;
    
                    case JTokenType.Integer:
                    case JTokenType.Float:
                    case JTokenType.Boolean:
                        graphQlString = GraphQlQueryHelper.BuildArgumentValue(jValue.Value, null, context.Options, context.Level);
                        return true;
    
                    case JTokenType.String:
                        graphQlString = $"\"{GraphQlQueryHelper.EscapeGraphQlStringValue((string)jValue.Value)}\"";
                        return true;
    
                    default:
                        graphQlString = $"\"{jValue.Value}\"";
                        return true;
                }
            }
    
            if (context.Value is JProperty jProperty)
            {
                if (RegexWhiteSpace.IsMatch(jProperty.Name))
                    throw new ArgumentException($"JSON object keys used as GraphQL arguments must not contain whitespace; key: {jProperty.Name}");
    
                graphQlString = $"{jProperty.Name}:{(context.Options.Formatting == Formatting.Indented ? " " : null)}{GraphQlQueryHelper.BuildArgumentValue(jProperty.Value, null, context.Options, context.Level)}";
                return true;
            }
    
            if (context.Value is JObject jObject)
            {
                graphQlString = GraphQlQueryHelper.BuildEnumerableArgument(jObject, null, context.Options, context.Level + 1, '{', '}');
                return true;
            }
    #endif
    
            graphQlString = null;
            return false;
        }
    }
    
    internal struct InputPropertyInfo
    {
        public string Name { get; set; }
        public object Value { get; set; }
        public string FormatMask { get; set; }
    }
    
    internal interface IGraphQlInputObject
    {
        IEnumerable<InputPropertyInfo> GetPropertyValues();
    }
    
    public interface IGraphQlQueryBuilder
    {
        void Clear();
        void IncludeAllFields();
        string Build(Formatting formatting = Formatting.None, byte indentationSize = 2);
    }
    
    public struct QueryBuilderArgumentInfo
    {
        public string ArgumentName { get; set; }
        public QueryBuilderParameter ArgumentValue { get; set; }
        public string FormatMask { get; set; }
    }
    
    public abstract class QueryBuilderParameter
    {
        private string _name;
    
        internal string GraphQlTypeName { get; }
        internal object Value { get; set; }
    
        public string Name
        {
            get => _name;
            set
            {
                GraphQlQueryHelper.ValidateGraphQlIdentifier(nameof(Name), value);
                _name = value;
            }
        }
    
        protected QueryBuilderParameter(string name, string graphQlTypeName, object value)
        {
            Name = name?.Trim();
            GraphQlTypeName = graphQlTypeName?.Replace(" ", null).Replace("\t", null).Replace("\n", null).Replace("\r", null);
            Value = value;
        }
    
        protected QueryBuilderParameter(object value) => Value = value;
    }
    
    public class QueryBuilderParameter<T> : QueryBuilderParameter
    {
        public new T Value
        {
            get => base.Value == null ? default : (T)base.Value;
            set => base.Value = value;
        }
    
        protected QueryBuilderParameter(string name, string graphQlTypeName, T value) : base(name, graphQlTypeName, value)
        {
            EnsureGraphQlTypeName(graphQlTypeName);
        }
    
        protected QueryBuilderParameter(string name, string graphQlTypeName) : base(name, graphQlTypeName, null)
        {
            EnsureGraphQlTypeName(graphQlTypeName);
        }
    
        private QueryBuilderParameter(T value) : base(value)
        {
        }
    
        public void ResetValue() => base.Value = null;
    
        public static implicit operator QueryBuilderParameter<T>(T value) => new QueryBuilderParameter<T>(value);
    
        public static implicit operator T(QueryBuilderParameter<T> parameter) => parameter.Value;
    
        private static void EnsureGraphQlTypeName(string graphQlTypeName)
        {
            if (String.IsNullOrWhiteSpace(graphQlTypeName))
                throw new ArgumentException("value required", nameof(graphQlTypeName));
        }
    }
    
    public class GraphQlQueryParameter<T> : QueryBuilderParameter<T>
    {
        private string _formatMask;
    
        public string FormatMask
        {
            get => _formatMask;
            set => _formatMask =
                typeof(IFormattable).IsAssignableFrom(typeof(T))
                    ? value
                    : throw new InvalidOperationException($"Value must be of {nameof(IFormattable)} type. ");
        }
    
        public GraphQlQueryParameter(string name, string graphQlTypeName = null)
            : base(name, graphQlTypeName ?? GetGraphQlTypeName(typeof(T)))
        {
        }
    
        public GraphQlQueryParameter(string name, string graphQlTypeName, T defaultValue)
            : base(name, graphQlTypeName, defaultValue)
        {
        }
    
        public GraphQlQueryParameter(string name, T defaultValue, bool isNullable = true)
            : base(name, GetGraphQlTypeName(typeof(T), isNullable), defaultValue)
        {
        }
    
        private static string GetGraphQlTypeName(Type valueType, bool isNullable)
        {
            var graphQlTypeName = GetGraphQlTypeName(valueType);
            if (!isNullable)
                graphQlTypeName += "!";
    
            return graphQlTypeName;
        }
    
        private static string GetGraphQlTypeName(Type valueType)
        {
            var nullableUnderlyingType = Nullable.GetUnderlyingType(valueType);
            valueType = nullableUnderlyingType ?? valueType;
    
            if (valueType.IsArray)
            {
                var arrayItemType = GetGraphQlTypeName(valueType.GetElementType());
                return arrayItemType == null ? null : "[" + arrayItemType + "]";
            }
    
            if (typeof(IEnumerable).IsAssignableFrom(valueType))
            {
                var genericArguments = valueType.GetGenericArguments();
                if (genericArguments.Length == 1)
                {
                    var listItemType = GetGraphQlTypeName(valueType.GetGenericArguments()[0]);
                    return listItemType == null ? null : "[" + listItemType + "]";
                }
            }
    
            if (GraphQlTypes.ReverseMapping.TryGetValue(valueType, out var graphQlTypeName))
                return graphQlTypeName;
    
            if (valueType == typeof(string))
                return "String";
    
            var nullableSuffix = nullableUnderlyingType == null ? null : "?";
            graphQlTypeName = GetValueTypeGraphQlTypeName(valueType);
            return graphQlTypeName == null ? null : graphQlTypeName + nullableSuffix;
        }
    
        private static string GetValueTypeGraphQlTypeName(Type valueType)
        {
            if (valueType == typeof(bool))
                return "Boolean";
    
            if (valueType == typeof(float) || valueType == typeof(double) || valueType == typeof(decimal))
                return "Float";
    
            if (valueType == typeof(Guid))
                return "ID";
    
            if (valueType == typeof(sbyte) || valueType == typeof(byte) || valueType == typeof(short) || valueType == typeof(ushort) || valueType == typeof(int) || valueType == typeof(uint) ||
                valueType == typeof(long) || valueType == typeof(ulong))
                return "Int";
    
            return null;
        }
    }
    
    public abstract class GraphQlDirective
    {
        private readonly Dictionary<string, QueryBuilderParameter> _arguments = new Dictionary<string, QueryBuilderParameter>();
    
        internal IEnumerable<KeyValuePair<string, QueryBuilderParameter>> Arguments => _arguments;
    
        public string Name { get; }
    
        protected GraphQlDirective(string name)
        {
            GraphQlQueryHelper.ValidateGraphQlIdentifier(nameof(name), name);
            Name = name;
        }
    
        protected void AddArgument(string name, QueryBuilderParameter value)
        {
            if (value != null)
                _arguments[name] = value;
        }
    }
    
    public class GraphQlBuilderOptions
    {
        public Formatting Formatting { get; set; }
        public byte IndentationSize { get; set; } = 2;
        public IGraphQlArgumentBuilder ArgumentBuilder { get; set; }
    }
    
    public abstract partial class GraphQlQueryBuilder : IGraphQlQueryBuilder
    {
        private readonly Dictionary<string, GraphQlFieldCriteria> _fieldCriteria = new Dictionary<string, GraphQlFieldCriteria>();
    
        private readonly string _operationType;
        private readonly string _operationName;
        private Dictionary<string, GraphQlFragmentCriteria> _fragments;
        private List<QueryBuilderArgumentInfo> _queryParameters;
    
        protected abstract string TypeName { get; }
    
        public abstract IReadOnlyList<GraphQlFieldMetadata> AllFields { get; }
    
        protected GraphQlQueryBuilder(string operationType, string operationName)
        {
            GraphQlQueryHelper.ValidateGraphQlIdentifier(nameof(operationName), operationName);
            _operationType = operationType;
            _operationName = operationName;
        }
    
        public virtual void Clear()
        {
            _fieldCriteria.Clear();
            _fragments?.Clear();
            _queryParameters?.Clear();
        }
    
        void IGraphQlQueryBuilder.IncludeAllFields()
        {
            IncludeAllFields();
        }
    
        public string Build(Formatting formatting = Formatting.None, byte indentationSize = 2)
        {
            return Build(new GraphQlBuilderOptions { Formatting = formatting, IndentationSize = indentationSize });
        }
    
        public string Build(GraphQlBuilderOptions options)
        {
            return Build(options, 1);
        }
    
        protected void IncludeAllFields()
        {
            IncludeFields(AllFields.Where(f => !f.RequiresParameters));
        }
    
        protected virtual string Build(GraphQlBuilderOptions options, int level)
        {
            var isIndentedFormatting = options.Formatting == Formatting.Indented;
            var separator = String.Empty;
            var indentationSpace = isIndentedFormatting ? " " : String.Empty;
            var builder = new StringBuilder();
    
            BuildOperationSignature(builder, options, indentationSpace, level);
    
            if (builder.Length > 0 || level > 1)
                builder.Append(indentationSpace);
    
            builder.Append("{");
    
            if (isIndentedFormatting)
                builder.AppendLine();
    
            separator = String.Empty;
    
            foreach (var criteria in _fieldCriteria.Values.Concat(_fragments?.Values ?? Enumerable.Empty<GraphQlFragmentCriteria>()))
            {
                var fieldCriteria = criteria.Build(options, level);
                if (isIndentedFormatting)
                    builder.AppendLine(fieldCriteria);
                else if (!String.IsNullOrEmpty(fieldCriteria))
                {
                    builder.Append(separator);
                    builder.Append(fieldCriteria);
                }
    
                separator = ",";
            }
    
            if (isIndentedFormatting)
                builder.Append(GraphQlQueryHelper.GetIndentation(level - 1, options.IndentationSize));
    
            builder.Append("}");
    
            return builder.ToString();
        }
    
        private void BuildOperationSignature(StringBuilder builder, GraphQlBuilderOptions options, string indentationSpace, int level)
        {
            if (String.IsNullOrEmpty(_operationType))
                return;
    
            builder.Append(_operationType);
    
            if (!String.IsNullOrEmpty(_operationName))
            {
                builder.Append(" ");
                builder.Append(_operationName);
            }
    
            if (_queryParameters?.Count > 0)
            {
                builder.Append(indentationSpace);
                builder.Append("(");
    
                var separator = String.Empty;
                var isIndentedFormatting = options.Formatting == Formatting.Indented;
    
                foreach (var queryParameterInfo in _queryParameters)
                {
                    if (isIndentedFormatting)
                    {
                        builder.AppendLine(separator);
                        builder.Append(GraphQlQueryHelper.GetIndentation(level, options.IndentationSize));
                    }
                    else
                        builder.Append(separator);
    
                    builder.Append("$");
                    builder.Append(queryParameterInfo.ArgumentValue.Name);
                    builder.Append(":");
                    builder.Append(indentationSpace);
    
                    builder.Append(queryParameterInfo.ArgumentValue.GraphQlTypeName);
    
                    if (!queryParameterInfo.ArgumentValue.GraphQlTypeName.EndsWith("!") && queryParameterInfo.ArgumentValue.Value is not null)
                    {
                        builder.Append(indentationSpace);
                        builder.Append("=");
                        builder.Append(indentationSpace);
                        builder.Append(GraphQlQueryHelper.BuildArgumentValue(queryParameterInfo.ArgumentValue.Value, queryParameterInfo.FormatMask, options, 0));
                    }
    
                    if (!isIndentedFormatting)
                        separator = ",";
                }
    
                builder.Append(")");
            }
        }
    
        protected void IncludeScalarField(string fieldName, string alias, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
        {
            _fieldCriteria[alias ?? fieldName] = new GraphQlScalarFieldCriteria(fieldName, alias, args, directives);
        }
    
        protected void IncludeObjectField(string fieldName, string alias, GraphQlQueryBuilder objectFieldQueryBuilder, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
        {
            _fieldCriteria[alias ?? fieldName] = new GraphQlObjectFieldCriteria(fieldName, alias, objectFieldQueryBuilder, args, directives);
        }
    
        protected void IncludeFragment(GraphQlQueryBuilder objectFieldQueryBuilder, GraphQlDirective[] directives)
        {
            _fragments = _fragments ?? new Dictionary<string, GraphQlFragmentCriteria>();
            _fragments[objectFieldQueryBuilder.TypeName] = new GraphQlFragmentCriteria(objectFieldQueryBuilder, directives);
        }
    
        protected void ExcludeField(string fieldName)
        {
            if (fieldName == null)
                throw new ArgumentNullException(nameof(fieldName));
    
            _fieldCriteria.Remove(fieldName);
        }
    
        protected void IncludeFields(IEnumerable<GraphQlFieldMetadata> fields)
        {
            IncludeFields(fields, null);
        }
    
        private void IncludeFields(IEnumerable<GraphQlFieldMetadata> fields, List<Type> parentTypes)
        {
            foreach (var field in fields)
            {
                if (field.QueryBuilderType == null)
                    IncludeScalarField(field.Name, field.DefaultAlias, null, null);
                else
                {
                    var builderType = GetType();
    
                    if (_operationType != null && GetType() == field.QueryBuilderType || parentTypes != null && parentTypes.Any(t => t.IsAssignableFrom(field.QueryBuilderType)))
                        continue;
    
                    parentTypes?.Add(builderType);
    
                    var queryBuilder = InitializeChildQueryBuilder(builderType, field.QueryBuilderType, parentTypes);
    
                    var includeFragmentMethods = field.QueryBuilderType.GetMethods().Where(IsIncludeFragmentMethod);
    
                    foreach (var includeFragmentMethod in includeFragmentMethods)
                        includeFragmentMethod.Invoke(
                            queryBuilder,
                            new object[] { InitializeChildQueryBuilder(builderType, includeFragmentMethod.GetParameters()[0].ParameterType, parentTypes) });
    
                    IncludeObjectField(field.Name, field.DefaultAlias, queryBuilder, null, null);
                }
            }
        }
    
        private static GraphQlQueryBuilder InitializeChildQueryBuilder(Type parentQueryBuilderType, Type queryBuilderType, List<Type> parentTypes)
        {
            var queryBuilder = (GraphQlQueryBuilder)Activator.CreateInstance(queryBuilderType);
            queryBuilder.IncludeFields(queryBuilder.AllFields.Where(f => !f.RequiresParameters), parentTypes ?? new List<Type> { parentQueryBuilderType });
            return queryBuilder;
        }
    
        private static bool IsIncludeFragmentMethod(MethodInfo methodInfo)
        {
            if (!methodInfo.Name.StartsWith("With") || !methodInfo.Name.EndsWith("Fragment"))
                return false;
    
            var parameters = methodInfo.GetParameters();
            return parameters.Length == 1 && parameters[0].ParameterType.IsSubclassOf(typeof(GraphQlQueryBuilder));
        }
    
        protected void AddParameter<T>(GraphQlQueryParameter<T> parameter)
        {
            if (_queryParameters == null)
                _queryParameters = new List<QueryBuilderArgumentInfo>();
    
            _queryParameters.Add(new QueryBuilderArgumentInfo { ArgumentValue = parameter, FormatMask = parameter.FormatMask });
        }
    
        private abstract class GraphQlFieldCriteria
        {
            private readonly IList<QueryBuilderArgumentInfo> _args;
            private readonly GraphQlDirective[] _directives;
    
            protected readonly string FieldName;
            protected readonly string Alias;
    
            protected static string GetIndentation(Formatting formatting, int level, byte indentationSize) =>
                formatting == Formatting.Indented ? GraphQlQueryHelper.GetIndentation(level, indentationSize) : null;
    
            protected GraphQlFieldCriteria(string fieldName, string alias, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
            {
                GraphQlQueryHelper.ValidateGraphQlIdentifier(nameof(alias), alias);
                FieldName = fieldName;
                Alias = alias;
                _args = args;
                _directives = directives;
            }
    
            public abstract string Build(GraphQlBuilderOptions options, int level);
    
            protected string BuildArgumentClause(GraphQlBuilderOptions options, int level)
            {
                var separator = options.Formatting == Formatting.Indented ? " " : null;
                var argumentCount = _args?.Count ?? 0;
                if (argumentCount == 0)
                    return String.Empty;
    
                var arguments =
                    _args.Select(
                        a => $"{a.ArgumentName}:{separator}{(a.ArgumentValue.Name == null ? GraphQlQueryHelper.BuildArgumentValue(a.ArgumentValue.Value, a.FormatMask, options, level) : $"${a.ArgumentValue.Name}")}");
    
                return $"({String.Join($",{separator}", arguments)})";
            }
    
            protected string BuildDirectiveClause(GraphQlBuilderOptions options, int level) =>
                _directives == null ? null : String.Concat(_directives.Select(d => d == null ? null : GraphQlQueryHelper.BuildDirective(d, options, level)));
    
            protected static string BuildAliasPrefix(string alias, Formatting formatting)
            {
                var separator = formatting == Formatting.Indented ? " " : String.Empty;
                return String.IsNullOrWhiteSpace(alias) ? null : $"{alias}:{separator}";
            }
        }
    
        private class GraphQlScalarFieldCriteria : GraphQlFieldCriteria
        {
            public GraphQlScalarFieldCriteria(string fieldName, string alias, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
                : base(fieldName, alias, args, directives)
            {
            }
    
            public override string Build(GraphQlBuilderOptions options, int level) =>
                GetIndentation(options.Formatting, level, options.IndentationSize) +
                BuildAliasPrefix(Alias, options.Formatting) +
                FieldName +
                BuildArgumentClause(options, level) +
                BuildDirectiveClause(options, level);
        }
    
        private class GraphQlObjectFieldCriteria : GraphQlFieldCriteria
        {
            private readonly GraphQlQueryBuilder _objectQueryBuilder;
    
            public GraphQlObjectFieldCriteria(string fieldName, string alias, GraphQlQueryBuilder objectQueryBuilder, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
                : base(fieldName, alias, args, directives)
            {
                _objectQueryBuilder = objectQueryBuilder;
            }
    
            public override string Build(GraphQlBuilderOptions options, int level) =>
                _objectQueryBuilder._fieldCriteria.Count > 0 || _objectQueryBuilder._fragments?.Count > 0
                    ? GetIndentation(options.Formatting, level, options.IndentationSize) + BuildAliasPrefix(Alias, options.Formatting) + FieldName +
                      BuildArgumentClause(options, level) + BuildDirectiveClause(options, level) + _objectQueryBuilder.Build(options, level + 1)
                    : null;
        }
    
        private class GraphQlFragmentCriteria : GraphQlFieldCriteria
        {
            private readonly GraphQlQueryBuilder _objectQueryBuilder;
    
            public GraphQlFragmentCriteria(GraphQlQueryBuilder objectQueryBuilder, GraphQlDirective[] directives) : base(objectQueryBuilder.TypeName, null, null, directives)
            {
                _objectQueryBuilder = objectQueryBuilder;
            }
    
            public override string Build(GraphQlBuilderOptions options, int level) =>
                _objectQueryBuilder._fieldCriteria.Count == 0
                    ? null
                    : GetIndentation(options.Formatting, level, options.IndentationSize) + "..." + (options.Formatting == Formatting.Indented ? " " : null) + "on " +
                      FieldName + BuildArgumentClause(options, level) + BuildDirectiveClause(options, level) + _objectQueryBuilder.Build(options, level + 1);
        }
    }
    
    public abstract partial class GraphQlQueryBuilder<TQueryBuilder> : GraphQlQueryBuilder where TQueryBuilder : GraphQlQueryBuilder<TQueryBuilder>
    {
        protected GraphQlQueryBuilder(string operationType = null, string operationName = null) : base(operationType, operationName)
        {
        }
    
        /// <summary>
        /// Includes all fields that don't require parameters into the query.
        /// </summary>
        public TQueryBuilder WithAllFields()
        {
            IncludeAllFields();
            return (TQueryBuilder)this;
        }
    
        /// <summary>
        /// Includes all scalar fields that don't require parameters into the query.
        /// </summary>
        public TQueryBuilder WithAllScalarFields()
        {
            IncludeFields(AllFields.Where(f => !f.IsComplex && !f.RequiresParameters));
            return (TQueryBuilder)this;
        }
    
        public TQueryBuilder ExceptField(string fieldName)
        {
            ExcludeField(fieldName);
            return (TQueryBuilder)this;
        }
    
        /// <summary>
        /// Includes "__typename" field; included automatically for interface and union types.
        /// </summary>
        public TQueryBuilder WithTypeName(string alias = null, params GraphQlDirective[] directives)
        {
            IncludeScalarField("__typename", alias, null, directives);
            return (TQueryBuilder)this;
        }
    
        protected TQueryBuilder WithScalarField(string fieldName, string alias, GraphQlDirective[] directives, IList<QueryBuilderArgumentInfo> args = null)
        {
            IncludeScalarField(fieldName, alias, args, directives);
            return (TQueryBuilder)this;
        }
    
        protected TQueryBuilder WithObjectField(string fieldName, string alias, GraphQlQueryBuilder queryBuilder, GraphQlDirective[] directives, IList<QueryBuilderArgumentInfo> args = null)
        {
            IncludeObjectField(fieldName, alias, queryBuilder, args, directives);
            return (TQueryBuilder)this;
        }
    
        protected TQueryBuilder WithFragment(GraphQlQueryBuilder queryBuilder, GraphQlDirective[] directives)
        {
            IncludeFragment(queryBuilder, directives);
            return (TQueryBuilder)this;
        }
    
        protected TQueryBuilder WithParameterInternal<T>(GraphQlQueryParameter<T> parameter)
        {
            AddParameter(parameter);
            return (TQueryBuilder)this;
        }
    }
    
    public abstract class GraphQlResponse<TDataContract>
    {
        public TDataContract Data { get; set; }
        public ICollection<GraphQlQueryError> Errors { get; set; }
    }
    
    public class GraphQlQueryError
    {
        public string Message { get; set; }
        public ICollection<GraphQlErrorLocation> Locations { get; set; }
    }
    
    public class GraphQlErrorLocation
    {
        public int Line { get; set; }
        public int Column { get; set; }
    }
    #endregion

    #region GraphQL type helpers
    public static class GraphQlTypes
    {
        public const string Boolean = "Boolean";
        public const string Date = "Date";
        public const string Float = "Float";
        public const string Id = "ID";
        public const string Int = "Int";
        public const string String = "String";
        public const string Url = "Url";

        public const string Account = "Account";
        public const string BusinessUnit = "BusinessUnit";
        public const string Contact = "Contact";
        public const string Mutation = "Mutation";
        public const string ProductComponentReference = "ProductComponentReference";
        public const string ProductPlanReference = "ProductPlanReference";
        public const string Query = "Query";
        public const string RoleReference = "RoleReference";
        public const string Subscription = "Subscription";
        public const string SubscriptionComponent = "SubscriptionComponent";
        public const string SubscriptionProduct = "SubscriptionProduct";
        public const string SubscriptionRole = "SubscriptionRole";
        public const string SystemUser = "SystemUser";
        public const string Team = "Team";

        public const string AccountInput = "AccountInput";
        public const string ContactInput = "ContactInput";
        public const string SubscriptionInput = "SubscriptionInput";

        public static readonly IReadOnlyDictionary<Type, string> ReverseMapping =
            new Dictionary<Type, string>
            {
                { typeof(string), "String" },
                { typeof(Guid), "ID" },
                { typeof(bool), "Boolean" },
                { typeof(decimal), "Float" },
                { typeof(int), "Int" },
                { typeof(AccountInput), "AccountInput" },
                { typeof(ContactInput), "ContactInput" },
                { typeof(SubscriptionInput), "SubscriptionInput" }
            };
}
    #endregion

    #region directives
    public class IncludeDirective : GraphQlDirective
    {
        public IncludeDirective(QueryBuilderParameter<bool> @if) : base("include")
        {
            AddArgument("if", @if);
        }
    }

    public class SkipDirective : GraphQlDirective
    {
        public SkipDirective(QueryBuilderParameter<bool> @if) : base("skip")
        {
            AddArgument("if", @if);
        }
    }
    #endregion

    #region builder classes
    public partial class AccountQueryBuilder : GraphQlQueryBuilder<AccountQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "accountcategorycode" },
                new GraphQlFieldMetadata { Name = "accountclassificationcode" },
                new GraphQlFieldMetadata { Name = "accountid" },
                new GraphQlFieldMetadata { Name = "accountnumber" },
                new GraphQlFieldMetadata { Name = "accountratingcode" },
                new GraphQlFieldMetadata { Name = "address1_addressid" },
                new GraphQlFieldMetadata { Name = "address1_addresstypecode" },
                new GraphQlFieldMetadata { Name = "address1_city" },
                new GraphQlFieldMetadata { Name = "address1_composite" },
                new GraphQlFieldMetadata { Name = "address1_country" },
                new GraphQlFieldMetadata { Name = "address1_county" },
                new GraphQlFieldMetadata { Name = "address1_fax" },
                new GraphQlFieldMetadata { Name = "address1_freighttermscode" },
                new GraphQlFieldMetadata { Name = "address1_latitude" },
                new GraphQlFieldMetadata { Name = "address1_line1" },
                new GraphQlFieldMetadata { Name = "address1_line2" },
                new GraphQlFieldMetadata { Name = "address1_line3" },
                new GraphQlFieldMetadata { Name = "address1_longitude" },
                new GraphQlFieldMetadata { Name = "address1_name" },
                new GraphQlFieldMetadata { Name = "address1_postalcode" },
                new GraphQlFieldMetadata { Name = "address1_postofficebox" },
                new GraphQlFieldMetadata { Name = "address1_primarycontactname" },
                new GraphQlFieldMetadata { Name = "address1_shippingmethodcode" },
                new GraphQlFieldMetadata { Name = "address1_stateorprovince" },
                new GraphQlFieldMetadata { Name = "address1_telephone1" },
                new GraphQlFieldMetadata { Name = "address1_telephone2" },
                new GraphQlFieldMetadata { Name = "address1_telephone3" },
                new GraphQlFieldMetadata { Name = "address1_upszone" },
                new GraphQlFieldMetadata { Name = "address1_utcoffset" },
                new GraphQlFieldMetadata { Name = "address2_addressid" },
                new GraphQlFieldMetadata { Name = "address2_addresstypecode" },
                new GraphQlFieldMetadata { Name = "address2_city" },
                new GraphQlFieldMetadata { Name = "address2_composite" },
                new GraphQlFieldMetadata { Name = "address2_country" },
                new GraphQlFieldMetadata { Name = "address2_county" },
                new GraphQlFieldMetadata { Name = "address2_fax" },
                new GraphQlFieldMetadata { Name = "address2_freighttermscode" },
                new GraphQlFieldMetadata { Name = "address2_latitude" },
                new GraphQlFieldMetadata { Name = "address2_line1" },
                new GraphQlFieldMetadata { Name = "address2_line2" },
                new GraphQlFieldMetadata { Name = "address2_line3" },
                new GraphQlFieldMetadata { Name = "address2_longitude" },
                new GraphQlFieldMetadata { Name = "address2_name" },
                new GraphQlFieldMetadata { Name = "address2_postalcode" },
                new GraphQlFieldMetadata { Name = "address2_postofficebox" },
                new GraphQlFieldMetadata { Name = "address2_primarycontactname" },
                new GraphQlFieldMetadata { Name = "address2_shippingmethodcode" },
                new GraphQlFieldMetadata { Name = "address2_stateorprovince" },
                new GraphQlFieldMetadata { Name = "address2_telephone1" },
                new GraphQlFieldMetadata { Name = "address2_telephone2" },
                new GraphQlFieldMetadata { Name = "address2_telephone3" },
                new GraphQlFieldMetadata { Name = "address2_upszone" },
                new GraphQlFieldMetadata { Name = "address2_utcoffset" },
                new GraphQlFieldMetadata { Name = "aging30" },
                new GraphQlFieldMetadata { Name = "aging30_base" },
                new GraphQlFieldMetadata { Name = "aging60" },
                new GraphQlFieldMetadata { Name = "aging60_base" },
                new GraphQlFieldMetadata { Name = "aging90" },
                new GraphQlFieldMetadata { Name = "aging90_base" },
                new GraphQlFieldMetadata { Name = "businesstypecode" },
                new GraphQlFieldMetadata { Name = "subscriptions", IsComplex = true, QueryBuilderType = typeof(SubscriptionQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_cr68c_productsubscription_value" },
                new GraphQlFieldMetadata { Name = "cr68c_thetaproductsexternalaccountid" },
                new GraphQlFieldMetadata { Name = "_createdby_value", IsComplex = true, QueryBuilderType = typeof(SystemUserQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_createdbyexternalparty_value" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "_createdonbehalfby_value" },
                new GraphQlFieldMetadata { Name = "creditlimit" },
                new GraphQlFieldMetadata { Name = "creditlimit_base" },
                new GraphQlFieldMetadata { Name = "creditonhold" },
                new GraphQlFieldMetadata { Name = "customersizecode" },
                new GraphQlFieldMetadata { Name = "customertypecode" },
                new GraphQlFieldMetadata { Name = "_defaultpricelevelid_value" },
                new GraphQlFieldMetadata { Name = "description" },
                new GraphQlFieldMetadata { Name = "donotbulkemail" },
                new GraphQlFieldMetadata { Name = "donotbulkpostalmail" },
                new GraphQlFieldMetadata { Name = "donotemail" },
                new GraphQlFieldMetadata { Name = "donotfax" },
                new GraphQlFieldMetadata { Name = "donotphone" },
                new GraphQlFieldMetadata { Name = "donotpostalmail" },
                new GraphQlFieldMetadata { Name = "donotsendmm" },
                new GraphQlFieldMetadata { Name = "emailaddress1" },
                new GraphQlFieldMetadata { Name = "emailaddress2" },
                new GraphQlFieldMetadata { Name = "emailaddress3" },
                new GraphQlFieldMetadata { Name = "entityimage" },
                new GraphQlFieldMetadata { Name = "entityimageid" },
                new GraphQlFieldMetadata { Name = "exchangerate" },
                new GraphQlFieldMetadata { Name = "fax" },
                new GraphQlFieldMetadata { Name = "followemail" },
                new GraphQlFieldMetadata { Name = "ftpsiteurl" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "industrycode" },
                new GraphQlFieldMetadata { Name = "lastonholdtime" },
                new GraphQlFieldMetadata { Name = "lastusedincampaign" },
                new GraphQlFieldMetadata { Name = "marketcap" },
                new GraphQlFieldMetadata { Name = "marketcap_base" },
                new GraphQlFieldMetadata { Name = "marketingonly" },
                new GraphQlFieldMetadata { Name = "_masterid_value", IsComplex = true, QueryBuilderType = typeof(AccountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "merged" },
                new GraphQlFieldMetadata { Name = "_modifiedby_value" },
                new GraphQlFieldMetadata { Name = "_modifiedbyexternalparty_value" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "_modifiedonbehalfby_value" },
                new GraphQlFieldMetadata { Name = "_msdyn_accountkpiid_value" },
                new GraphQlFieldMetadata { Name = "msdyn_gdproptout" },
                new GraphQlFieldMetadata { Name = "_msdyn_salesaccelerationinsightid_value" },
                new GraphQlFieldMetadata { Name = "_msdyn_segmentid_value" },
                new GraphQlFieldMetadata { Name = "msdyncrm_insights_placeholder" },
                new GraphQlFieldMetadata { Name = "msevtmgt_hotelgroup" },
                new GraphQlFieldMetadata { Name = "msevtmgt_rentalcarprovider" },
                new GraphQlFieldMetadata { Name = "msft_datastate" },
                new GraphQlFieldMetadata { Name = "name" },
                new GraphQlFieldMetadata { Name = "numberofemployees" },
                new GraphQlFieldMetadata { Name = "onholdtime" },
                new GraphQlFieldMetadata { Name = "opendeals" },
                new GraphQlFieldMetadata { Name = "opendeals_date" },
                new GraphQlFieldMetadata { Name = "opendeals_state" },
                new GraphQlFieldMetadata { Name = "openrevenue" },
                new GraphQlFieldMetadata { Name = "openrevenue_base" },
                new GraphQlFieldMetadata { Name = "openrevenue_date" },
                new GraphQlFieldMetadata { Name = "openrevenue_state" },
                new GraphQlFieldMetadata { Name = "_originatingleadid_value" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "_ownerid_value", IsComplex = true, QueryBuilderType = typeof(SystemUserQueryBuilder) },
                new GraphQlFieldMetadata { Name = "ownershipcode" },
                new GraphQlFieldMetadata { Name = "_owningbusinessunit_value", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_owningteam_value", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_owninguser_value", IsComplex = true, QueryBuilderType = typeof(SystemUserQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_parentaccountid_value", IsComplex = true, QueryBuilderType = typeof(AccountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "participatesinworkflow" },
                new GraphQlFieldMetadata { Name = "paymenttermscode" },
                new GraphQlFieldMetadata { Name = "preferredappointmentdaycode" },
                new GraphQlFieldMetadata { Name = "preferredappointmenttimecode" },
                new GraphQlFieldMetadata { Name = "preferredcontactmethodcode" },
                new GraphQlFieldMetadata { Name = "_preferredequipmentid_value" },
                new GraphQlFieldMetadata { Name = "_preferredserviceid_value" },
                new GraphQlFieldMetadata { Name = "_preferredsystemuserid_value" },
                new GraphQlFieldMetadata { Name = "_primarycontactid_value", IsComplex = true, QueryBuilderType = typeof(ContactQueryBuilder) },
                new GraphQlFieldMetadata { Name = "primarysatoriid" },
                new GraphQlFieldMetadata { Name = "primarytwitterid" },
                new GraphQlFieldMetadata { Name = "processid" },
                new GraphQlFieldMetadata { Name = "revenue" },
                new GraphQlFieldMetadata { Name = "revenue_base" },
                new GraphQlFieldMetadata { Name = "sharesoutstanding" },
                new GraphQlFieldMetadata { Name = "shippingmethodcode" },
                new GraphQlFieldMetadata { Name = "sic" },
                new GraphQlFieldMetadata { Name = "_slaid_value" },
                new GraphQlFieldMetadata { Name = "_slainvokedid_value" },
                new GraphQlFieldMetadata { Name = "stageid" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "stockexchange" },
                new GraphQlFieldMetadata { Name = "teamsfollowed" },
                new GraphQlFieldMetadata { Name = "telephone1" },
                new GraphQlFieldMetadata { Name = "telephone2" },
                new GraphQlFieldMetadata { Name = "telephone3" },
                new GraphQlFieldMetadata { Name = "territorycode" },
                new GraphQlFieldMetadata { Name = "_territoryid_value" },
                new GraphQlFieldMetadata { Name = "the_address1_building" },
                new GraphQlFieldMetadata { Name = "the_address1floor" },
                new GraphQlFieldMetadata { Name = "the_address1payername" },
                new GraphQlFieldMetadata { Name = "the_address1room" },
                new GraphQlFieldMetadata { Name = "the_paymentprovidercustomerid" },
                new GraphQlFieldMetadata { Name = "the_paymentprovidername" },
                new GraphQlFieldMetadata { Name = "tickersymbol" },
                new GraphQlFieldMetadata { Name = "timespentbymeonemailandmeetings" },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "_transactioncurrencyid_value" },
                new GraphQlFieldMetadata { Name = "traversedpath" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" },
                new GraphQlFieldMetadata { Name = "websiteurl" },
                new GraphQlFieldMetadata { Name = "yominame" }
            };

        protected override string TypeName { get { return "Account"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public AccountQueryBuilder WithAccountcategorycode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("accountcategorycode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAccountcategorycode()
        {
            return ExceptField("accountcategorycode");
        }

        public AccountQueryBuilder WithAccountclassificationcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("accountclassificationcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAccountclassificationcode()
        {
            return ExceptField("accountclassificationcode");
        }

        public AccountQueryBuilder WithAccountid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("accountid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAccountid()
        {
            return ExceptField("accountid");
        }

        public AccountQueryBuilder WithAccountnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("accountnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAccountnumber()
        {
            return ExceptField("accountnumber");
        }

        public AccountQueryBuilder WithAccountratingcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("accountratingcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAccountratingcode()
        {
            return ExceptField("accountratingcode");
        }

        public AccountQueryBuilder WithAddress1Addressid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_addressid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Addressid()
        {
            return ExceptField("address1_addressid");
        }

        public AccountQueryBuilder WithAddress1Addresstypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_addresstypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Addresstypecode()
        {
            return ExceptField("address1_addresstypecode");
        }

        public AccountQueryBuilder WithAddress1City(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_city", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1City()
        {
            return ExceptField("address1_city");
        }

        public AccountQueryBuilder WithAddress1Composite(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_composite", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Composite()
        {
            return ExceptField("address1_composite");
        }

        public AccountQueryBuilder WithAddress1Country(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_country", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Country()
        {
            return ExceptField("address1_country");
        }

        public AccountQueryBuilder WithAddress1County(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_county", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1County()
        {
            return ExceptField("address1_county");
        }

        public AccountQueryBuilder WithAddress1Fax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_fax", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Fax()
        {
            return ExceptField("address1_fax");
        }

        public AccountQueryBuilder WithAddress1Freighttermscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_freighttermscode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Freighttermscode()
        {
            return ExceptField("address1_freighttermscode");
        }

        public AccountQueryBuilder WithAddress1Latitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_latitude", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Latitude()
        {
            return ExceptField("address1_latitude");
        }

        public AccountQueryBuilder WithAddress1Line1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line1", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Line1()
        {
            return ExceptField("address1_line1");
        }

        public AccountQueryBuilder WithAddress1Line2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line2", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Line2()
        {
            return ExceptField("address1_line2");
        }

        public AccountQueryBuilder WithAddress1Line3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line3", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Line3()
        {
            return ExceptField("address1_line3");
        }

        public AccountQueryBuilder WithAddress1Longitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_longitude", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Longitude()
        {
            return ExceptField("address1_longitude");
        }

        public AccountQueryBuilder WithAddress1Name(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_name", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Name()
        {
            return ExceptField("address1_name");
        }

        public AccountQueryBuilder WithAddress1Postalcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_postalcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Postalcode()
        {
            return ExceptField("address1_postalcode");
        }

        public AccountQueryBuilder WithAddress1Postofficebox(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_postofficebox", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Postofficebox()
        {
            return ExceptField("address1_postofficebox");
        }

        public AccountQueryBuilder WithAddress1Primarycontactname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_primarycontactname", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Primarycontactname()
        {
            return ExceptField("address1_primarycontactname");
        }

        public AccountQueryBuilder WithAddress1Shippingmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_shippingmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Shippingmethodcode()
        {
            return ExceptField("address1_shippingmethodcode");
        }

        public AccountQueryBuilder WithAddress1Stateorprovince(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_stateorprovince", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Stateorprovince()
        {
            return ExceptField("address1_stateorprovince");
        }

        public AccountQueryBuilder WithAddress1Telephone1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone1", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Telephone1()
        {
            return ExceptField("address1_telephone1");
        }

        public AccountQueryBuilder WithAddress1Telephone2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone2", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Telephone2()
        {
            return ExceptField("address1_telephone2");
        }

        public AccountQueryBuilder WithAddress1Telephone3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone3", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Telephone3()
        {
            return ExceptField("address1_telephone3");
        }

        public AccountQueryBuilder WithAddress1Upszone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_upszone", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Upszone()
        {
            return ExceptField("address1_upszone");
        }

        public AccountQueryBuilder WithAddress1Utcoffset(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_utcoffset", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress1Utcoffset()
        {
            return ExceptField("address1_utcoffset");
        }

        public AccountQueryBuilder WithAddress2Addressid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_addressid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Addressid()
        {
            return ExceptField("address2_addressid");
        }

        public AccountQueryBuilder WithAddress2Addresstypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_addresstypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Addresstypecode()
        {
            return ExceptField("address2_addresstypecode");
        }

        public AccountQueryBuilder WithAddress2City(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_city", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2City()
        {
            return ExceptField("address2_city");
        }

        public AccountQueryBuilder WithAddress2Composite(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_composite", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Composite()
        {
            return ExceptField("address2_composite");
        }

        public AccountQueryBuilder WithAddress2Country(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_country", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Country()
        {
            return ExceptField("address2_country");
        }

        public AccountQueryBuilder WithAddress2County(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_county", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2County()
        {
            return ExceptField("address2_county");
        }

        public AccountQueryBuilder WithAddress2Fax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_fax", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Fax()
        {
            return ExceptField("address2_fax");
        }

        public AccountQueryBuilder WithAddress2Freighttermscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_freighttermscode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Freighttermscode()
        {
            return ExceptField("address2_freighttermscode");
        }

        public AccountQueryBuilder WithAddress2Latitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_latitude", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Latitude()
        {
            return ExceptField("address2_latitude");
        }

        public AccountQueryBuilder WithAddress2Line1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line1", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Line1()
        {
            return ExceptField("address2_line1");
        }

        public AccountQueryBuilder WithAddress2Line2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line2", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Line2()
        {
            return ExceptField("address2_line2");
        }

        public AccountQueryBuilder WithAddress2Line3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line3", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Line3()
        {
            return ExceptField("address2_line3");
        }

        public AccountQueryBuilder WithAddress2Longitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_longitude", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Longitude()
        {
            return ExceptField("address2_longitude");
        }

        public AccountQueryBuilder WithAddress2Name(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_name", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Name()
        {
            return ExceptField("address2_name");
        }

        public AccountQueryBuilder WithAddress2Postalcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_postalcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Postalcode()
        {
            return ExceptField("address2_postalcode");
        }

        public AccountQueryBuilder WithAddress2Postofficebox(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_postofficebox", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Postofficebox()
        {
            return ExceptField("address2_postofficebox");
        }

        public AccountQueryBuilder WithAddress2Primarycontactname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_primarycontactname", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Primarycontactname()
        {
            return ExceptField("address2_primarycontactname");
        }

        public AccountQueryBuilder WithAddress2Shippingmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_shippingmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Shippingmethodcode()
        {
            return ExceptField("address2_shippingmethodcode");
        }

        public AccountQueryBuilder WithAddress2Stateorprovince(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_stateorprovince", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Stateorprovince()
        {
            return ExceptField("address2_stateorprovince");
        }

        public AccountQueryBuilder WithAddress2Telephone1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone1", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Telephone1()
        {
            return ExceptField("address2_telephone1");
        }

        public AccountQueryBuilder WithAddress2Telephone2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone2", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Telephone2()
        {
            return ExceptField("address2_telephone2");
        }

        public AccountQueryBuilder WithAddress2Telephone3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone3", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Telephone3()
        {
            return ExceptField("address2_telephone3");
        }

        public AccountQueryBuilder WithAddress2Upszone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_upszone", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Upszone()
        {
            return ExceptField("address2_upszone");
        }

        public AccountQueryBuilder WithAddress2Utcoffset(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_utcoffset", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAddress2Utcoffset()
        {
            return ExceptField("address2_utcoffset");
        }

        public AccountQueryBuilder WithAging30(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging30", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAging30()
        {
            return ExceptField("aging30");
        }

        public AccountQueryBuilder WithAging30Base(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging30_base", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAging30Base()
        {
            return ExceptField("aging30_base");
        }

        public AccountQueryBuilder WithAging60(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging60", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAging60()
        {
            return ExceptField("aging60");
        }

        public AccountQueryBuilder WithAging60Base(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging60_base", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAging60Base()
        {
            return ExceptField("aging60_base");
        }

        public AccountQueryBuilder WithAging90(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging90", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAging90()
        {
            return ExceptField("aging90");
        }

        public AccountQueryBuilder WithAging90Base(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging90_base", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptAging90Base()
        {
            return ExceptField("aging90_base");
        }

        public AccountQueryBuilder WithBusinesstypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("businesstypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptBusinesstypecode()
        {
            return ExceptField("businesstypecode");
        }

        public AccountQueryBuilder WithSubscriptions(SubscriptionQueryBuilder subscriptionQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("subscriptions", alias, subscriptionQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptSubscriptions()
        {
            return ExceptField("subscriptions");
        }

        public AccountQueryBuilder WithCr68CProductsubscriptionValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_cr68c_productsubscription_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCr68CProductsubscriptionValue()
        {
            return ExceptField("_cr68c_productsubscription_value");
        }

        public AccountQueryBuilder WithCr68CThetaproductsexternalaccountid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cr68c_thetaproductsexternalaccountid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCr68CThetaproductsexternalaccountid()
        {
            return ExceptField("cr68c_thetaproductsexternalaccountid");
        }

        public AccountQueryBuilder WithCreatedbyValue(SystemUserQueryBuilder systemUserQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_createdby_value", alias, systemUserQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCreatedbyValue()
        {
            return ExceptField("_createdby_value");
        }

        public AccountQueryBuilder WithCreatedbyexternalpartyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_createdbyexternalparty_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCreatedbyexternalpartyValue()
        {
            return ExceptField("_createdbyexternalparty_value");
        }

        public AccountQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public AccountQueryBuilder WithCreatedonbehalfbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_createdonbehalfby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCreatedonbehalfbyValue()
        {
            return ExceptField("_createdonbehalfby_value");
        }

        public AccountQueryBuilder WithCreditlimit(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creditlimit", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCreditlimit()
        {
            return ExceptField("creditlimit");
        }

        public AccountQueryBuilder WithCreditlimitBase(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creditlimit_base", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCreditlimitBase()
        {
            return ExceptField("creditlimit_base");
        }

        public AccountQueryBuilder WithCreditonhold(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creditonhold", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCreditonhold()
        {
            return ExceptField("creditonhold");
        }

        public AccountQueryBuilder WithCustomersizecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("customersizecode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCustomersizecode()
        {
            return ExceptField("customersizecode");
        }

        public AccountQueryBuilder WithCustomertypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("customertypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptCustomertypecode()
        {
            return ExceptField("customertypecode");
        }

        public AccountQueryBuilder WithDefaultpricelevelidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_defaultpricelevelid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDefaultpricelevelidValue()
        {
            return ExceptField("_defaultpricelevelid_value");
        }

        public AccountQueryBuilder WithDescription(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("description", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDescription()
        {
            return ExceptField("description");
        }

        public AccountQueryBuilder WithDonotbulkemail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotbulkemail", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDonotbulkemail()
        {
            return ExceptField("donotbulkemail");
        }

        public AccountQueryBuilder WithDonotbulkpostalmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotbulkpostalmail", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDonotbulkpostalmail()
        {
            return ExceptField("donotbulkpostalmail");
        }

        public AccountQueryBuilder WithDonotemail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotemail", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDonotemail()
        {
            return ExceptField("donotemail");
        }

        public AccountQueryBuilder WithDonotfax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotfax", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDonotfax()
        {
            return ExceptField("donotfax");
        }

        public AccountQueryBuilder WithDonotphone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotphone", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDonotphone()
        {
            return ExceptField("donotphone");
        }

        public AccountQueryBuilder WithDonotpostalmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotpostalmail", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDonotpostalmail()
        {
            return ExceptField("donotpostalmail");
        }

        public AccountQueryBuilder WithDonotsendmm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotsendmm", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptDonotsendmm()
        {
            return ExceptField("donotsendmm");
        }

        public AccountQueryBuilder WithEmailaddress1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailaddress1", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptEmailaddress1()
        {
            return ExceptField("emailaddress1");
        }

        public AccountQueryBuilder WithEmailaddress2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailaddress2", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptEmailaddress2()
        {
            return ExceptField("emailaddress2");
        }

        public AccountQueryBuilder WithEmailaddress3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailaddress3", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptEmailaddress3()
        {
            return ExceptField("emailaddress3");
        }

        public AccountQueryBuilder WithEntityimage(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("entityimage", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptEntityimage()
        {
            return ExceptField("entityimage");
        }

        public AccountQueryBuilder WithEntityimageid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("entityimageid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptEntityimageid()
        {
            return ExceptField("entityimageid");
        }

        public AccountQueryBuilder WithExchangerate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("exchangerate", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptExchangerate()
        {
            return ExceptField("exchangerate");
        }

        public AccountQueryBuilder WithFax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("fax", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptFax()
        {
            return ExceptField("fax");
        }

        public AccountQueryBuilder WithFollowemail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("followemail", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptFollowemail()
        {
            return ExceptField("followemail");
        }

        public AccountQueryBuilder WithFtpsiteurl(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ftpsiteurl", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptFtpsiteurl()
        {
            return ExceptField("ftpsiteurl");
        }

        public AccountQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public AccountQueryBuilder WithIndustrycode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("industrycode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptIndustrycode()
        {
            return ExceptField("industrycode");
        }

        public AccountQueryBuilder WithLastonholdtime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastonholdtime", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptLastonholdtime()
        {
            return ExceptField("lastonholdtime");
        }

        public AccountQueryBuilder WithLastusedincampaign(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastusedincampaign", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptLastusedincampaign()
        {
            return ExceptField("lastusedincampaign");
        }

        public AccountQueryBuilder WithMarketcap(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("marketcap", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMarketcap()
        {
            return ExceptField("marketcap");
        }

        public AccountQueryBuilder WithMarketcapBase(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("marketcap_base", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMarketcapBase()
        {
            return ExceptField("marketcap_base");
        }

        public AccountQueryBuilder WithMarketingonly(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("marketingonly", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMarketingonly()
        {
            return ExceptField("marketingonly");
        }

        public AccountQueryBuilder WithMasteridValue(AccountQueryBuilder accountQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_masterid_value", alias, accountQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMasteridValue()
        {
            return ExceptField("_masterid_value");
        }

        public AccountQueryBuilder WithMerged(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("merged", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMerged()
        {
            return ExceptField("merged");
        }

        public AccountQueryBuilder WithModifiedbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptModifiedbyValue()
        {
            return ExceptField("_modifiedby_value");
        }

        public AccountQueryBuilder WithModifiedbyexternalpartyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedbyexternalparty_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptModifiedbyexternalpartyValue()
        {
            return ExceptField("_modifiedbyexternalparty_value");
        }

        public AccountQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public AccountQueryBuilder WithModifiedonbehalfbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedonbehalfby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptModifiedonbehalfbyValue()
        {
            return ExceptField("_modifiedonbehalfby_value");
        }

        public AccountQueryBuilder WithMsdynAccountkpiidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_msdyn_accountkpiid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMsdynAccountkpiidValue()
        {
            return ExceptField("_msdyn_accountkpiid_value");
        }

        public AccountQueryBuilder WithMsdynGdproptout(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("msdyn_gdproptout", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMsdynGdproptout()
        {
            return ExceptField("msdyn_gdproptout");
        }

        public AccountQueryBuilder WithMsdynSalesaccelerationinsightidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_msdyn_salesaccelerationinsightid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMsdynSalesaccelerationinsightidValue()
        {
            return ExceptField("_msdyn_salesaccelerationinsightid_value");
        }

        public AccountQueryBuilder WithMsdynSegmentidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_msdyn_segmentid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMsdynSegmentidValue()
        {
            return ExceptField("_msdyn_segmentid_value");
        }

        public AccountQueryBuilder WithMsdyncrmInsightsPlaceholder(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("msdyncrm_insights_placeholder", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMsdyncrmInsightsPlaceholder()
        {
            return ExceptField("msdyncrm_insights_placeholder");
        }

        public AccountQueryBuilder WithMsevtmgtHotelgroup(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("msevtmgt_hotelgroup", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMsevtmgtHotelgroup()
        {
            return ExceptField("msevtmgt_hotelgroup");
        }

        public AccountQueryBuilder WithMsevtmgtRentalcarprovider(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("msevtmgt_rentalcarprovider", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMsevtmgtRentalcarprovider()
        {
            return ExceptField("msevtmgt_rentalcarprovider");
        }

        public AccountQueryBuilder WithMsftDatastate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("msft_datastate", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptMsftDatastate()
        {
            return ExceptField("msft_datastate");
        }

        public AccountQueryBuilder WithName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("name", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptName()
        {
            return ExceptField("name");
        }

        public AccountQueryBuilder WithNumberofemployees(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numberofemployees", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptNumberofemployees()
        {
            return ExceptField("numberofemployees");
        }

        public AccountQueryBuilder WithOnholdtime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("onholdtime", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOnholdtime()
        {
            return ExceptField("onholdtime");
        }

        public AccountQueryBuilder WithOpendeals(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("opendeals", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOpendeals()
        {
            return ExceptField("opendeals");
        }

        public AccountQueryBuilder WithOpendealsDate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("opendeals_date", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOpendealsDate()
        {
            return ExceptField("opendeals_date");
        }

        public AccountQueryBuilder WithOpendealsState(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("opendeals_state", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOpendealsState()
        {
            return ExceptField("opendeals_state");
        }

        public AccountQueryBuilder WithOpenrevenue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("openrevenue", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOpenrevenue()
        {
            return ExceptField("openrevenue");
        }

        public AccountQueryBuilder WithOpenrevenueBase(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("openrevenue_base", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOpenrevenueBase()
        {
            return ExceptField("openrevenue_base");
        }

        public AccountQueryBuilder WithOpenrevenueDate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("openrevenue_date", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOpenrevenueDate()
        {
            return ExceptField("openrevenue_date");
        }

        public AccountQueryBuilder WithOpenrevenueState(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("openrevenue_state", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOpenrevenueState()
        {
            return ExceptField("openrevenue_state");
        }

        public AccountQueryBuilder WithOriginatingleadidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_originatingleadid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOriginatingleadidValue()
        {
            return ExceptField("_originatingleadid_value");
        }

        public AccountQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public AccountQueryBuilder WithOwneridValue(SystemUserQueryBuilder systemUserQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_ownerid_value", alias, systemUserQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOwneridValue()
        {
            return ExceptField("_ownerid_value");
        }

        public AccountQueryBuilder WithOwnershipcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ownershipcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOwnershipcode()
        {
            return ExceptField("ownershipcode");
        }

        public AccountQueryBuilder WithOwningbusinessunitValue(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_owningbusinessunit_value", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOwningbusinessunitValue()
        {
            return ExceptField("_owningbusinessunit_value");
        }

        public AccountQueryBuilder WithOwningteamValue(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_owningteam_value", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOwningteamValue()
        {
            return ExceptField("_owningteam_value");
        }

        public AccountQueryBuilder WithOwninguserValue(SystemUserQueryBuilder systemUserQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_owninguser_value", alias, systemUserQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptOwninguserValue()
        {
            return ExceptField("_owninguser_value");
        }

        public AccountQueryBuilder WithParentaccountidValue(AccountQueryBuilder accountQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_parentaccountid_value", alias, accountQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptParentaccountidValue()
        {
            return ExceptField("_parentaccountid_value");
        }

        public AccountQueryBuilder WithParticipatesinworkflow(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("participatesinworkflow", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptParticipatesinworkflow()
        {
            return ExceptField("participatesinworkflow");
        }

        public AccountQueryBuilder WithPaymenttermscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("paymenttermscode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPaymenttermscode()
        {
            return ExceptField("paymenttermscode");
        }

        public AccountQueryBuilder WithPreferredappointmentdaycode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredappointmentdaycode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPreferredappointmentdaycode()
        {
            return ExceptField("preferredappointmentdaycode");
        }

        public AccountQueryBuilder WithPreferredappointmenttimecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredappointmenttimecode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPreferredappointmenttimecode()
        {
            return ExceptField("preferredappointmenttimecode");
        }

        public AccountQueryBuilder WithPreferredcontactmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredcontactmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPreferredcontactmethodcode()
        {
            return ExceptField("preferredcontactmethodcode");
        }

        public AccountQueryBuilder WithPreferredequipmentidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_preferredequipmentid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPreferredequipmentidValue()
        {
            return ExceptField("_preferredequipmentid_value");
        }

        public AccountQueryBuilder WithPreferredserviceidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_preferredserviceid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPreferredserviceidValue()
        {
            return ExceptField("_preferredserviceid_value");
        }

        public AccountQueryBuilder WithPreferredsystemuseridValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_preferredsystemuserid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPreferredsystemuseridValue()
        {
            return ExceptField("_preferredsystemuserid_value");
        }

        public AccountQueryBuilder WithPrimarycontactidValue(ContactQueryBuilder contactQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_primarycontactid_value", alias, contactQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPrimarycontactidValue()
        {
            return ExceptField("_primarycontactid_value");
        }

        public AccountQueryBuilder WithPrimarysatoriid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("primarysatoriid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPrimarysatoriid()
        {
            return ExceptField("primarysatoriid");
        }

        public AccountQueryBuilder WithPrimarytwitterid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("primarytwitterid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptPrimarytwitterid()
        {
            return ExceptField("primarytwitterid");
        }

        public AccountQueryBuilder WithProcessid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("processid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptProcessid()
        {
            return ExceptField("processid");
        }

        public AccountQueryBuilder WithRevenue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("revenue", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptRevenue()
        {
            return ExceptField("revenue");
        }

        public AccountQueryBuilder WithRevenueBase(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("revenue_base", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptRevenueBase()
        {
            return ExceptField("revenue_base");
        }

        public AccountQueryBuilder WithSharesoutstanding(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("sharesoutstanding", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptSharesoutstanding()
        {
            return ExceptField("sharesoutstanding");
        }

        public AccountQueryBuilder WithShippingmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("shippingmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptShippingmethodcode()
        {
            return ExceptField("shippingmethodcode");
        }

        public AccountQueryBuilder WithSic(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("sic", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptSic()
        {
            return ExceptField("sic");
        }

        public AccountQueryBuilder WithSlaidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_slaid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptSlaidValue()
        {
            return ExceptField("_slaid_value");
        }

        public AccountQueryBuilder WithSlainvokedidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_slainvokedid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptSlainvokedidValue()
        {
            return ExceptField("_slainvokedid_value");
        }

        public AccountQueryBuilder WithStageid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("stageid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptStageid()
        {
            return ExceptField("stageid");
        }

        public AccountQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public AccountQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public AccountQueryBuilder WithStockexchange(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("stockexchange", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptStockexchange()
        {
            return ExceptField("stockexchange");
        }

        public AccountQueryBuilder WithTeamsfollowed(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("teamsfollowed", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTeamsfollowed()
        {
            return ExceptField("teamsfollowed");
        }

        public AccountQueryBuilder WithTelephone1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("telephone1", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTelephone1()
        {
            return ExceptField("telephone1");
        }

        public AccountQueryBuilder WithTelephone2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("telephone2", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTelephone2()
        {
            return ExceptField("telephone2");
        }

        public AccountQueryBuilder WithTelephone3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("telephone3", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTelephone3()
        {
            return ExceptField("telephone3");
        }

        public AccountQueryBuilder WithTerritorycode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("territorycode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTerritorycode()
        {
            return ExceptField("territorycode");
        }

        public AccountQueryBuilder WithTerritoryidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_territoryid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTerritoryidValue()
        {
            return ExceptField("_territoryid_value");
        }

        public AccountQueryBuilder WithTheAddress1Building(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_address1_building", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTheAddress1Building()
        {
            return ExceptField("the_address1_building");
        }

        public AccountQueryBuilder WithTheAddress1Floor(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_address1floor", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTheAddress1Floor()
        {
            return ExceptField("the_address1floor");
        }

        public AccountQueryBuilder WithTheAddress1Payername(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_address1payername", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTheAddress1Payername()
        {
            return ExceptField("the_address1payername");
        }

        public AccountQueryBuilder WithTheAddress1Room(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_address1room", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTheAddress1Room()
        {
            return ExceptField("the_address1room");
        }

        public AccountQueryBuilder WithThePaymentprovidercustomerid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_paymentprovidercustomerid", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptThePaymentprovidercustomerid()
        {
            return ExceptField("the_paymentprovidercustomerid");
        }

        public AccountQueryBuilder WithThePaymentprovidername(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_paymentprovidername", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptThePaymentprovidername()
        {
            return ExceptField("the_paymentprovidername");
        }

        public AccountQueryBuilder WithTickersymbol(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("tickersymbol", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTickersymbol()
        {
            return ExceptField("tickersymbol");
        }

        public AccountQueryBuilder WithTimespentbymeonemailandmeetings(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timespentbymeonemailandmeetings", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTimespentbymeonemailandmeetings()
        {
            return ExceptField("timespentbymeonemailandmeetings");
        }

        public AccountQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public AccountQueryBuilder WithTransactioncurrencyidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_transactioncurrencyid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTransactioncurrencyidValue()
        {
            return ExceptField("_transactioncurrencyid_value");
        }

        public AccountQueryBuilder WithTraversedpath(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("traversedpath", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptTraversedpath()
        {
            return ExceptField("traversedpath");
        }

        public AccountQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public AccountQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }

        public AccountQueryBuilder WithWebsiteurl(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("websiteurl", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptWebsiteurl()
        {
            return ExceptField("websiteurl");
        }

        public AccountQueryBuilder WithYominame(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("yominame", alias, new GraphQlDirective[] { include, skip });
        }

        public AccountQueryBuilder ExceptYominame()
        {
            return ExceptField("yominame");
        }
    }

    public partial class RoleReferenceQueryBuilder : GraphQlQueryBuilder<RoleReferenceQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "_createdby_value" },
                new GraphQlFieldMetadata { Name = "createdon", IsComplex = true },
                new GraphQlFieldMetadata { Name = "_createdonbehalfby_value" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "_modifiedby_value" },
                new GraphQlFieldMetadata { Name = "modifiedon", IsComplex = true },
                new GraphQlFieldMetadata { Name = "_modifiedonbehalfby_value" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon", IsComplex = true },
                new GraphQlFieldMetadata { Name = "_ownerid_value" },
                new GraphQlFieldMetadata { Name = "_owningbusinessunit_value", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_owningteam_value", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_owninguser_value" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "the_isoperational" },
                new GraphQlFieldMetadata { Name = "the_isroleadditive" },
                new GraphQlFieldMetadata { Name = "the_name" },
                new GraphQlFieldMetadata { Name = "the_rolereferenceid" },
                new GraphQlFieldMetadata { Name = "_the_subscriptionproduct_value", IsComplex = true, QueryBuilderType = typeof(SubscriptionProductQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" }
            };

        protected override string TypeName { get { return "RoleReference"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public RoleReferenceQueryBuilder WithCreatedbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_createdby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptCreatedbyValue()
        {
            return ExceptField("_createdby_value");
        }

        public RoleReferenceQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public RoleReferenceQueryBuilder WithCreatedonbehalfbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_createdonbehalfby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptCreatedonbehalfbyValue()
        {
            return ExceptField("_createdonbehalfby_value");
        }

        public RoleReferenceQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public RoleReferenceQueryBuilder WithModifiedbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptModifiedbyValue()
        {
            return ExceptField("_modifiedby_value");
        }

        public RoleReferenceQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public RoleReferenceQueryBuilder WithModifiedonbehalfbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedonbehalfby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptModifiedonbehalfbyValue()
        {
            return ExceptField("_modifiedonbehalfby_value");
        }

        public RoleReferenceQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public RoleReferenceQueryBuilder WithOwneridValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_ownerid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptOwneridValue()
        {
            return ExceptField("_ownerid_value");
        }

        public RoleReferenceQueryBuilder WithOwningbusinessunitValue(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_owningbusinessunit_value", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptOwningbusinessunitValue()
        {
            return ExceptField("_owningbusinessunit_value");
        }

        public RoleReferenceQueryBuilder WithOwningteamValue(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_owningteam_value", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptOwningteamValue()
        {
            return ExceptField("_owningteam_value");
        }

        public RoleReferenceQueryBuilder WithOwninguserValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_owninguser_value", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptOwninguserValue()
        {
            return ExceptField("_owninguser_value");
        }

        public RoleReferenceQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public RoleReferenceQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public RoleReferenceQueryBuilder WithTheIsoperational(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_isoperational", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptTheIsoperational()
        {
            return ExceptField("the_isoperational");
        }

        public RoleReferenceQueryBuilder WithTheIsroleadditive(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_isroleadditive", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptTheIsroleadditive()
        {
            return ExceptField("the_isroleadditive");
        }

        public RoleReferenceQueryBuilder WithTheName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_name", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptTheName()
        {
            return ExceptField("the_name");
        }

        public RoleReferenceQueryBuilder WithTheRolereferenceid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_rolereferenceid", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptTheRolereferenceid()
        {
            return ExceptField("the_rolereferenceid");
        }

        public RoleReferenceQueryBuilder WithTheSubscriptionproductValue(SubscriptionProductQueryBuilder subscriptionProductQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_the_subscriptionproduct_value", alias, subscriptionProductQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptTheSubscriptionproductValue()
        {
            return ExceptField("_the_subscriptionproduct_value");
        }

        public RoleReferenceQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public RoleReferenceQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public RoleReferenceQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public RoleReferenceQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }
    }

    public partial class SubscriptionProductQueryBuilder : GraphQlQueryBuilder<SubscriptionProductQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "_createdby_value" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "_createdonbehalfby_value" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "_modifiedby_value" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "_modifiedonbehalfby_value" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "_ownerid_value" },
                new GraphQlFieldMetadata { Name = "owningbusinessunit", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owningteam", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_owninguser_value" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "the_name" },
                new GraphQlFieldMetadata { Name = "the_subscriptionproductid" },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" }
            };

        protected override string TypeName { get { return "SubscriptionProduct"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public SubscriptionProductQueryBuilder WithCreatedbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_createdby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptCreatedbyValue()
        {
            return ExceptField("_createdby_value");
        }

        public SubscriptionProductQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public SubscriptionProductQueryBuilder WithCreatedonbehalfbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_createdonbehalfby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptCreatedonbehalfbyValue()
        {
            return ExceptField("_createdonbehalfby_value");
        }

        public SubscriptionProductQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public SubscriptionProductQueryBuilder WithModifiedbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptModifiedbyValue()
        {
            return ExceptField("_modifiedby_value");
        }

        public SubscriptionProductQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public SubscriptionProductQueryBuilder WithModifiedonbehalfbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedonbehalfby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptModifiedonbehalfbyValue()
        {
            return ExceptField("_modifiedonbehalfby_value");
        }

        public SubscriptionProductQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public SubscriptionProductQueryBuilder WithOwneridValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_ownerid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptOwneridValue()
        {
            return ExceptField("_ownerid_value");
        }

        public SubscriptionProductQueryBuilder WithOwningbusinessunit(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningbusinessunit", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptOwningbusinessunit()
        {
            return ExceptField("owningbusinessunit");
        }

        public SubscriptionProductQueryBuilder WithOwningteam(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningteam", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptOwningteam()
        {
            return ExceptField("owningteam");
        }

        public SubscriptionProductQueryBuilder WithOwninguserValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_owninguser_value", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptOwninguserValue()
        {
            return ExceptField("_owninguser_value");
        }

        public SubscriptionProductQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public SubscriptionProductQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public SubscriptionProductQueryBuilder WithTheName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_name", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptTheName()
        {
            return ExceptField("the_name");
        }

        public SubscriptionProductQueryBuilder WithTheSubscriptionproductid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_subscriptionproductid", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptTheSubscriptionproductid()
        {
            return ExceptField("the_subscriptionproductid");
        }

        public SubscriptionProductQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public SubscriptionProductQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public SubscriptionProductQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionProductQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }
    }

    public partial class SubscriptionComponentQueryBuilder : GraphQlQueryBuilder<SubscriptionComponentQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "createdby" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "createdonbehalfby" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "modifiedby" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "modifiedonbehalfby" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "ownerid" },
                new GraphQlFieldMetadata { Name = "owningbusinessunit", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owningteam", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owninguser" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "the_componentidexternal" },
                new GraphQlFieldMetadata { Name = "_cr68c_productsubscription_value" },
                new GraphQlFieldMetadata { Name = "the_memo" },
                new GraphQlFieldMetadata { Name = "the_name" },
                new GraphQlFieldMetadata { Name = "the_productcomponentreference", IsComplex = true, QueryBuilderType = typeof(ProductComponentReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "the_quantity" },
                new GraphQlFieldMetadata { Name = "the_subscriptioncomponentid" },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" }
            };

        protected override string TypeName { get { return "SubscriptionComponent"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public SubscriptionComponentQueryBuilder WithCreatedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptCreatedby()
        {
            return ExceptField("createdby");
        }

        public SubscriptionComponentQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public SubscriptionComponentQueryBuilder WithCreatedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptCreatedonbehalfby()
        {
            return ExceptField("createdonbehalfby");
        }

        public SubscriptionComponentQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public SubscriptionComponentQueryBuilder WithModifiedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptModifiedby()
        {
            return ExceptField("modifiedby");
        }

        public SubscriptionComponentQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public SubscriptionComponentQueryBuilder WithModifiedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptModifiedonbehalfby()
        {
            return ExceptField("modifiedonbehalfby");
        }

        public SubscriptionComponentQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public SubscriptionComponentQueryBuilder WithOwnerid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ownerid", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptOwnerid()
        {
            return ExceptField("ownerid");
        }

        public SubscriptionComponentQueryBuilder WithOwningbusinessunit(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningbusinessunit", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptOwningbusinessunit()
        {
            return ExceptField("owningbusinessunit");
        }

        public SubscriptionComponentQueryBuilder WithOwningteam(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningteam", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptOwningteam()
        {
            return ExceptField("owningteam");
        }

        public SubscriptionComponentQueryBuilder WithOwninguser(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("owninguser", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptOwninguser()
        {
            return ExceptField("owninguser");
        }

        public SubscriptionComponentQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public SubscriptionComponentQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public SubscriptionComponentQueryBuilder WithTheComponentidexternal(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_componentidexternal", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptTheComponentidexternal()
        {
            return ExceptField("the_componentidexternal");
        }

        public SubscriptionComponentQueryBuilder WithCr68CProductsubscriptionValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_cr68c_productsubscription_value", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptCr68CProductsubscriptionValue()
        {
            return ExceptField("_cr68c_productsubscription_value");
        }

        public SubscriptionComponentQueryBuilder WithTheMemo(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_memo", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptTheMemo()
        {
            return ExceptField("the_memo");
        }

        public SubscriptionComponentQueryBuilder WithTheName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_name", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptTheName()
        {
            return ExceptField("the_name");
        }

        public SubscriptionComponentQueryBuilder WithTheProductcomponentreference(ProductComponentReferenceQueryBuilder productComponentReferenceQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("the_productcomponentreference", alias, productComponentReferenceQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptTheProductcomponentreference()
        {
            return ExceptField("the_productcomponentreference");
        }

        public SubscriptionComponentQueryBuilder WithTheQuantity(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_quantity", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptTheQuantity()
        {
            return ExceptField("the_quantity");
        }

        public SubscriptionComponentQueryBuilder WithTheSubscriptioncomponentid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_subscriptioncomponentid", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptTheSubscriptioncomponentid()
        {
            return ExceptField("the_subscriptioncomponentid");
        }

        public SubscriptionComponentQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public SubscriptionComponentQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public SubscriptionComponentQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionComponentQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }
    }

    public partial class ProductComponentReferenceQueryBuilder : GraphQlQueryBuilder<ProductComponentReferenceQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "createdby" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "createdonbehalfby" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "modifiedby" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "modifiedonbehalfby" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "ownerid" },
                new GraphQlFieldMetadata { Name = "owningbusinessunit", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owningteam", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owninguser" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "the_name" },
                new GraphQlFieldMetadata { Name = "the_productcomponentreferenceid" },
                new GraphQlFieldMetadata { Name = "the_subscriptionproductid", IsComplex = true, QueryBuilderType = typeof(SubscriptionProductQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" }
            };

        protected override string TypeName { get { return "ProductComponentReference"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ProductComponentReferenceQueryBuilder WithCreatedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdby", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptCreatedby()
        {
            return ExceptField("createdby");
        }

        public ProductComponentReferenceQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public ProductComponentReferenceQueryBuilder WithCreatedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptCreatedonbehalfby()
        {
            return ExceptField("createdonbehalfby");
        }

        public ProductComponentReferenceQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public ProductComponentReferenceQueryBuilder WithModifiedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedby", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptModifiedby()
        {
            return ExceptField("modifiedby");
        }

        public ProductComponentReferenceQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public ProductComponentReferenceQueryBuilder WithModifiedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptModifiedonbehalfby()
        {
            return ExceptField("modifiedonbehalfby");
        }

        public ProductComponentReferenceQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public ProductComponentReferenceQueryBuilder WithOwnerid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ownerid", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptOwnerid()
        {
            return ExceptField("ownerid");
        }

        public ProductComponentReferenceQueryBuilder WithOwningbusinessunit(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningbusinessunit", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptOwningbusinessunit()
        {
            return ExceptField("owningbusinessunit");
        }

        public ProductComponentReferenceQueryBuilder WithOwningteam(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningteam", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptOwningteam()
        {
            return ExceptField("owningteam");
        }

        public ProductComponentReferenceQueryBuilder WithOwninguser(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("owninguser", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptOwninguser()
        {
            return ExceptField("owninguser");
        }

        public ProductComponentReferenceQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public ProductComponentReferenceQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public ProductComponentReferenceQueryBuilder WithTheName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_name", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptTheName()
        {
            return ExceptField("the_name");
        }

        public ProductComponentReferenceQueryBuilder WithTheProductcomponentreferenceid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_productcomponentreferenceid", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptTheProductcomponentreferenceid()
        {
            return ExceptField("the_productcomponentreferenceid");
        }

        public ProductComponentReferenceQueryBuilder WithTheSubscriptionproductid(SubscriptionProductQueryBuilder subscriptionProductQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("the_subscriptionproductid", alias, subscriptionProductQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptTheSubscriptionproductid()
        {
            return ExceptField("the_subscriptionproductid");
        }

        public ProductComponentReferenceQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public ProductComponentReferenceQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public ProductComponentReferenceQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductComponentReferenceQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }
    }

    public partial class ProductPlanReferenceQueryBuilder : GraphQlQueryBuilder<ProductPlanReferenceQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "_createdby_value" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "_createdonbehalfby_value" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "_modifiedby_value" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "_modifiedonbehalfby_value" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "_ownerid_value" },
                new GraphQlFieldMetadata { Name = "_owningbusinessunit_value", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_owningteam_value", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_owninguser_value" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "the_name" },
                new GraphQlFieldMetadata { Name = "the_productplanreferenceid" },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" }
            };

        protected override string TypeName { get { return "ProductPlanReference"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ProductPlanReferenceQueryBuilder WithCreatedbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_createdby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptCreatedbyValue()
        {
            return ExceptField("_createdby_value");
        }

        public ProductPlanReferenceQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public ProductPlanReferenceQueryBuilder WithCreatedonbehalfbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_createdonbehalfby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptCreatedonbehalfbyValue()
        {
            return ExceptField("_createdonbehalfby_value");
        }

        public ProductPlanReferenceQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public ProductPlanReferenceQueryBuilder WithModifiedbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptModifiedbyValue()
        {
            return ExceptField("_modifiedby_value");
        }

        public ProductPlanReferenceQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public ProductPlanReferenceQueryBuilder WithModifiedonbehalfbyValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_modifiedonbehalfby_value", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptModifiedonbehalfbyValue()
        {
            return ExceptField("_modifiedonbehalfby_value");
        }

        public ProductPlanReferenceQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public ProductPlanReferenceQueryBuilder WithOwneridValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_ownerid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptOwneridValue()
        {
            return ExceptField("_ownerid_value");
        }

        public ProductPlanReferenceQueryBuilder WithOwningbusinessunitValue(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_owningbusinessunit_value", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptOwningbusinessunitValue()
        {
            return ExceptField("_owningbusinessunit_value");
        }

        public ProductPlanReferenceQueryBuilder WithOwningteamValue(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_owningteam_value", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptOwningteamValue()
        {
            return ExceptField("_owningteam_value");
        }

        public ProductPlanReferenceQueryBuilder WithOwninguserValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_owninguser_value", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptOwninguserValue()
        {
            return ExceptField("_owninguser_value");
        }

        public ProductPlanReferenceQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public ProductPlanReferenceQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public ProductPlanReferenceQueryBuilder WithTheName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_name", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptTheName()
        {
            return ExceptField("the_name");
        }

        public ProductPlanReferenceQueryBuilder WithTheProductplanreferenceid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_productplanreferenceid", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptTheProductplanreferenceid()
        {
            return ExceptField("the_productplanreferenceid");
        }

        public ProductPlanReferenceQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public ProductPlanReferenceQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public ProductPlanReferenceQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ProductPlanReferenceQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }
    }

    public partial class SubscriptionQueryBuilder : GraphQlQueryBuilder<SubscriptionQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "cr68c_name" },
                new GraphQlFieldMetadata { Name = "cr68c_productsubscriptionid" },
                new GraphQlFieldMetadata { Name = "createdby" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "createdonbehalfby" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "modifiedby" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "modifiedonbehalfby" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "_ownerid_value", IsComplex = true, QueryBuilderType = typeof(SystemUserQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owningbusinessunit", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owningteam", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owninguser" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "the_account", IsComplex = true, QueryBuilderType = typeof(AccountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_the_account_value" },
                new GraphQlFieldMetadata { Name = "the_currency" },
                new GraphQlFieldMetadata { Name = "the_daysuntilendtrial" },
                new GraphQlFieldMetadata { Name = "the_istrial" },
                new GraphQlFieldMetadata { Name = "the_operationalstatus" },
                new GraphQlFieldMetadata { Name = "the_paymentproviderproductplanexternalidnew" },
                new GraphQlFieldMetadata { Name = "the_paymentproviderproductplanexternalidold" },
                new GraphQlFieldMetadata { Name = "the_paymentsubscriptionidnew" },
                new GraphQlFieldMetadata { Name = "the_paymentsubscriptionidold" },
                new GraphQlFieldMetadata { Name = "the_priceidnew" },
                new GraphQlFieldMetadata { Name = "the_priceidold" },
                new GraphQlFieldMetadata { Name = "the_productplanold" },
                new GraphQlFieldMetadata { Name = "_the_productplanreference_value", IsComplex = true, QueryBuilderType = typeof(ProductPlanReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "the_subscriptionaddon" },
                new GraphQlFieldMetadata { Name = "_the_subscriptionproduct_value", IsComplex = true, QueryBuilderType = typeof(SubscriptionProductQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" }
            };

        protected override string TypeName { get { return "Subscription"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public SubscriptionQueryBuilder WithCr68CName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cr68c_name", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptCr68CName()
        {
            return ExceptField("cr68c_name");
        }

        public SubscriptionQueryBuilder WithCr68CProductsubscriptionid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("cr68c_productsubscriptionid", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptCr68CProductsubscriptionid()
        {
            return ExceptField("cr68c_productsubscriptionid");
        }

        public SubscriptionQueryBuilder WithCreatedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptCreatedby()
        {
            return ExceptField("createdby");
        }

        public SubscriptionQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public SubscriptionQueryBuilder WithCreatedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptCreatedonbehalfby()
        {
            return ExceptField("createdonbehalfby");
        }

        public SubscriptionQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public SubscriptionQueryBuilder WithModifiedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptModifiedby()
        {
            return ExceptField("modifiedby");
        }

        public SubscriptionQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public SubscriptionQueryBuilder WithModifiedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptModifiedonbehalfby()
        {
            return ExceptField("modifiedonbehalfby");
        }

        public SubscriptionQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public SubscriptionQueryBuilder WithOwneridValue(SystemUserQueryBuilder systemUserQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_ownerid_value", alias, systemUserQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptOwneridValue()
        {
            return ExceptField("_ownerid_value");
        }

        public SubscriptionQueryBuilder WithOwningbusinessunit(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningbusinessunit", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptOwningbusinessunit()
        {
            return ExceptField("owningbusinessunit");
        }

        public SubscriptionQueryBuilder WithOwningteam(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningteam", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptOwningteam()
        {
            return ExceptField("owningteam");
        }

        public SubscriptionQueryBuilder WithOwninguser(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("owninguser", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptOwninguser()
        {
            return ExceptField("owninguser");
        }

        public SubscriptionQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public SubscriptionQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public SubscriptionQueryBuilder WithTheAccount(AccountQueryBuilder accountQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("the_account", alias, accountQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheAccount()
        {
            return ExceptField("the_account");
        }

        public SubscriptionQueryBuilder WithTheAccountValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_the_account_value", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheAccountValue()
        {
            return ExceptField("_the_account_value");
        }

        public SubscriptionQueryBuilder WithTheCurrency(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_currency", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheCurrency()
        {
            return ExceptField("the_currency");
        }

        public SubscriptionQueryBuilder WithTheDaysuntilendtrial(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_daysuntilendtrial", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheDaysuntilendtrial()
        {
            return ExceptField("the_daysuntilendtrial");
        }

        public SubscriptionQueryBuilder WithTheIstrial(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_istrial", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheIstrial()
        {
            return ExceptField("the_istrial");
        }

        public SubscriptionQueryBuilder WithTheOperationalstatus(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_operationalstatus", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheOperationalstatus()
        {
            return ExceptField("the_operationalstatus");
        }

        public SubscriptionQueryBuilder WithThePaymentproviderproductplanexternalidnew(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_paymentproviderproductplanexternalidnew", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptThePaymentproviderproductplanexternalidnew()
        {
            return ExceptField("the_paymentproviderproductplanexternalidnew");
        }

        public SubscriptionQueryBuilder WithThePaymentproviderproductplanexternalidold(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_paymentproviderproductplanexternalidold", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptThePaymentproviderproductplanexternalidold()
        {
            return ExceptField("the_paymentproviderproductplanexternalidold");
        }

        public SubscriptionQueryBuilder WithThePaymentsubscriptionidnew(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_paymentsubscriptionidnew", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptThePaymentsubscriptionidnew()
        {
            return ExceptField("the_paymentsubscriptionidnew");
        }

        public SubscriptionQueryBuilder WithThePaymentsubscriptionidold(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_paymentsubscriptionidold", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptThePaymentsubscriptionidold()
        {
            return ExceptField("the_paymentsubscriptionidold");
        }

        public SubscriptionQueryBuilder WithThePriceidnew(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_priceidnew", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptThePriceidnew()
        {
            return ExceptField("the_priceidnew");
        }

        public SubscriptionQueryBuilder WithThePriceidold(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_priceidold", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptThePriceidold()
        {
            return ExceptField("the_priceidold");
        }

        public SubscriptionQueryBuilder WithTheProductplanold(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_productplanold", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheProductplanold()
        {
            return ExceptField("the_productplanold");
        }

        public SubscriptionQueryBuilder WithTheProductplanreferenceValue(ProductPlanReferenceQueryBuilder productPlanReferenceQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_the_productplanreference_value", alias, productPlanReferenceQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheProductplanreferenceValue()
        {
            return ExceptField("_the_productplanreference_value");
        }

        public SubscriptionQueryBuilder WithTheSubscriptionaddon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_subscriptionaddon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheSubscriptionaddon()
        {
            return ExceptField("the_subscriptionaddon");
        }

        public SubscriptionQueryBuilder WithTheSubscriptionproductValue(SubscriptionProductQueryBuilder subscriptionProductQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_the_subscriptionproduct_value", alias, subscriptionProductQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTheSubscriptionproductValue()
        {
            return ExceptField("_the_subscriptionproduct_value");
        }

        public SubscriptionQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public SubscriptionQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public SubscriptionQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }
    }

    public partial class SubscriptionRoleQueryBuilder : GraphQlQueryBuilder<SubscriptionRoleQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "createdby" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "createdonbehalfby" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "modifiedby" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "modifiedonbehalfby" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "ownerid" },
                new GraphQlFieldMetadata { Name = "owningbusinessunit", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owningteam", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owninguser" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "subscriptionid", IsComplex = true, QueryBuilderType = typeof(SubscriptionQueryBuilder) },
                new GraphQlFieldMetadata { Name = "contactid", IsComplex = true, QueryBuilderType = typeof(ContactQueryBuilder) },
                new GraphQlFieldMetadata { Name = "roleid", IsComplex = true, QueryBuilderType = typeof(RoleReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "the_subscriptionroleid" },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" }
            };

        protected override string TypeName { get { return "SubscriptionRole"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public SubscriptionRoleQueryBuilder WithCreatedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptCreatedby()
        {
            return ExceptField("createdby");
        }

        public SubscriptionRoleQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public SubscriptionRoleQueryBuilder WithCreatedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptCreatedonbehalfby()
        {
            return ExceptField("createdonbehalfby");
        }

        public SubscriptionRoleQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public SubscriptionRoleQueryBuilder WithModifiedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptModifiedby()
        {
            return ExceptField("modifiedby");
        }

        public SubscriptionRoleQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public SubscriptionRoleQueryBuilder WithModifiedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptModifiedonbehalfby()
        {
            return ExceptField("modifiedonbehalfby");
        }

        public SubscriptionRoleQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public SubscriptionRoleQueryBuilder WithOwnerid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ownerid", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptOwnerid()
        {
            return ExceptField("ownerid");
        }

        public SubscriptionRoleQueryBuilder WithOwningbusinessunit(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningbusinessunit", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptOwningbusinessunit()
        {
            return ExceptField("owningbusinessunit");
        }

        public SubscriptionRoleQueryBuilder WithOwningteam(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningteam", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptOwningteam()
        {
            return ExceptField("owningteam");
        }

        public SubscriptionRoleQueryBuilder WithOwninguser(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("owninguser", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptOwninguser()
        {
            return ExceptField("owninguser");
        }

        public SubscriptionRoleQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public SubscriptionRoleQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public SubscriptionRoleQueryBuilder WithSubscriptionid(SubscriptionQueryBuilder subscriptionQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("subscriptionid", alias, subscriptionQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptSubscriptionid()
        {
            return ExceptField("subscriptionid");
        }

        public SubscriptionRoleQueryBuilder WithContactid(ContactQueryBuilder contactQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("contactid", alias, contactQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptContactid()
        {
            return ExceptField("contactid");
        }

        public SubscriptionRoleQueryBuilder WithRoleid(RoleReferenceQueryBuilder roleReferenceQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("roleid", alias, roleReferenceQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptRoleid()
        {
            return ExceptField("roleid");
        }

        public SubscriptionRoleQueryBuilder WithTheSubscriptionroleid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("the_subscriptionroleid", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptTheSubscriptionroleid()
        {
            return ExceptField("the_subscriptionroleid");
        }

        public SubscriptionRoleQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public SubscriptionRoleQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public SubscriptionRoleQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public SubscriptionRoleQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }
    }

    public partial class ContactQueryBuilder : GraphQlQueryBuilder<ContactQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "_accountid_value", IsComplex = true, QueryBuilderType = typeof(AccountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "address1_addressid" },
                new GraphQlFieldMetadata { Name = "address1_addresstypecode" },
                new GraphQlFieldMetadata { Name = "address1_city" },
                new GraphQlFieldMetadata { Name = "address1_composite" },
                new GraphQlFieldMetadata { Name = "address1_country" },
                new GraphQlFieldMetadata { Name = "address1_county" },
                new GraphQlFieldMetadata { Name = "address1_fax" },
                new GraphQlFieldMetadata { Name = "address1_freighttermscode" },
                new GraphQlFieldMetadata { Name = "address1_latitude" },
                new GraphQlFieldMetadata { Name = "address1_line1" },
                new GraphQlFieldMetadata { Name = "address1_line2" },
                new GraphQlFieldMetadata { Name = "address1_line3" },
                new GraphQlFieldMetadata { Name = "address1_longitude" },
                new GraphQlFieldMetadata { Name = "address1_name" },
                new GraphQlFieldMetadata { Name = "address1_postalcode" },
                new GraphQlFieldMetadata { Name = "address1_postofficebox" },
                new GraphQlFieldMetadata { Name = "address1_primarycontactname" },
                new GraphQlFieldMetadata { Name = "address1_shippingmethodcode" },
                new GraphQlFieldMetadata { Name = "address1_stateorprovince" },
                new GraphQlFieldMetadata { Name = "address1_telephone1" },
                new GraphQlFieldMetadata { Name = "address1_telephone2" },
                new GraphQlFieldMetadata { Name = "address1_telephone3" },
                new GraphQlFieldMetadata { Name = "address1_upszone" },
                new GraphQlFieldMetadata { Name = "address1_utcoffset" },
                new GraphQlFieldMetadata { Name = "address2_addressid" },
                new GraphQlFieldMetadata { Name = "address2_addresstypecode" },
                new GraphQlFieldMetadata { Name = "address2_city" },
                new GraphQlFieldMetadata { Name = "address2_composite" },
                new GraphQlFieldMetadata { Name = "address2_country" },
                new GraphQlFieldMetadata { Name = "address2_county" },
                new GraphQlFieldMetadata { Name = "address2_fax" },
                new GraphQlFieldMetadata { Name = "address2_freighttermscode" },
                new GraphQlFieldMetadata { Name = "address2_latitude" },
                new GraphQlFieldMetadata { Name = "address2_line1" },
                new GraphQlFieldMetadata { Name = "address2_line2" },
                new GraphQlFieldMetadata { Name = "address2_line3" },
                new GraphQlFieldMetadata { Name = "address2_longitude" },
                new GraphQlFieldMetadata { Name = "address2_name" },
                new GraphQlFieldMetadata { Name = "address2_postalcode" },
                new GraphQlFieldMetadata { Name = "address2_postofficebox" },
                new GraphQlFieldMetadata { Name = "address2_primarycontactname" },
                new GraphQlFieldMetadata { Name = "address2_shippingmethodcode" },
                new GraphQlFieldMetadata { Name = "address2_stateorprovince" },
                new GraphQlFieldMetadata { Name = "address2_telephone1" },
                new GraphQlFieldMetadata { Name = "address2_telephone2" },
                new GraphQlFieldMetadata { Name = "address2_telephone3" },
                new GraphQlFieldMetadata { Name = "address2_upszone" },
                new GraphQlFieldMetadata { Name = "address2_utcoffset" },
                new GraphQlFieldMetadata { Name = "aging30" },
                new GraphQlFieldMetadata { Name = "aging30_base" },
                new GraphQlFieldMetadata { Name = "aging60" },
                new GraphQlFieldMetadata { Name = "aging60_base" },
                new GraphQlFieldMetadata { Name = "aging90" },
                new GraphQlFieldMetadata { Name = "aging90_base" },
                new GraphQlFieldMetadata { Name = "anniversary" },
                new GraphQlFieldMetadata { Name = "assistantname" },
                new GraphQlFieldMetadata { Name = "assistantphone" },
                new GraphQlFieldMetadata { Name = "birthdate" },
                new GraphQlFieldMetadata { Name = "business2" },
                new GraphQlFieldMetadata { Name = "callback" },
                new GraphQlFieldMetadata { Name = "childrensnames" },
                new GraphQlFieldMetadata { Name = "company" },
                new GraphQlFieldMetadata { Name = "contactid" },
                new GraphQlFieldMetadata { Name = "createdby" },
                new GraphQlFieldMetadata { Name = "createdbyString" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "createdonbehalfby" },
                new GraphQlFieldMetadata { Name = "creditlimit" },
                new GraphQlFieldMetadata { Name = "creditlimit_base" },
                new GraphQlFieldMetadata { Name = "creditonhold" },
                new GraphQlFieldMetadata { Name = "customersizecode" },
                new GraphQlFieldMetadata { Name = "customertypecode" },
                new GraphQlFieldMetadata { Name = "department" },
                new GraphQlFieldMetadata { Name = "description" },
                new GraphQlFieldMetadata { Name = "donotbulkemail" },
                new GraphQlFieldMetadata { Name = "donotbulkpostalmail" },
                new GraphQlFieldMetadata { Name = "donotemail" },
                new GraphQlFieldMetadata { Name = "donotfax" },
                new GraphQlFieldMetadata { Name = "donotphone" },
                new GraphQlFieldMetadata { Name = "donotpostalmail" },
                new GraphQlFieldMetadata { Name = "donotsendmm" },
                new GraphQlFieldMetadata { Name = "emailaddress1" },
                new GraphQlFieldMetadata { Name = "emailaddress2" },
                new GraphQlFieldMetadata { Name = "emailaddress3" },
                new GraphQlFieldMetadata { Name = "employeeid" },
                new GraphQlFieldMetadata { Name = "exchangerate" },
                new GraphQlFieldMetadata { Name = "externaluseridentifier" },
                new GraphQlFieldMetadata { Name = "fax" },
                new GraphQlFieldMetadata { Name = "firstname" },
                new GraphQlFieldMetadata { Name = "followemail" },
                new GraphQlFieldMetadata { Name = "fullname" },
                new GraphQlFieldMetadata { Name = "gendercode" },
                new GraphQlFieldMetadata { Name = "governmentid" },
                new GraphQlFieldMetadata { Name = "haschildrencode" },
                new GraphQlFieldMetadata { Name = "home2" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "isautocreate" },
                new GraphQlFieldMetadata { Name = "isbackofficecustomer" },
                new GraphQlFieldMetadata { Name = "isprivate" },
                new GraphQlFieldMetadata { Name = "jobtitle" },
                new GraphQlFieldMetadata { Name = "lastname" },
                new GraphQlFieldMetadata { Name = "lastonholdtime" },
                new GraphQlFieldMetadata { Name = "lastusedincampaign" },
                new GraphQlFieldMetadata { Name = "leadsourcecode" },
                new GraphQlFieldMetadata { Name = "managername" },
                new GraphQlFieldMetadata { Name = "managerphone" },
                new GraphQlFieldMetadata { Name = "marketingonly" },
                new GraphQlFieldMetadata { Name = "masterid", IsComplex = true, QueryBuilderType = typeof(ContactQueryBuilder) },
                new GraphQlFieldMetadata { Name = "merged" },
                new GraphQlFieldMetadata { Name = "middlename" },
                new GraphQlFieldMetadata { Name = "mobilephone" },
                new GraphQlFieldMetadata { Name = "modifiedby" },
                new GraphQlFieldMetadata { Name = "modifiedbyexternalparty" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "modifiedonbehalfby" },
                new GraphQlFieldMetadata { Name = "nickname" },
                new GraphQlFieldMetadata { Name = "numberofchildren" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "ownerid" },
                new GraphQlFieldMetadata { Name = "owningbusinessunit", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owningteam", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owninguser" },
                new GraphQlFieldMetadata { Name = "pager" },
                new GraphQlFieldMetadata { Name = "parentcontactid", IsComplex = true, QueryBuilderType = typeof(ContactQueryBuilder) },
                new GraphQlFieldMetadata { Name = "participatesinworkflow" },
                new GraphQlFieldMetadata { Name = "paymenttermscode" },
                new GraphQlFieldMetadata { Name = "preferredappointmentdaycode" },
                new GraphQlFieldMetadata { Name = "preferredappointmenttimecode" },
                new GraphQlFieldMetadata { Name = "preferredcontactmethodcode" },
                new GraphQlFieldMetadata { Name = "preferredequipmentid" },
                new GraphQlFieldMetadata { Name = "preferredserviceid" },
                new GraphQlFieldMetadata { Name = "preferredsystemuserid" },
                new GraphQlFieldMetadata { Name = "processid" },
                new GraphQlFieldMetadata { Name = "salutation" },
                new GraphQlFieldMetadata { Name = "shippingmethodcode" },
                new GraphQlFieldMetadata { Name = "spousesname" },
                new GraphQlFieldMetadata { Name = "statecode" },
                new GraphQlFieldMetadata { Name = "statuscode" },
                new GraphQlFieldMetadata { Name = "subscriptionid", IsComplex = true, QueryBuilderType = typeof(SubscriptionQueryBuilder) },
                new GraphQlFieldMetadata { Name = "suffix" },
                new GraphQlFieldMetadata { Name = "teamsfollowed" },
                new GraphQlFieldMetadata { Name = "telephone1" },
                new GraphQlFieldMetadata { Name = "telephone2" },
                new GraphQlFieldMetadata { Name = "telephone3" },
                new GraphQlFieldMetadata { Name = "territorycode" },
                new GraphQlFieldMetadata { Name = "timespentbymeonemailandmeetings" },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "transactioncurrencyid" },
                new GraphQlFieldMetadata { Name = "traversedpath" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" },
                new GraphQlFieldMetadata { Name = "websiteurl" },
                new GraphQlFieldMetadata { Name = "yomifullname" }
            };

        protected override string TypeName { get { return "Contact"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ContactQueryBuilder WithAccountidValue(AccountQueryBuilder accountQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("_accountid_value", alias, accountQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAccountidValue()
        {
            return ExceptField("_accountid_value");
        }

        public ContactQueryBuilder WithAddress1Addressid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_addressid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Addressid()
        {
            return ExceptField("address1_addressid");
        }

        public ContactQueryBuilder WithAddress1Addresstypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_addresstypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Addresstypecode()
        {
            return ExceptField("address1_addresstypecode");
        }

        public ContactQueryBuilder WithAddress1City(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_city", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1City()
        {
            return ExceptField("address1_city");
        }

        public ContactQueryBuilder WithAddress1Composite(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_composite", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Composite()
        {
            return ExceptField("address1_composite");
        }

        public ContactQueryBuilder WithAddress1Country(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_country", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Country()
        {
            return ExceptField("address1_country");
        }

        public ContactQueryBuilder WithAddress1County(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_county", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1County()
        {
            return ExceptField("address1_county");
        }

        public ContactQueryBuilder WithAddress1Fax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_fax", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Fax()
        {
            return ExceptField("address1_fax");
        }

        public ContactQueryBuilder WithAddress1Freighttermscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_freighttermscode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Freighttermscode()
        {
            return ExceptField("address1_freighttermscode");
        }

        public ContactQueryBuilder WithAddress1Latitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_latitude", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Latitude()
        {
            return ExceptField("address1_latitude");
        }

        public ContactQueryBuilder WithAddress1Line1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line1", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Line1()
        {
            return ExceptField("address1_line1");
        }

        public ContactQueryBuilder WithAddress1Line2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line2", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Line2()
        {
            return ExceptField("address1_line2");
        }

        public ContactQueryBuilder WithAddress1Line3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line3", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Line3()
        {
            return ExceptField("address1_line3");
        }

        public ContactQueryBuilder WithAddress1Longitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_longitude", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Longitude()
        {
            return ExceptField("address1_longitude");
        }

        public ContactQueryBuilder WithAddress1Name(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_name", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Name()
        {
            return ExceptField("address1_name");
        }

        public ContactQueryBuilder WithAddress1Postalcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_postalcode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Postalcode()
        {
            return ExceptField("address1_postalcode");
        }

        public ContactQueryBuilder WithAddress1Postofficebox(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_postofficebox", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Postofficebox()
        {
            return ExceptField("address1_postofficebox");
        }

        public ContactQueryBuilder WithAddress1Primarycontactname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_primarycontactname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Primarycontactname()
        {
            return ExceptField("address1_primarycontactname");
        }

        public ContactQueryBuilder WithAddress1Shippingmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_shippingmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Shippingmethodcode()
        {
            return ExceptField("address1_shippingmethodcode");
        }

        public ContactQueryBuilder WithAddress1Stateorprovince(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_stateorprovince", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Stateorprovince()
        {
            return ExceptField("address1_stateorprovince");
        }

        public ContactQueryBuilder WithAddress1Telephone1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone1", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Telephone1()
        {
            return ExceptField("address1_telephone1");
        }

        public ContactQueryBuilder WithAddress1Telephone2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone2", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Telephone2()
        {
            return ExceptField("address1_telephone2");
        }

        public ContactQueryBuilder WithAddress1Telephone3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone3", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Telephone3()
        {
            return ExceptField("address1_telephone3");
        }

        public ContactQueryBuilder WithAddress1Upszone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_upszone", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Upszone()
        {
            return ExceptField("address1_upszone");
        }

        public ContactQueryBuilder WithAddress1Utcoffset(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_utcoffset", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress1Utcoffset()
        {
            return ExceptField("address1_utcoffset");
        }

        public ContactQueryBuilder WithAddress2Addressid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_addressid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Addressid()
        {
            return ExceptField("address2_addressid");
        }

        public ContactQueryBuilder WithAddress2Addresstypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_addresstypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Addresstypecode()
        {
            return ExceptField("address2_addresstypecode");
        }

        public ContactQueryBuilder WithAddress2City(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_city", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2City()
        {
            return ExceptField("address2_city");
        }

        public ContactQueryBuilder WithAddress2Composite(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_composite", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Composite()
        {
            return ExceptField("address2_composite");
        }

        public ContactQueryBuilder WithAddress2Country(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_country", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Country()
        {
            return ExceptField("address2_country");
        }

        public ContactQueryBuilder WithAddress2County(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_county", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2County()
        {
            return ExceptField("address2_county");
        }

        public ContactQueryBuilder WithAddress2Fax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_fax", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Fax()
        {
            return ExceptField("address2_fax");
        }

        public ContactQueryBuilder WithAddress2Freighttermscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_freighttermscode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Freighttermscode()
        {
            return ExceptField("address2_freighttermscode");
        }

        public ContactQueryBuilder WithAddress2Latitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_latitude", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Latitude()
        {
            return ExceptField("address2_latitude");
        }

        public ContactQueryBuilder WithAddress2Line1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line1", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Line1()
        {
            return ExceptField("address2_line1");
        }

        public ContactQueryBuilder WithAddress2Line2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line2", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Line2()
        {
            return ExceptField("address2_line2");
        }

        public ContactQueryBuilder WithAddress2Line3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line3", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Line3()
        {
            return ExceptField("address2_line3");
        }

        public ContactQueryBuilder WithAddress2Longitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_longitude", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Longitude()
        {
            return ExceptField("address2_longitude");
        }

        public ContactQueryBuilder WithAddress2Name(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_name", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Name()
        {
            return ExceptField("address2_name");
        }

        public ContactQueryBuilder WithAddress2Postalcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_postalcode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Postalcode()
        {
            return ExceptField("address2_postalcode");
        }

        public ContactQueryBuilder WithAddress2Postofficebox(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_postofficebox", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Postofficebox()
        {
            return ExceptField("address2_postofficebox");
        }

        public ContactQueryBuilder WithAddress2Primarycontactname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_primarycontactname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Primarycontactname()
        {
            return ExceptField("address2_primarycontactname");
        }

        public ContactQueryBuilder WithAddress2Shippingmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_shippingmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Shippingmethodcode()
        {
            return ExceptField("address2_shippingmethodcode");
        }

        public ContactQueryBuilder WithAddress2Stateorprovince(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_stateorprovince", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Stateorprovince()
        {
            return ExceptField("address2_stateorprovince");
        }

        public ContactQueryBuilder WithAddress2Telephone1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone1", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Telephone1()
        {
            return ExceptField("address2_telephone1");
        }

        public ContactQueryBuilder WithAddress2Telephone2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone2", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Telephone2()
        {
            return ExceptField("address2_telephone2");
        }

        public ContactQueryBuilder WithAddress2Telephone3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone3", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Telephone3()
        {
            return ExceptField("address2_telephone3");
        }

        public ContactQueryBuilder WithAddress2Upszone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_upszone", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Upszone()
        {
            return ExceptField("address2_upszone");
        }

        public ContactQueryBuilder WithAddress2Utcoffset(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_utcoffset", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAddress2Utcoffset()
        {
            return ExceptField("address2_utcoffset");
        }

        public ContactQueryBuilder WithAging30(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging30", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAging30()
        {
            return ExceptField("aging30");
        }

        public ContactQueryBuilder WithAging30Base(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging30_base", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAging30Base()
        {
            return ExceptField("aging30_base");
        }

        public ContactQueryBuilder WithAging60(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging60", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAging60()
        {
            return ExceptField("aging60");
        }

        public ContactQueryBuilder WithAging60Base(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging60_base", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAging60Base()
        {
            return ExceptField("aging60_base");
        }

        public ContactQueryBuilder WithAging90(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging90", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAging90()
        {
            return ExceptField("aging90");
        }

        public ContactQueryBuilder WithAging90Base(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("aging90_base", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAging90Base()
        {
            return ExceptField("aging90_base");
        }

        public ContactQueryBuilder WithAnniversary(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("anniversary", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAnniversary()
        {
            return ExceptField("anniversary");
        }

        public ContactQueryBuilder WithAssistantname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assistantname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAssistantname()
        {
            return ExceptField("assistantname");
        }

        public ContactQueryBuilder WithAssistantphone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("assistantphone", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptAssistantphone()
        {
            return ExceptField("assistantphone");
        }

        public ContactQueryBuilder WithBirthdate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("birthdate", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptBirthdate()
        {
            return ExceptField("birthdate");
        }

        public ContactQueryBuilder WithBusiness2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("business2", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptBusiness2()
        {
            return ExceptField("business2");
        }

        public ContactQueryBuilder WithCallback(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("callback", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCallback()
        {
            return ExceptField("callback");
        }

        public ContactQueryBuilder WithChildrensnames(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("childrensnames", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptChildrensnames()
        {
            return ExceptField("childrensnames");
        }

        public ContactQueryBuilder WithCompany(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("company", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCompany()
        {
            return ExceptField("company");
        }

        public ContactQueryBuilder WithContactid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("contactid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptContactid()
        {
            return ExceptField("contactid");
        }

        public ContactQueryBuilder WithCreatedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdby", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCreatedby()
        {
            return ExceptField("createdby");
        }

        public ContactQueryBuilder WithCreatedbyString(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdbyString", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCreatedbyString()
        {
            return ExceptField("createdbyString");
        }

        public ContactQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public ContactQueryBuilder WithCreatedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCreatedonbehalfby()
        {
            return ExceptField("createdonbehalfby");
        }

        public ContactQueryBuilder WithCreditlimit(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creditlimit", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCreditlimit()
        {
            return ExceptField("creditlimit");
        }

        public ContactQueryBuilder WithCreditlimitBase(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creditlimit_base", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCreditlimitBase()
        {
            return ExceptField("creditlimit_base");
        }

        public ContactQueryBuilder WithCreditonhold(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creditonhold", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCreditonhold()
        {
            return ExceptField("creditonhold");
        }

        public ContactQueryBuilder WithCustomersizecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("customersizecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCustomersizecode()
        {
            return ExceptField("customersizecode");
        }

        public ContactQueryBuilder WithCustomertypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("customertypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptCustomertypecode()
        {
            return ExceptField("customertypecode");
        }

        public ContactQueryBuilder WithDepartment(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("department", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDepartment()
        {
            return ExceptField("department");
        }

        public ContactQueryBuilder WithDescription(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("description", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDescription()
        {
            return ExceptField("description");
        }

        public ContactQueryBuilder WithDonotbulkemail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotbulkemail", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDonotbulkemail()
        {
            return ExceptField("donotbulkemail");
        }

        public ContactQueryBuilder WithDonotbulkpostalmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotbulkpostalmail", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDonotbulkpostalmail()
        {
            return ExceptField("donotbulkpostalmail");
        }

        public ContactQueryBuilder WithDonotemail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotemail", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDonotemail()
        {
            return ExceptField("donotemail");
        }

        public ContactQueryBuilder WithDonotfax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotfax", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDonotfax()
        {
            return ExceptField("donotfax");
        }

        public ContactQueryBuilder WithDonotphone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotphone", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDonotphone()
        {
            return ExceptField("donotphone");
        }

        public ContactQueryBuilder WithDonotpostalmail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotpostalmail", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDonotpostalmail()
        {
            return ExceptField("donotpostalmail");
        }

        public ContactQueryBuilder WithDonotsendmm(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("donotsendmm", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptDonotsendmm()
        {
            return ExceptField("donotsendmm");
        }

        public ContactQueryBuilder WithEmailaddress1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailaddress1", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptEmailaddress1()
        {
            return ExceptField("emailaddress1");
        }

        public ContactQueryBuilder WithEmailaddress2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailaddress2", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptEmailaddress2()
        {
            return ExceptField("emailaddress2");
        }

        public ContactQueryBuilder WithEmailaddress3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailaddress3", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptEmailaddress3()
        {
            return ExceptField("emailaddress3");
        }

        public ContactQueryBuilder WithEmployeeid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("employeeid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptEmployeeid()
        {
            return ExceptField("employeeid");
        }

        public ContactQueryBuilder WithExchangerate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("exchangerate", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptExchangerate()
        {
            return ExceptField("exchangerate");
        }

        public ContactQueryBuilder WithExternaluseridentifier(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("externaluseridentifier", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptExternaluseridentifier()
        {
            return ExceptField("externaluseridentifier");
        }

        public ContactQueryBuilder WithFax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("fax", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptFax()
        {
            return ExceptField("fax");
        }

        public ContactQueryBuilder WithFirstname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("firstname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptFirstname()
        {
            return ExceptField("firstname");
        }

        public ContactQueryBuilder WithFollowemail(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("followemail", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptFollowemail()
        {
            return ExceptField("followemail");
        }

        public ContactQueryBuilder WithFullname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("fullname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptFullname()
        {
            return ExceptField("fullname");
        }

        public ContactQueryBuilder WithGendercode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("gendercode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptGendercode()
        {
            return ExceptField("gendercode");
        }

        public ContactQueryBuilder WithGovernmentid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("governmentid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptGovernmentid()
        {
            return ExceptField("governmentid");
        }

        public ContactQueryBuilder WithHaschildrencode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("haschildrencode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptHaschildrencode()
        {
            return ExceptField("haschildrencode");
        }

        public ContactQueryBuilder WithHome2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("home2", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptHome2()
        {
            return ExceptField("home2");
        }

        public ContactQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public ContactQueryBuilder WithIsautocreate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isautocreate", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptIsautocreate()
        {
            return ExceptField("isautocreate");
        }

        public ContactQueryBuilder WithIsbackofficecustomer(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isbackofficecustomer", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptIsbackofficecustomer()
        {
            return ExceptField("isbackofficecustomer");
        }

        public ContactQueryBuilder WithIsprivate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isprivate", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptIsprivate()
        {
            return ExceptField("isprivate");
        }

        public ContactQueryBuilder WithJobtitle(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("jobtitle", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptJobtitle()
        {
            return ExceptField("jobtitle");
        }

        public ContactQueryBuilder WithLastname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptLastname()
        {
            return ExceptField("lastname");
        }

        public ContactQueryBuilder WithLastonholdtime(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastonholdtime", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptLastonholdtime()
        {
            return ExceptField("lastonholdtime");
        }

        public ContactQueryBuilder WithLastusedincampaign(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("lastusedincampaign", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptLastusedincampaign()
        {
            return ExceptField("lastusedincampaign");
        }

        public ContactQueryBuilder WithLeadsourcecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("leadsourcecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptLeadsourcecode()
        {
            return ExceptField("leadsourcecode");
        }

        public ContactQueryBuilder WithManagername(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("managername", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptManagername()
        {
            return ExceptField("managername");
        }

        public ContactQueryBuilder WithManagerphone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("managerphone", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptManagerphone()
        {
            return ExceptField("managerphone");
        }

        public ContactQueryBuilder WithMarketingonly(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("marketingonly", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptMarketingonly()
        {
            return ExceptField("marketingonly");
        }

        public ContactQueryBuilder WithMasterid(ContactQueryBuilder contactQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("masterid", alias, contactQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptMasterid()
        {
            return ExceptField("masterid");
        }

        public ContactQueryBuilder WithMerged(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("merged", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptMerged()
        {
            return ExceptField("merged");
        }

        public ContactQueryBuilder WithMiddlename(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("middlename", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptMiddlename()
        {
            return ExceptField("middlename");
        }

        public ContactQueryBuilder WithMobilephone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("mobilephone", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptMobilephone()
        {
            return ExceptField("mobilephone");
        }

        public ContactQueryBuilder WithModifiedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedby", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptModifiedby()
        {
            return ExceptField("modifiedby");
        }

        public ContactQueryBuilder WithModifiedbyexternalparty(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedbyexternalparty", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptModifiedbyexternalparty()
        {
            return ExceptField("modifiedbyexternalparty");
        }

        public ContactQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public ContactQueryBuilder WithModifiedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptModifiedonbehalfby()
        {
            return ExceptField("modifiedonbehalfby");
        }

        public ContactQueryBuilder WithNickname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("nickname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptNickname()
        {
            return ExceptField("nickname");
        }

        public ContactQueryBuilder WithNumberofchildren(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("numberofchildren", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptNumberofchildren()
        {
            return ExceptField("numberofchildren");
        }

        public ContactQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public ContactQueryBuilder WithOwnerid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ownerid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptOwnerid()
        {
            return ExceptField("ownerid");
        }

        public ContactQueryBuilder WithOwningbusinessunit(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningbusinessunit", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptOwningbusinessunit()
        {
            return ExceptField("owningbusinessunit");
        }

        public ContactQueryBuilder WithOwningteam(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningteam", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptOwningteam()
        {
            return ExceptField("owningteam");
        }

        public ContactQueryBuilder WithOwninguser(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("owninguser", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptOwninguser()
        {
            return ExceptField("owninguser");
        }

        public ContactQueryBuilder WithPager(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("pager", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptPager()
        {
            return ExceptField("pager");
        }

        public ContactQueryBuilder WithParentcontactid(ContactQueryBuilder contactQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("parentcontactid", alias, contactQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptParentcontactid()
        {
            return ExceptField("parentcontactid");
        }

        public ContactQueryBuilder WithParticipatesinworkflow(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("participatesinworkflow", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptParticipatesinworkflow()
        {
            return ExceptField("participatesinworkflow");
        }

        public ContactQueryBuilder WithPaymenttermscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("paymenttermscode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptPaymenttermscode()
        {
            return ExceptField("paymenttermscode");
        }

        public ContactQueryBuilder WithPreferredappointmentdaycode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredappointmentdaycode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptPreferredappointmentdaycode()
        {
            return ExceptField("preferredappointmentdaycode");
        }

        public ContactQueryBuilder WithPreferredappointmenttimecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredappointmenttimecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptPreferredappointmenttimecode()
        {
            return ExceptField("preferredappointmenttimecode");
        }

        public ContactQueryBuilder WithPreferredcontactmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredcontactmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptPreferredcontactmethodcode()
        {
            return ExceptField("preferredcontactmethodcode");
        }

        public ContactQueryBuilder WithPreferredequipmentid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredequipmentid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptPreferredequipmentid()
        {
            return ExceptField("preferredequipmentid");
        }

        public ContactQueryBuilder WithPreferredserviceid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredserviceid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptPreferredserviceid()
        {
            return ExceptField("preferredserviceid");
        }

        public ContactQueryBuilder WithPreferredsystemuserid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("preferredsystemuserid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptPreferredsystemuserid()
        {
            return ExceptField("preferredsystemuserid");
        }

        public ContactQueryBuilder WithProcessid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("processid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptProcessid()
        {
            return ExceptField("processid");
        }

        public ContactQueryBuilder WithSalutation(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("salutation", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptSalutation()
        {
            return ExceptField("salutation");
        }

        public ContactQueryBuilder WithShippingmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("shippingmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptShippingmethodcode()
        {
            return ExceptField("shippingmethodcode");
        }

        public ContactQueryBuilder WithSpousesname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("spousesname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptSpousesname()
        {
            return ExceptField("spousesname");
        }

        public ContactQueryBuilder WithStatecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptStatecode()
        {
            return ExceptField("statecode");
        }

        public ContactQueryBuilder WithStatuscode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("statuscode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptStatuscode()
        {
            return ExceptField("statuscode");
        }

        public ContactQueryBuilder WithSubscriptionid(SubscriptionQueryBuilder subscriptionQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("subscriptionid", alias, subscriptionQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptSubscriptionid()
        {
            return ExceptField("subscriptionid");
        }

        public ContactQueryBuilder WithSuffix(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("suffix", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptSuffix()
        {
            return ExceptField("suffix");
        }

        public ContactQueryBuilder WithTeamsfollowed(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("teamsfollowed", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTeamsfollowed()
        {
            return ExceptField("teamsfollowed");
        }

        public ContactQueryBuilder WithTelephone1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("telephone1", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTelephone1()
        {
            return ExceptField("telephone1");
        }

        public ContactQueryBuilder WithTelephone2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("telephone2", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTelephone2()
        {
            return ExceptField("telephone2");
        }

        public ContactQueryBuilder WithTelephone3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("telephone3", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTelephone3()
        {
            return ExceptField("telephone3");
        }

        public ContactQueryBuilder WithTerritorycode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("territorycode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTerritorycode()
        {
            return ExceptField("territorycode");
        }

        public ContactQueryBuilder WithTimespentbymeonemailandmeetings(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timespentbymeonemailandmeetings", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTimespentbymeonemailandmeetings()
        {
            return ExceptField("timespentbymeonemailandmeetings");
        }

        public ContactQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public ContactQueryBuilder WithTransactioncurrencyid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("transactioncurrencyid", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTransactioncurrencyid()
        {
            return ExceptField("transactioncurrencyid");
        }

        public ContactQueryBuilder WithTraversedpath(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("traversedpath", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptTraversedpath()
        {
            return ExceptField("traversedpath");
        }

        public ContactQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public ContactQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }

        public ContactQueryBuilder WithWebsiteurl(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("websiteurl", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptWebsiteurl()
        {
            return ExceptField("websiteurl");
        }

        public ContactQueryBuilder WithYomifullname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("yomifullname", alias, new GraphQlDirective[] { include, skip });
        }

        public ContactQueryBuilder ExceptYomifullname()
        {
            return ExceptField("yomifullname");
        }
    }

    public partial class TeamQueryBuilder : GraphQlQueryBuilder<TeamQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "businessunitid", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "createdby" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "createdonbehalfby" },
                new GraphQlFieldMetadata { Name = "description" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "modifiedby" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "modifiedonbehalfby" },
                new GraphQlFieldMetadata { Name = "_organizationid_value" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "ownerid" },
                new GraphQlFieldMetadata { Name = "owningbusinessunit", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owningteam", IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "owninguser" },
                new GraphQlFieldMetadata { Name = "teamid" },
                new GraphQlFieldMetadata { Name = "teamtype" },
                new GraphQlFieldMetadata { Name = "timezoneruleversionnumber" },
                new GraphQlFieldMetadata { Name = "utcconversiontimezonecode" },
                new GraphQlFieldMetadata { Name = "versionnumber" }
            };

        protected override string TypeName { get { return "Team"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TeamQueryBuilder WithBusinessunitid(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("businessunitid", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptBusinessunitid()
        {
            return ExceptField("businessunitid");
        }

        public TeamQueryBuilder WithCreatedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdby", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptCreatedby()
        {
            return ExceptField("createdby");
        }

        public TeamQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public TeamQueryBuilder WithCreatedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptCreatedonbehalfby()
        {
            return ExceptField("createdonbehalfby");
        }

        public TeamQueryBuilder WithDescription(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("description", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptDescription()
        {
            return ExceptField("description");
        }

        public TeamQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public TeamQueryBuilder WithModifiedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedby", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptModifiedby()
        {
            return ExceptField("modifiedby");
        }

        public TeamQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public TeamQueryBuilder WithModifiedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptModifiedonbehalfby()
        {
            return ExceptField("modifiedonbehalfby");
        }

        public TeamQueryBuilder WithOrganizationidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_organizationid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptOrganizationidValue()
        {
            return ExceptField("_organizationid_value");
        }

        public TeamQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public TeamQueryBuilder WithOwnerid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ownerid", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptOwnerid()
        {
            return ExceptField("ownerid");
        }

        public TeamQueryBuilder WithOwningbusinessunit(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningbusinessunit", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptOwningbusinessunit()
        {
            return ExceptField("owningbusinessunit");
        }

        public TeamQueryBuilder WithOwningteam(TeamQueryBuilder teamQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("owningteam", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptOwningteam()
        {
            return ExceptField("owningteam");
        }

        public TeamQueryBuilder WithOwninguser(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("owninguser", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptOwninguser()
        {
            return ExceptField("owninguser");
        }

        public TeamQueryBuilder WithTeamid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("teamid", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptTeamid()
        {
            return ExceptField("teamid");
        }

        public TeamQueryBuilder WithTeamtype(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("teamtype", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptTeamtype()
        {
            return ExceptField("teamtype");
        }

        public TeamQueryBuilder WithTimezoneruleversionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("timezoneruleversionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptTimezoneruleversionnumber()
        {
            return ExceptField("timezoneruleversionnumber");
        }

        public TeamQueryBuilder WithUtcconversiontimezonecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcconversiontimezonecode", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptUtcconversiontimezonecode()
        {
            return ExceptField("utcconversiontimezonecode");
        }

        public TeamQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public TeamQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }
    }

    public partial class BusinessUnitQueryBuilder : GraphQlQueryBuilder<BusinessUnitQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "address1_addressid" },
                new GraphQlFieldMetadata { Name = "address1_addresstypecode" },
                new GraphQlFieldMetadata { Name = "address1_city" },
                new GraphQlFieldMetadata { Name = "address1_country" },
                new GraphQlFieldMetadata { Name = "address1_county" },
                new GraphQlFieldMetadata { Name = "address1_fax" },
                new GraphQlFieldMetadata { Name = "address1_latitude" },
                new GraphQlFieldMetadata { Name = "address1_line1" },
                new GraphQlFieldMetadata { Name = "address1_line2" },
                new GraphQlFieldMetadata { Name = "address1_line3" },
                new GraphQlFieldMetadata { Name = "address1_longitude" },
                new GraphQlFieldMetadata { Name = "address1_name" },
                new GraphQlFieldMetadata { Name = "address1_postalcode" },
                new GraphQlFieldMetadata { Name = "address1_postofficebox" },
                new GraphQlFieldMetadata { Name = "address1_shippingmethodcode" },
                new GraphQlFieldMetadata { Name = "address1_stateorprovince" },
                new GraphQlFieldMetadata { Name = "address1_telephone1" },
                new GraphQlFieldMetadata { Name = "address1_telephone2" },
                new GraphQlFieldMetadata { Name = "address1_telephone3" },
                new GraphQlFieldMetadata { Name = "address1_upszone" },
                new GraphQlFieldMetadata { Name = "address1_utcoffset" },
                new GraphQlFieldMetadata { Name = "address2_addressid" },
                new GraphQlFieldMetadata { Name = "address2_addresstypecode" },
                new GraphQlFieldMetadata { Name = "address2_city" },
                new GraphQlFieldMetadata { Name = "address2_country" },
                new GraphQlFieldMetadata { Name = "address2_county" },
                new GraphQlFieldMetadata { Name = "address2_fax" },
                new GraphQlFieldMetadata { Name = "address2_latitude" },
                new GraphQlFieldMetadata { Name = "address2_line1" },
                new GraphQlFieldMetadata { Name = "address2_line2" },
                new GraphQlFieldMetadata { Name = "address2_line3" },
                new GraphQlFieldMetadata { Name = "address2_longitude" },
                new GraphQlFieldMetadata { Name = "address2_name" },
                new GraphQlFieldMetadata { Name = "address2_postalcode" },
                new GraphQlFieldMetadata { Name = "address2_postofficebox" },
                new GraphQlFieldMetadata { Name = "address2_shippingmethodcode" },
                new GraphQlFieldMetadata { Name = "address2_stateorprovince" },
                new GraphQlFieldMetadata { Name = "address2_telephone1" },
                new GraphQlFieldMetadata { Name = "address2_telephone2" },
                new GraphQlFieldMetadata { Name = "address2_telephone3" },
                new GraphQlFieldMetadata { Name = "address2_upszone" },
                new GraphQlFieldMetadata { Name = "address2_utcoffset" },
                new GraphQlFieldMetadata { Name = "businessunitid" },
                new GraphQlFieldMetadata { Name = "calendarid" },
                new GraphQlFieldMetadata { Name = "costcenter" },
                new GraphQlFieldMetadata { Name = "createdby" },
                new GraphQlFieldMetadata { Name = "createdon" },
                new GraphQlFieldMetadata { Name = "createdonbehalfby" },
                new GraphQlFieldMetadata { Name = "creditlimit" },
                new GraphQlFieldMetadata { Name = "description" },
                new GraphQlFieldMetadata { Name = "disabledreason" },
                new GraphQlFieldMetadata { Name = "divisionname" },
                new GraphQlFieldMetadata { Name = "emailaddress" },
                new GraphQlFieldMetadata { Name = "exchangerate" },
                new GraphQlFieldMetadata { Name = "fileasname" },
                new GraphQlFieldMetadata { Name = "ftpsiteurl" },
                new GraphQlFieldMetadata { Name = "importsequencenumber" },
                new GraphQlFieldMetadata { Name = "inheritancemask" },
                new GraphQlFieldMetadata { Name = "isdisabled" },
                new GraphQlFieldMetadata { Name = "modifiedby" },
                new GraphQlFieldMetadata { Name = "modifiedon" },
                new GraphQlFieldMetadata { Name = "modifiedonbehalfby" },
                new GraphQlFieldMetadata { Name = "name" },
                new GraphQlFieldMetadata { Name = "_organizationid_value" },
                new GraphQlFieldMetadata { Name = "overriddencreatedon" },
                new GraphQlFieldMetadata { Name = "parentbusinessunitid", IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "picture" },
                new GraphQlFieldMetadata { Name = "stockexchange" },
                new GraphQlFieldMetadata { Name = "tickersymbol" },
                new GraphQlFieldMetadata { Name = "transactioncurrencyid" },
                new GraphQlFieldMetadata { Name = "utcoffset" },
                new GraphQlFieldMetadata { Name = "versionnumber" },
                new GraphQlFieldMetadata { Name = "websiteurl" },
                new GraphQlFieldMetadata { Name = "workflowsuspended" }
            };

        protected override string TypeName { get { return "BusinessUnit"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public BusinessUnitQueryBuilder WithAddress1Addressid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_addressid", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Addressid()
        {
            return ExceptField("address1_addressid");
        }

        public BusinessUnitQueryBuilder WithAddress1Addresstypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_addresstypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Addresstypecode()
        {
            return ExceptField("address1_addresstypecode");
        }

        public BusinessUnitQueryBuilder WithAddress1City(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_city", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1City()
        {
            return ExceptField("address1_city");
        }

        public BusinessUnitQueryBuilder WithAddress1Country(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_country", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Country()
        {
            return ExceptField("address1_country");
        }

        public BusinessUnitQueryBuilder WithAddress1County(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_county", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1County()
        {
            return ExceptField("address1_county");
        }

        public BusinessUnitQueryBuilder WithAddress1Fax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_fax", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Fax()
        {
            return ExceptField("address1_fax");
        }

        public BusinessUnitQueryBuilder WithAddress1Latitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_latitude", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Latitude()
        {
            return ExceptField("address1_latitude");
        }

        public BusinessUnitQueryBuilder WithAddress1Line1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line1", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Line1()
        {
            return ExceptField("address1_line1");
        }

        public BusinessUnitQueryBuilder WithAddress1Line2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line2", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Line2()
        {
            return ExceptField("address1_line2");
        }

        public BusinessUnitQueryBuilder WithAddress1Line3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_line3", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Line3()
        {
            return ExceptField("address1_line3");
        }

        public BusinessUnitQueryBuilder WithAddress1Longitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_longitude", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Longitude()
        {
            return ExceptField("address1_longitude");
        }

        public BusinessUnitQueryBuilder WithAddress1Name(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_name", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Name()
        {
            return ExceptField("address1_name");
        }

        public BusinessUnitQueryBuilder WithAddress1Postalcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_postalcode", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Postalcode()
        {
            return ExceptField("address1_postalcode");
        }

        public BusinessUnitQueryBuilder WithAddress1Postofficebox(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_postofficebox", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Postofficebox()
        {
            return ExceptField("address1_postofficebox");
        }

        public BusinessUnitQueryBuilder WithAddress1Shippingmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_shippingmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Shippingmethodcode()
        {
            return ExceptField("address1_shippingmethodcode");
        }

        public BusinessUnitQueryBuilder WithAddress1Stateorprovince(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_stateorprovince", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Stateorprovince()
        {
            return ExceptField("address1_stateorprovince");
        }

        public BusinessUnitQueryBuilder WithAddress1Telephone1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone1", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Telephone1()
        {
            return ExceptField("address1_telephone1");
        }

        public BusinessUnitQueryBuilder WithAddress1Telephone2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone2", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Telephone2()
        {
            return ExceptField("address1_telephone2");
        }

        public BusinessUnitQueryBuilder WithAddress1Telephone3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_telephone3", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Telephone3()
        {
            return ExceptField("address1_telephone3");
        }

        public BusinessUnitQueryBuilder WithAddress1Upszone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_upszone", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Upszone()
        {
            return ExceptField("address1_upszone");
        }

        public BusinessUnitQueryBuilder WithAddress1Utcoffset(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address1_utcoffset", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress1Utcoffset()
        {
            return ExceptField("address1_utcoffset");
        }

        public BusinessUnitQueryBuilder WithAddress2Addressid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_addressid", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Addressid()
        {
            return ExceptField("address2_addressid");
        }

        public BusinessUnitQueryBuilder WithAddress2Addresstypecode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_addresstypecode", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Addresstypecode()
        {
            return ExceptField("address2_addresstypecode");
        }

        public BusinessUnitQueryBuilder WithAddress2City(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_city", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2City()
        {
            return ExceptField("address2_city");
        }

        public BusinessUnitQueryBuilder WithAddress2Country(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_country", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Country()
        {
            return ExceptField("address2_country");
        }

        public BusinessUnitQueryBuilder WithAddress2County(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_county", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2County()
        {
            return ExceptField("address2_county");
        }

        public BusinessUnitQueryBuilder WithAddress2Fax(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_fax", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Fax()
        {
            return ExceptField("address2_fax");
        }

        public BusinessUnitQueryBuilder WithAddress2Latitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_latitude", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Latitude()
        {
            return ExceptField("address2_latitude");
        }

        public BusinessUnitQueryBuilder WithAddress2Line1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line1", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Line1()
        {
            return ExceptField("address2_line1");
        }

        public BusinessUnitQueryBuilder WithAddress2Line2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line2", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Line2()
        {
            return ExceptField("address2_line2");
        }

        public BusinessUnitQueryBuilder WithAddress2Line3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_line3", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Line3()
        {
            return ExceptField("address2_line3");
        }

        public BusinessUnitQueryBuilder WithAddress2Longitude(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_longitude", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Longitude()
        {
            return ExceptField("address2_longitude");
        }

        public BusinessUnitQueryBuilder WithAddress2Name(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_name", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Name()
        {
            return ExceptField("address2_name");
        }

        public BusinessUnitQueryBuilder WithAddress2Postalcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_postalcode", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Postalcode()
        {
            return ExceptField("address2_postalcode");
        }

        public BusinessUnitQueryBuilder WithAddress2Postofficebox(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_postofficebox", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Postofficebox()
        {
            return ExceptField("address2_postofficebox");
        }

        public BusinessUnitQueryBuilder WithAddress2Shippingmethodcode(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_shippingmethodcode", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Shippingmethodcode()
        {
            return ExceptField("address2_shippingmethodcode");
        }

        public BusinessUnitQueryBuilder WithAddress2Stateorprovince(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_stateorprovince", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Stateorprovince()
        {
            return ExceptField("address2_stateorprovince");
        }

        public BusinessUnitQueryBuilder WithAddress2Telephone1(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone1", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Telephone1()
        {
            return ExceptField("address2_telephone1");
        }

        public BusinessUnitQueryBuilder WithAddress2Telephone2(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone2", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Telephone2()
        {
            return ExceptField("address2_telephone2");
        }

        public BusinessUnitQueryBuilder WithAddress2Telephone3(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_telephone3", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Telephone3()
        {
            return ExceptField("address2_telephone3");
        }

        public BusinessUnitQueryBuilder WithAddress2Upszone(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_upszone", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Upszone()
        {
            return ExceptField("address2_upszone");
        }

        public BusinessUnitQueryBuilder WithAddress2Utcoffset(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("address2_utcoffset", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptAddress2Utcoffset()
        {
            return ExceptField("address2_utcoffset");
        }

        public BusinessUnitQueryBuilder WithBusinessunitid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("businessunitid", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptBusinessunitid()
        {
            return ExceptField("businessunitid");
        }

        public BusinessUnitQueryBuilder WithCalendarid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("calendarid", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptCalendarid()
        {
            return ExceptField("calendarid");
        }

        public BusinessUnitQueryBuilder WithCostcenter(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("costcenter", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptCostcenter()
        {
            return ExceptField("costcenter");
        }

        public BusinessUnitQueryBuilder WithCreatedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdby", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptCreatedby()
        {
            return ExceptField("createdby");
        }

        public BusinessUnitQueryBuilder WithCreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdon", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptCreatedon()
        {
            return ExceptField("createdon");
        }

        public BusinessUnitQueryBuilder WithCreatedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("createdonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptCreatedonbehalfby()
        {
            return ExceptField("createdonbehalfby");
        }

        public BusinessUnitQueryBuilder WithCreditlimit(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("creditlimit", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptCreditlimit()
        {
            return ExceptField("creditlimit");
        }

        public BusinessUnitQueryBuilder WithDescription(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("description", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptDescription()
        {
            return ExceptField("description");
        }

        public BusinessUnitQueryBuilder WithDisabledreason(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("disabledreason", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptDisabledreason()
        {
            return ExceptField("disabledreason");
        }

        public BusinessUnitQueryBuilder WithDivisionname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("divisionname", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptDivisionname()
        {
            return ExceptField("divisionname");
        }

        public BusinessUnitQueryBuilder WithEmailaddress(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("emailaddress", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptEmailaddress()
        {
            return ExceptField("emailaddress");
        }

        public BusinessUnitQueryBuilder WithExchangerate(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("exchangerate", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptExchangerate()
        {
            return ExceptField("exchangerate");
        }

        public BusinessUnitQueryBuilder WithFileasname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("fileasname", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptFileasname()
        {
            return ExceptField("fileasname");
        }

        public BusinessUnitQueryBuilder WithFtpsiteurl(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("ftpsiteurl", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptFtpsiteurl()
        {
            return ExceptField("ftpsiteurl");
        }

        public BusinessUnitQueryBuilder WithImportsequencenumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("importsequencenumber", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptImportsequencenumber()
        {
            return ExceptField("importsequencenumber");
        }

        public BusinessUnitQueryBuilder WithInheritancemask(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("inheritancemask", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptInheritancemask()
        {
            return ExceptField("inheritancemask");
        }

        public BusinessUnitQueryBuilder WithIsdisabled(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("isdisabled", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptIsdisabled()
        {
            return ExceptField("isdisabled");
        }

        public BusinessUnitQueryBuilder WithModifiedby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedby", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptModifiedby()
        {
            return ExceptField("modifiedby");
        }

        public BusinessUnitQueryBuilder WithModifiedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedon", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptModifiedon()
        {
            return ExceptField("modifiedon");
        }

        public BusinessUnitQueryBuilder WithModifiedonbehalfby(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("modifiedonbehalfby", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptModifiedonbehalfby()
        {
            return ExceptField("modifiedonbehalfby");
        }

        public BusinessUnitQueryBuilder WithName(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("name", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptName()
        {
            return ExceptField("name");
        }

        public BusinessUnitQueryBuilder WithOrganizationidValue(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("_organizationid_value", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptOrganizationidValue()
        {
            return ExceptField("_organizationid_value");
        }

        public BusinessUnitQueryBuilder WithOverriddencreatedon(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("overriddencreatedon", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptOverriddencreatedon()
        {
            return ExceptField("overriddencreatedon");
        }

        public BusinessUnitQueryBuilder WithParentbusinessunitid(BusinessUnitQueryBuilder businessUnitQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("parentbusinessunitid", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptParentbusinessunitid()
        {
            return ExceptField("parentbusinessunitid");
        }

        public BusinessUnitQueryBuilder WithPicture(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("picture", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptPicture()
        {
            return ExceptField("picture");
        }

        public BusinessUnitQueryBuilder WithStockexchange(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("stockexchange", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptStockexchange()
        {
            return ExceptField("stockexchange");
        }

        public BusinessUnitQueryBuilder WithTickersymbol(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("tickersymbol", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptTickersymbol()
        {
            return ExceptField("tickersymbol");
        }

        public BusinessUnitQueryBuilder WithTransactioncurrencyid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("transactioncurrencyid", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptTransactioncurrencyid()
        {
            return ExceptField("transactioncurrencyid");
        }

        public BusinessUnitQueryBuilder WithUtcoffset(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("utcoffset", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptUtcoffset()
        {
            return ExceptField("utcoffset");
        }

        public BusinessUnitQueryBuilder WithVersionnumber(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("versionnumber", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptVersionnumber()
        {
            return ExceptField("versionnumber");
        }

        public BusinessUnitQueryBuilder WithWebsiteurl(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("websiteurl", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptWebsiteurl()
        {
            return ExceptField("websiteurl");
        }

        public BusinessUnitQueryBuilder WithWorkflowsuspended(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("workflowsuspended", alias, new GraphQlDirective[] { include, skip });
        }

        public BusinessUnitQueryBuilder ExceptWorkflowsuspended()
        {
            return ExceptField("workflowsuspended");
        }
    }

    public partial class SystemUserQueryBuilder : GraphQlQueryBuilder<SystemUserQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "systemuserid" },
                new GraphQlFieldMetadata { Name = "fullname" }
            };

        protected override string TypeName { get { return "SystemUser"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public SystemUserQueryBuilder WithSystemuserid(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("systemuserid", alias, new GraphQlDirective[] { include, skip });
        }

        public SystemUserQueryBuilder ExceptSystemuserid()
        {
            return ExceptField("systemuserid");
        }

        public SystemUserQueryBuilder WithFullname(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("fullname", alias, new GraphQlDirective[] { include, skip });
        }

        public SystemUserQueryBuilder ExceptFullname()
        {
            return ExceptField("fullname");
        }
    }

    public partial class MutationQueryBuilder : GraphQlQueryBuilder<MutationQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "createAccount", IsComplex = true, QueryBuilderType = typeof(AccountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updateAccount", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(AccountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "createSubscription", IsComplex = true, QueryBuilderType = typeof(SubscriptionQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updateSubscription", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(SubscriptionQueryBuilder) },
                new GraphQlFieldMetadata { Name = "createContact", IsComplex = true, QueryBuilderType = typeof(ContactQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updateContact", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ContactQueryBuilder) }
            };

        protected override string TypeName { get { return "Mutation"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MutationQueryBuilder(string operationName = null) : base("mutation", operationName)
        {
        }

        public MutationQueryBuilder WithParameter<T>(GraphQlQueryParameter<T> parameter)
        {
            return WithParameterInternal(parameter);
        }

        public MutationQueryBuilder WithCreateAccount(AccountQueryBuilder accountQueryBuilder, QueryBuilderParameter<AccountInput> input = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (input != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "input", ArgumentValue = input} );

            return WithObjectField("createAccount", alias, accountQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public MutationQueryBuilder ExceptCreateAccount()
        {
            return ExceptField("createAccount");
        }

        public MutationQueryBuilder WithUpdateAccount(AccountQueryBuilder accountQueryBuilder, QueryBuilderParameter<Guid> accountId, QueryBuilderParameter<AccountInput> input = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "accountId", ArgumentValue = accountId} );
            if (input != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "input", ArgumentValue = input} );

            return WithObjectField("updateAccount", alias, accountQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public MutationQueryBuilder ExceptUpdateAccount()
        {
            return ExceptField("updateAccount");
        }

        public MutationQueryBuilder WithCreateSubscription(SubscriptionQueryBuilder subscriptionQueryBuilder, QueryBuilderParameter<SubscriptionInput> input = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (input != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "input", ArgumentValue = input} );

            return WithObjectField("createSubscription", alias, subscriptionQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public MutationQueryBuilder ExceptCreateSubscription()
        {
            return ExceptField("createSubscription");
        }

        public MutationQueryBuilder WithUpdateSubscription(SubscriptionQueryBuilder subscriptionQueryBuilder, QueryBuilderParameter<Guid> subscriptionId, QueryBuilderParameter<SubscriptionInput> input = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subscriptionId", ArgumentValue = subscriptionId} );
            if (input != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "input", ArgumentValue = input} );

            return WithObjectField("updateSubscription", alias, subscriptionQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public MutationQueryBuilder ExceptUpdateSubscription()
        {
            return ExceptField("updateSubscription");
        }

        public MutationQueryBuilder WithCreateContact(ContactQueryBuilder contactQueryBuilder, QueryBuilderParameter<ContactInput> input = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (input != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "input", ArgumentValue = input} );

            return WithObjectField("createContact", alias, contactQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public MutationQueryBuilder ExceptCreateContact()
        {
            return ExceptField("createContact");
        }

        public MutationQueryBuilder WithUpdateContact(ContactQueryBuilder contactQueryBuilder, QueryBuilderParameter<Guid> contactId, QueryBuilderParameter<ContactInput> input = null, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "contactId", ArgumentValue = contactId} );
            if (input != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "input", ArgumentValue = input} );

            return WithObjectField("updateContact", alias, contactQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public MutationQueryBuilder ExceptUpdateContact()
        {
            return ExceptField("updateContact");
        }
    }

    public partial class QueryQueryBuilder : GraphQlQueryBuilder<QueryQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "accounts", IsComplex = true, QueryBuilderType = typeof(AccountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "account", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(AccountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "rolereference", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(RoleReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "rolereferences", IsComplex = true, QueryBuilderType = typeof(RoleReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "subscriptionproduct", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(SubscriptionProductQueryBuilder) },
                new GraphQlFieldMetadata { Name = "subscriptionproducts", IsComplex = true, QueryBuilderType = typeof(SubscriptionProductQueryBuilder) },
                new GraphQlFieldMetadata { Name = "productcomponentreference", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ProductComponentReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "productcomponentreferenceForName", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ProductComponentReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "productcomponentreferences", IsComplex = true, QueryBuilderType = typeof(ProductComponentReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "productplanreference", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ProductPlanReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "productplanreferences", IsComplex = true, QueryBuilderType = typeof(ProductPlanReferenceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "subscription", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(SubscriptionQueryBuilder) },
                new GraphQlFieldMetadata { Name = "subscriptionForProductAndAccount", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(SubscriptionQueryBuilder) },
                new GraphQlFieldMetadata { Name = "subscriptions", IsComplex = true, QueryBuilderType = typeof(SubscriptionQueryBuilder) },
                new GraphQlFieldMetadata { Name = "subscriptionComponents", IsComplex = true, QueryBuilderType = typeof(SubscriptionComponentQueryBuilder) },
                new GraphQlFieldMetadata { Name = "subscriptionrole", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(SubscriptionRoleQueryBuilder) },
                new GraphQlFieldMetadata { Name = "subscriptionroles", IsComplex = true, QueryBuilderType = typeof(SubscriptionRoleQueryBuilder) },
                new GraphQlFieldMetadata { Name = "contact", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ContactQueryBuilder) },
                new GraphQlFieldMetadata { Name = "contacts", IsComplex = true, QueryBuilderType = typeof(ContactQueryBuilder) },
                new GraphQlFieldMetadata { Name = "team", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TeamQueryBuilder) },
                new GraphQlFieldMetadata { Name = "businessunit", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(BusinessUnitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "systemusers", IsComplex = true, QueryBuilderType = typeof(SystemUserQueryBuilder) },
                new GraphQlFieldMetadata { Name = "systemuser", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(SystemUserQueryBuilder) }
            };

        protected override string TypeName { get { return "Query"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public QueryQueryBuilder(string operationName = null) : base("query", operationName)
        {
        }

        public QueryQueryBuilder WithParameter<T>(GraphQlQueryParameter<T> parameter)
        {
            return WithParameterInternal(parameter);
        }

        public QueryQueryBuilder WithAccounts(AccountQueryBuilder accountQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("accounts", alias, accountQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptAccounts()
        {
            return ExceptField("accounts");
        }

        public QueryQueryBuilder WithAccount(AccountQueryBuilder accountQueryBuilder, QueryBuilderParameter<Guid> accountId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "accountId", ArgumentValue = accountId} );
            return WithObjectField("account", alias, accountQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptAccount()
        {
            return ExceptField("account");
        }

        public QueryQueryBuilder WithRolereference(RoleReferenceQueryBuilder roleReferenceQueryBuilder, QueryBuilderParameter<Guid> theRolereferenceid, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "the_rolereferenceid", ArgumentValue = theRolereferenceid} );
            return WithObjectField("rolereference", alias, roleReferenceQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptRolereference()
        {
            return ExceptField("rolereference");
        }

        public QueryQueryBuilder WithRolereferences(RoleReferenceQueryBuilder roleReferenceQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("rolereferences", alias, roleReferenceQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptRolereferences()
        {
            return ExceptField("rolereferences");
        }

        public QueryQueryBuilder WithSubscriptionproduct(SubscriptionProductQueryBuilder subscriptionProductQueryBuilder, QueryBuilderParameter<Guid> subscriptionProductId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subscriptionProductId", ArgumentValue = subscriptionProductId} );
            return WithObjectField("subscriptionproduct", alias, subscriptionProductQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptSubscriptionproduct()
        {
            return ExceptField("subscriptionproduct");
        }

        public QueryQueryBuilder WithSubscriptionproducts(SubscriptionProductQueryBuilder subscriptionProductQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("subscriptionproducts", alias, subscriptionProductQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptSubscriptionproducts()
        {
            return ExceptField("subscriptionproducts");
        }

        public QueryQueryBuilder WithProductcomponentreference(ProductComponentReferenceQueryBuilder productComponentReferenceQueryBuilder, QueryBuilderParameter<Guid> productComponentReferenceId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "productComponentReferenceId", ArgumentValue = productComponentReferenceId} );
            return WithObjectField("productcomponentreference", alias, productComponentReferenceQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptProductcomponentreference()
        {
            return ExceptField("productcomponentreference");
        }

        public QueryQueryBuilder WithProductcomponentreferenceForName(ProductComponentReferenceQueryBuilder productComponentReferenceQueryBuilder, QueryBuilderParameter<Guid> productComponentReferenceName, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "productComponentReferenceName", ArgumentValue = productComponentReferenceName} );
            return WithObjectField("productcomponentreferenceForName", alias, productComponentReferenceQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptProductcomponentreferenceForName()
        {
            return ExceptField("productcomponentreferenceForName");
        }

        public QueryQueryBuilder WithProductcomponentreferences(ProductComponentReferenceQueryBuilder productComponentReferenceQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("productcomponentreferences", alias, productComponentReferenceQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptProductcomponentreferences()
        {
            return ExceptField("productcomponentreferences");
        }

        public QueryQueryBuilder WithProductplanreference(ProductPlanReferenceQueryBuilder productPlanReferenceQueryBuilder, QueryBuilderParameter<Guid> theProductplanreferenceid, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "the_productplanreferenceid", ArgumentValue = theProductplanreferenceid} );
            return WithObjectField("productplanreference", alias, productPlanReferenceQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptProductplanreference()
        {
            return ExceptField("productplanreference");
        }

        public QueryQueryBuilder WithProductplanreferences(ProductPlanReferenceQueryBuilder productPlanReferenceQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("productplanreferences", alias, productPlanReferenceQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptProductplanreferences()
        {
            return ExceptField("productplanreferences");
        }

        public QueryQueryBuilder WithSubscription(SubscriptionQueryBuilder subscriptionQueryBuilder, QueryBuilderParameter<Guid> subscriptionId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subscriptionId", ArgumentValue = subscriptionId} );
            return WithObjectField("subscription", alias, subscriptionQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptSubscription()
        {
            return ExceptField("subscription");
        }

        public QueryQueryBuilder WithSubscriptionForProductAndAccount(SubscriptionQueryBuilder subscriptionQueryBuilder, QueryBuilderParameter<Guid> accountId, QueryBuilderParameter<Guid> productplanreferenceid, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "accountId", ArgumentValue = accountId} );
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "productplanreferenceid", ArgumentValue = productplanreferenceid} );
            return WithObjectField("subscriptionForProductAndAccount", alias, subscriptionQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptSubscriptionForProductAndAccount()
        {
            return ExceptField("subscriptionForProductAndAccount");
        }

        public QueryQueryBuilder WithSubscriptions(SubscriptionQueryBuilder subscriptionQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("subscriptions", alias, subscriptionQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptSubscriptions()
        {
            return ExceptField("subscriptions");
        }

        public QueryQueryBuilder WithSubscriptionComponents(SubscriptionComponentQueryBuilder subscriptionComponentQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("subscriptionComponents", alias, subscriptionComponentQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptSubscriptionComponents()
        {
            return ExceptField("subscriptionComponents");
        }

        public QueryQueryBuilder WithSubscriptionrole(SubscriptionRoleQueryBuilder subscriptionRoleQueryBuilder, QueryBuilderParameter<Guid> subscriptionRoleId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subscriptionRoleId", ArgumentValue = subscriptionRoleId} );
            return WithObjectField("subscriptionrole", alias, subscriptionRoleQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptSubscriptionrole()
        {
            return ExceptField("subscriptionrole");
        }

        public QueryQueryBuilder WithSubscriptionroles(SubscriptionRoleQueryBuilder subscriptionRoleQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("subscriptionroles", alias, subscriptionRoleQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptSubscriptionroles()
        {
            return ExceptField("subscriptionroles");
        }

        public QueryQueryBuilder WithContact(ContactQueryBuilder contactQueryBuilder, QueryBuilderParameter<Guid> contactId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "contactId", ArgumentValue = contactId} );
            return WithObjectField("contact", alias, contactQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptContact()
        {
            return ExceptField("contact");
        }

        public QueryQueryBuilder WithContacts(ContactQueryBuilder contactQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("contacts", alias, contactQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptContacts()
        {
            return ExceptField("contacts");
        }

        public QueryQueryBuilder WithTeam(TeamQueryBuilder teamQueryBuilder, QueryBuilderParameter<Guid> teamId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "teamId", ArgumentValue = teamId} );
            return WithObjectField("team", alias, teamQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptTeam()
        {
            return ExceptField("team");
        }

        public QueryQueryBuilder WithBusinessunit(BusinessUnitQueryBuilder businessUnitQueryBuilder, QueryBuilderParameter<Guid> businessUnitId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "businessUnitId", ArgumentValue = businessUnitId} );
            return WithObjectField("businessunit", alias, businessUnitQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptBusinessunit()
        {
            return ExceptField("businessunit");
        }

        public QueryQueryBuilder WithSystemusers(SystemUserQueryBuilder systemUserQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("systemusers", alias, systemUserQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public QueryQueryBuilder ExceptSystemusers()
        {
            return ExceptField("systemusers");
        }

        public QueryQueryBuilder WithSystemuser(SystemUserQueryBuilder systemUserQueryBuilder, QueryBuilderParameter<Guid> systemuserId, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "systemuserId", ArgumentValue = systemuserId} );
            return WithObjectField("systemuser", alias, systemUserQueryBuilder, new GraphQlDirective[] { include, skip }, args);
        }

        public QueryQueryBuilder ExceptSystemuser()
        {
            return ExceptField("systemuser");
        }
    }
    #endregion

    #region input classes
    public partial class AccountInput : IGraphQlInputObject
    {
        private InputPropertyInfo _address1Country;
        private InputPropertyInfo _address1Line1;
        private InputPropertyInfo _address1Line2;
        private InputPropertyInfo _address1Line3;
        private InputPropertyInfo _address1Postalcode;
        private InputPropertyInfo _address1Stateorprovince;
        private InputPropertyInfo _cr68CThetaproductsexternalaccountid;
        private InputPropertyInfo _name;
        private InputPropertyInfo _theAddress1Building;
        private InputPropertyInfo _theAddress1Floor;
        private InputPropertyInfo _theAddress1Payername;
        private InputPropertyInfo _theAddress1Room;
        private InputPropertyInfo _thePaymentprovidercustomerid;
        private InputPropertyInfo _thePaymentprovidername;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_country")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Address1Country
        {
            get { return (QueryBuilderParameter<string>)_address1Country.Value; }
            set { _address1Country = new InputPropertyInfo { Name = "address1_country", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line1")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Address1Line1
        {
            get { return (QueryBuilderParameter<string>)_address1Line1.Value; }
            set { _address1Line1 = new InputPropertyInfo { Name = "address1_line1", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line2")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Address1Line2
        {
            get { return (QueryBuilderParameter<string>)_address1Line2.Value; }
            set { _address1Line2 = new InputPropertyInfo { Name = "address1_line2", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line3")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Address1Line3
        {
            get { return (QueryBuilderParameter<string>)_address1Line3.Value; }
            set { _address1Line3 = new InputPropertyInfo { Name = "address1_line3", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_postalcode")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Address1Postalcode
        {
            get { return (QueryBuilderParameter<string>)_address1Postalcode.Value; }
            set { _address1Postalcode = new InputPropertyInfo { Name = "address1_postalcode", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_stateorprovince")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Address1Stateorprovince
        {
            get { return (QueryBuilderParameter<string>)_address1Stateorprovince.Value; }
            set { _address1Stateorprovince = new InputPropertyInfo { Name = "address1_stateorprovince", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("cr68c_thetaproductsexternalaccountid")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Cr68CThetaproductsexternalaccountid
        {
            get { return (QueryBuilderParameter<string>)_cr68CThetaproductsexternalaccountid.Value; }
            set { _cr68CThetaproductsexternalaccountid = new InputPropertyInfo { Name = "cr68c_thetaproductsexternalaccountid", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Name
        {
            get { return (QueryBuilderParameter<string>)_name.Value; }
            set { _name = new InputPropertyInfo { Name = "name", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_address1_building")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheAddress1Building
        {
            get { return (QueryBuilderParameter<string>)_theAddress1Building.Value; }
            set { _theAddress1Building = new InputPropertyInfo { Name = "the_address1_building", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_address1floor")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheAddress1Floor
        {
            get { return (QueryBuilderParameter<string>)_theAddress1Floor.Value; }
            set { _theAddress1Floor = new InputPropertyInfo { Name = "the_address1floor", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_address1payername")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheAddress1Payername
        {
            get { return (QueryBuilderParameter<string>)_theAddress1Payername.Value; }
            set { _theAddress1Payername = new InputPropertyInfo { Name = "the_address1payername", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_address1room")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheAddress1Room
        {
            get { return (QueryBuilderParameter<string>)_theAddress1Room.Value; }
            set { _theAddress1Room = new InputPropertyInfo { Name = "the_address1room", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentprovidercustomerid")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ThePaymentprovidercustomerid
        {
            get { return (QueryBuilderParameter<string>)_thePaymentprovidercustomerid.Value; }
            set { _thePaymentprovidercustomerid = new InputPropertyInfo { Name = "the_paymentprovidercustomerid", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentprovidername")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ThePaymentprovidername
        {
            get { return (QueryBuilderParameter<string>)_thePaymentprovidername.Value; }
            set { _thePaymentprovidername = new InputPropertyInfo { Name = "the_paymentprovidername", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_address1Country.Name != null) yield return _address1Country;
            if (_address1Line1.Name != null) yield return _address1Line1;
            if (_address1Line2.Name != null) yield return _address1Line2;
            if (_address1Line3.Name != null) yield return _address1Line3;
            if (_address1Postalcode.Name != null) yield return _address1Postalcode;
            if (_address1Stateorprovince.Name != null) yield return _address1Stateorprovince;
            if (_cr68CThetaproductsexternalaccountid.Name != null) yield return _cr68CThetaproductsexternalaccountid;
            if (_name.Name != null) yield return _name;
            if (_theAddress1Building.Name != null) yield return _theAddress1Building;
            if (_theAddress1Floor.Name != null) yield return _theAddress1Floor;
            if (_theAddress1Payername.Name != null) yield return _theAddress1Payername;
            if (_theAddress1Room.Name != null) yield return _theAddress1Room;
            if (_thePaymentprovidercustomerid.Name != null) yield return _thePaymentprovidercustomerid;
            if (_thePaymentprovidername.Name != null) yield return _thePaymentprovidername;
        }
    }

    public partial class SubscriptionInput : IGraphQlInputObject
    {
        private InputPropertyInfo _cr68CName;
        private InputPropertyInfo _theAccountValue;
        private InputPropertyInfo _theCurrency;
        private InputPropertyInfo _theDaysuntilendtrial;
        private InputPropertyInfo _theIstrial;
        private InputPropertyInfo _theOperationalstatus;
        private InputPropertyInfo _thePaymentproviderproductplanexternalidnew;
        private InputPropertyInfo _thePaymentproviderproductplanexternalidold;
        private InputPropertyInfo _thePaymentsubscriptionidnew;
        private InputPropertyInfo _thePaymentsubscriptionidold;
        private InputPropertyInfo _thePriceidnew;
        private InputPropertyInfo _thePriceidold;
        private InputPropertyInfo _theProductplanold;
        private InputPropertyInfo _theProductplanreferenceValue;
        private InputPropertyInfo _theSubscriptionproductValue;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("cr68c_name")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Cr68CName
        {
            get { return (QueryBuilderParameter<string>)_cr68CName.Value; }
            set { _cr68CName = new InputPropertyInfo { Name = "cr68c_name", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_the_account_value")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheAccountValue
        {
            get { return (QueryBuilderParameter<string>)_theAccountValue.Value; }
            set { _theAccountValue = new InputPropertyInfo { Name = "_the_account_value", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_currency")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheCurrency
        {
            get { return (QueryBuilderParameter<string>)_theCurrency.Value; }
            set { _theCurrency = new InputPropertyInfo { Name = "the_currency", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_daysuntilendtrial")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> TheDaysuntilendtrial
        {
            get { return (QueryBuilderParameter<int?>)_theDaysuntilendtrial.Value; }
            set { _theDaysuntilendtrial = new InputPropertyInfo { Name = "the_daysuntilendtrial", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_istrial")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> TheIstrial
        {
            get { return (QueryBuilderParameter<bool?>)_theIstrial.Value; }
            set { _theIstrial = new InputPropertyInfo { Name = "the_istrial", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_operationalstatus")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheOperationalstatus
        {
            get { return (QueryBuilderParameter<string>)_theOperationalstatus.Value; }
            set { _theOperationalstatus = new InputPropertyInfo { Name = "the_operationalstatus", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentproviderproductplanexternalidnew")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ThePaymentproviderproductplanexternalidnew
        {
            get { return (QueryBuilderParameter<string>)_thePaymentproviderproductplanexternalidnew.Value; }
            set { _thePaymentproviderproductplanexternalidnew = new InputPropertyInfo { Name = "the_paymentproviderproductplanexternalidnew", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentproviderproductplanexternalidold")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ThePaymentproviderproductplanexternalidold
        {
            get { return (QueryBuilderParameter<string>)_thePaymentproviderproductplanexternalidold.Value; }
            set { _thePaymentproviderproductplanexternalidold = new InputPropertyInfo { Name = "the_paymentproviderproductplanexternalidold", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentsubscriptionidnew")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ThePaymentsubscriptionidnew
        {
            get { return (QueryBuilderParameter<string>)_thePaymentsubscriptionidnew.Value; }
            set { _thePaymentsubscriptionidnew = new InputPropertyInfo { Name = "the_paymentsubscriptionidnew", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentsubscriptionidold")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ThePaymentsubscriptionidold
        {
            get { return (QueryBuilderParameter<string>)_thePaymentsubscriptionidold.Value; }
            set { _thePaymentsubscriptionidold = new InputPropertyInfo { Name = "the_paymentsubscriptionidold", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_priceidnew")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ThePriceidnew
        {
            get { return (QueryBuilderParameter<string>)_thePriceidnew.Value; }
            set { _thePriceidnew = new InputPropertyInfo { Name = "the_priceidnew", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_priceidold")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ThePriceidold
        {
            get { return (QueryBuilderParameter<string>)_thePriceidold.Value; }
            set { _thePriceidold = new InputPropertyInfo { Name = "the_priceidold", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_productplanold")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheProductplanold
        {
            get { return (QueryBuilderParameter<string>)_theProductplanold.Value; }
            set { _theProductplanold = new InputPropertyInfo { Name = "the_productplanold", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_the_productplanreference_value")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheProductplanreferenceValue
        {
            get { return (QueryBuilderParameter<string>)_theProductplanreferenceValue.Value; }
            set { _theProductplanreferenceValue = new InputPropertyInfo { Name = "_the_productplanreference_value", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_the_subscriptionproduct_value")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TheSubscriptionproductValue
        {
            get { return (QueryBuilderParameter<string>)_theSubscriptionproductValue.Value; }
            set { _theSubscriptionproductValue = new InputPropertyInfo { Name = "_the_subscriptionproduct_value", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_cr68CName.Name != null) yield return _cr68CName;
            if (_theAccountValue.Name != null) yield return _theAccountValue;
            if (_theCurrency.Name != null) yield return _theCurrency;
            if (_theDaysuntilendtrial.Name != null) yield return _theDaysuntilendtrial;
            if (_theIstrial.Name != null) yield return _theIstrial;
            if (_theOperationalstatus.Name != null) yield return _theOperationalstatus;
            if (_thePaymentproviderproductplanexternalidnew.Name != null) yield return _thePaymentproviderproductplanexternalidnew;
            if (_thePaymentproviderproductplanexternalidold.Name != null) yield return _thePaymentproviderproductplanexternalidold;
            if (_thePaymentsubscriptionidnew.Name != null) yield return _thePaymentsubscriptionidnew;
            if (_thePaymentsubscriptionidold.Name != null) yield return _thePaymentsubscriptionidold;
            if (_thePriceidnew.Name != null) yield return _thePriceidnew;
            if (_thePriceidold.Name != null) yield return _thePriceidold;
            if (_theProductplanold.Name != null) yield return _theProductplanold;
            if (_theProductplanreferenceValue.Name != null) yield return _theProductplanreferenceValue;
            if (_theSubscriptionproductValue.Name != null) yield return _theSubscriptionproductValue;
        }
    }

    public partial class ContactInput : IGraphQlInputObject
    {
        private InputPropertyInfo _accountidValue;
        private InputPropertyInfo _emailaddress1;
        private InputPropertyInfo _externaluseridentifier;
        private InputPropertyInfo _firstname;
        private InputPropertyInfo _lastname;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_accountid_value")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountidValue
        {
            get { return (QueryBuilderParameter<string>)_accountidValue.Value; }
            set { _accountidValue = new InputPropertyInfo { Name = "_accountid_value", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Emailaddress1
        {
            get { return (QueryBuilderParameter<string>)_emailaddress1.Value; }
            set { _emailaddress1 = new InputPropertyInfo { Name = "emailaddress1", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Externaluseridentifier
        {
            get { return (QueryBuilderParameter<string>)_externaluseridentifier.Value; }
            set { _externaluseridentifier = new InputPropertyInfo { Name = "externaluseridentifier", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Firstname
        {
            get { return (QueryBuilderParameter<string>)_firstname.Value; }
            set { _firstname = new InputPropertyInfo { Name = "firstname", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Lastname
        {
            get { return (QueryBuilderParameter<string>)_lastname.Value; }
            set { _lastname = new InputPropertyInfo { Name = "lastname", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_accountidValue.Name != null) yield return _accountidValue;
            if (_emailaddress1.Name != null) yield return _emailaddress1;
            if (_externaluseridentifier.Name != null) yield return _externaluseridentifier;
            if (_firstname.Name != null) yield return _firstname;
            if (_lastname.Name != null) yield return _lastname;
        }
    }
    #endregion

    #region data classes
    public partial class Account
    {
        public string Accountcategorycode { get; set; }
        public string Accountclassificationcode { get; set; }
        public Guid? Accountid { get; set; }
        public string Accountnumber { get; set; }
        public string Accountratingcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_addressid")]
        #endif
        public Guid? Address1Addressid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_addresstypecode")]
        #endif
        public string Address1Addresstypecode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_city")]
        #endif
        public string Address1City { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_composite")]
        #endif
        public string Address1Composite { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_country")]
        #endif
        public string Address1Country { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_county")]
        #endif
        public string Address1County { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_fax")]
        #endif
        public string Address1Fax { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_freighttermscode")]
        #endif
        public string Address1Freighttermscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_latitude")]
        #endif
        public string Address1Latitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line1")]
        #endif
        public string Address1Line1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line2")]
        #endif
        public string Address1Line2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line3")]
        #endif
        public string Address1Line3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_longitude")]
        #endif
        public string Address1Longitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_name")]
        #endif
        public string Address1Name { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_postalcode")]
        #endif
        public string Address1Postalcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_postofficebox")]
        #endif
        public string Address1Postofficebox { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_primarycontactname")]
        #endif
        public string Address1Primarycontactname { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_shippingmethodcode")]
        #endif
        public string Address1Shippingmethodcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_stateorprovince")]
        #endif
        public string Address1Stateorprovince { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone1")]
        #endif
        public string Address1Telephone1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone2")]
        #endif
        public string Address1Telephone2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone3")]
        #endif
        public string Address1Telephone3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_upszone")]
        #endif
        public string Address1Upszone { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_utcoffset")]
        #endif
        public string Address1Utcoffset { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_addressid")]
        #endif
        public Guid? Address2Addressid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_addresstypecode")]
        #endif
        public string Address2Addresstypecode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_city")]
        #endif
        public string Address2City { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_composite")]
        #endif
        public string Address2Composite { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_country")]
        #endif
        public string Address2Country { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_county")]
        #endif
        public string Address2County { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_fax")]
        #endif
        public string Address2Fax { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_freighttermscode")]
        #endif
        public string Address2Freighttermscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_latitude")]
        #endif
        public string Address2Latitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line1")]
        #endif
        public string Address2Line1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line2")]
        #endif
        public string Address2Line2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line3")]
        #endif
        public string Address2Line3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_longitude")]
        #endif
        public string Address2Longitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_name")]
        #endif
        public string Address2Name { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_postalcode")]
        #endif
        public string Address2Postalcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_postofficebox")]
        #endif
        public string Address2Postofficebox { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_primarycontactname")]
        #endif
        public string Address2Primarycontactname { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_shippingmethodcode")]
        #endif
        public string Address2Shippingmethodcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_stateorprovince")]
        #endif
        public string Address2Stateorprovince { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone1")]
        #endif
        public string Address2Telephone1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone2")]
        #endif
        public string Address2Telephone2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone3")]
        #endif
        public string Address2Telephone3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_upszone")]
        #endif
        public string Address2Upszone { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_utcoffset")]
        #endif
        public string Address2Utcoffset { get; set; }
        public string Aging30 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("aging30_base")]
        #endif
        public string Aging30Base { get; set; }
        public string Aging60 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("aging60_base")]
        #endif
        public string Aging60Base { get; set; }
        public string Aging90 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("aging90_base")]
        #endif
        public string Aging90Base { get; set; }
        public string Businesstypecode { get; set; }
        public ICollection<Subscription> Subscriptions { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_cr68c_productsubscription_value")]
        #endif
        public string Cr68CProductsubscriptionValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("cr68c_thetaproductsexternalaccountid")]
        #endif
        public string Cr68CThetaproductsexternalaccountid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdby_value")]
        #endif
        public SystemUser CreatedbyValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdbyexternalparty_value")]
        #endif
        public string CreatedbyexternalpartyValue { get; set; }
        public string Createdon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdonbehalfby_value")]
        #endif
        public string CreatedonbehalfbyValue { get; set; }
        public string Creditlimit { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("creditlimit_base")]
        #endif
        public string CreditlimitBase { get; set; }
        public bool? Creditonhold { get; set; }
        public string Customersizecode { get; set; }
        public string Customertypecode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_defaultpricelevelid_value")]
        #endif
        public string DefaultpricelevelidValue { get; set; }
        public string Description { get; set; }
        public bool? Donotbulkemail { get; set; }
        public bool? Donotbulkpostalmail { get; set; }
        public bool? Donotemail { get; set; }
        public bool? Donotfax { get; set; }
        public bool? Donotphone { get; set; }
        public bool? Donotpostalmail { get; set; }
        public bool? Donotsendmm { get; set; }
        public string Emailaddress1 { get; set; }
        public string Emailaddress2 { get; set; }
        public string Emailaddress3 { get; set; }
        public string Entityimage { get; set; }
        public Guid? Entityimageid { get; set; }
        public decimal? Exchangerate { get; set; }
        public string Fax { get; set; }
        public bool? Followemail { get; set; }
        public string Ftpsiteurl { get; set; }
        public string Importsequencenumber { get; set; }
        public string Industrycode { get; set; }
        public string Lastonholdtime { get; set; }
        public string Lastusedincampaign { get; set; }
        public string Marketcap { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("marketcap_base")]
        #endif
        public string MarketcapBase { get; set; }
        public bool? Marketingonly { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_masterid_value")]
        #endif
        public Account MasteridValue { get; set; }
        public bool? Merged { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedby_value")]
        #endif
        public string ModifiedbyValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedbyexternalparty_value")]
        #endif
        public string ModifiedbyexternalpartyValue { get; set; }
        public string Modifiedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedonbehalfby_value")]
        #endif
        public string ModifiedonbehalfbyValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_msdyn_accountkpiid_value")]
        #endif
        public string MsdynAccountkpiidValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("msdyn_gdproptout")]
        #endif
        public bool? MsdynGdproptout { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_msdyn_salesaccelerationinsightid_value")]
        #endif
        public string MsdynSalesaccelerationinsightidValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_msdyn_segmentid_value")]
        #endif
        public string MsdynSegmentidValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("msdyncrm_insights_placeholder")]
        #endif
        public string MsdyncrmInsightsPlaceholder { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("msevtmgt_hotelgroup")]
        #endif
        public string MsevtmgtHotelgroup { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("msevtmgt_rentalcarprovider")]
        #endif
        public string MsevtmgtRentalcarprovider { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("msft_datastate")]
        #endif
        public string MsftDatastate { get; set; }
        public string Name { get; set; }
        public string Numberofemployees { get; set; }
        public string Onholdtime { get; set; }
        public string Opendeals { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("opendeals_date")]
        #endif
        public string OpendealsDate { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("opendeals_state")]
        #endif
        public string OpendealsState { get; set; }
        public string Openrevenue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("openrevenue_base")]
        #endif
        public string OpenrevenueBase { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("openrevenue_date")]
        #endif
        public string OpenrevenueDate { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("openrevenue_state")]
        #endif
        public string OpenrevenueState { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_originatingleadid_value")]
        #endif
        public string OriginatingleadidValue { get; set; }
        public string Overriddencreatedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_ownerid_value")]
        #endif
        public SystemUser OwneridValue { get; set; }
        public string Ownershipcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owningbusinessunit_value")]
        #endif
        public BusinessUnit OwningbusinessunitValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owningteam_value")]
        #endif
        public Team OwningteamValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owninguser_value")]
        #endif
        public SystemUser OwninguserValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_parentaccountid_value")]
        #endif
        public Account ParentaccountidValue { get; set; }
        public bool? Participatesinworkflow { get; set; }
        public string Paymenttermscode { get; set; }
        public string Preferredappointmentdaycode { get; set; }
        public string Preferredappointmenttimecode { get; set; }
        public string Preferredcontactmethodcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_preferredequipmentid_value")]
        #endif
        public string PreferredequipmentidValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_preferredserviceid_value")]
        #endif
        public string PreferredserviceidValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_preferredsystemuserid_value")]
        #endif
        public string PreferredsystemuseridValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_primarycontactid_value")]
        #endif
        public Contact PrimarycontactidValue { get; set; }
        public string Primarysatoriid { get; set; }
        public string Primarytwitterid { get; set; }
        public Guid? Processid { get; set; }
        public string Revenue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("revenue_base")]
        #endif
        public string RevenueBase { get; set; }
        public string Sharesoutstanding { get; set; }
        public string Shippingmethodcode { get; set; }
        public string Sic { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_slaid_value")]
        #endif
        public string SlaidValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_slainvokedid_value")]
        #endif
        public string SlainvokedidValue { get; set; }
        public Guid? Stageid { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        public string Stockexchange { get; set; }
        public string Teamsfollowed { get; set; }
        public string Telephone1 { get; set; }
        public string Telephone2 { get; set; }
        public string Telephone3 { get; set; }
        public string Territorycode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_territoryid_value")]
        #endif
        public string TerritoryidValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_address1_building")]
        #endif
        public string TheAddress1Building { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_address1floor")]
        #endif
        public string TheAddress1Floor { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_address1payername")]
        #endif
        public string TheAddress1Payername { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_address1room")]
        #endif
        public string TheAddress1Room { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentprovidercustomerid")]
        #endif
        public string ThePaymentprovidercustomerid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentprovidername")]
        #endif
        public string ThePaymentprovidername { get; set; }
        public string Tickersymbol { get; set; }
        public string Timespentbymeonemailandmeetings { get; set; }
        public string Timezoneruleversionnumber { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_transactioncurrencyid_value")]
        #endif
        public string TransactioncurrencyidValue { get; set; }
        public string Traversedpath { get; set; }
        public string Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
        public string Websiteurl { get; set; }
        public string Yominame { get; set; }
    }

    public partial class RoleReference
    {
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdby_value")]
        #endif
        public string CreatedbyValue { get; set; }
        public object Createdon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdonbehalfby_value")]
        #endif
        public string CreatedonbehalfbyValue { get; set; }
        public string Importsequencenumber { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedby_value")]
        #endif
        public string ModifiedbyValue { get; set; }
        public object Modifiedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedonbehalfby_value")]
        #endif
        public string ModifiedonbehalfbyValue { get; set; }
        public object Overriddencreatedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_ownerid_value")]
        #endif
        public Guid? OwneridValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owningbusinessunit_value")]
        #endif
        public BusinessUnit OwningbusinessunitValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owningteam_value")]
        #endif
        public Team OwningteamValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owninguser_value")]
        #endif
        public string OwninguserValue { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_isoperational")]
        #endif
        public bool? TheIsoperational { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_isroleadditive")]
        #endif
        public bool? TheIsroleadditive { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_name")]
        #endif
        public string TheName { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_rolereferenceid")]
        #endif
        public Guid? TheRolereferenceid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_the_subscriptionproduct_value")]
        #endif
        public SubscriptionProduct TheSubscriptionproductValue { get; set; }
        public string Timezoneruleversionnumber { get; set; }
        public string Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
    }

    public partial class SubscriptionProduct
    {
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdby_value")]
        #endif
        public string CreatedbyValue { get; set; }
        public string Createdon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdonbehalfby_value")]
        #endif
        public string CreatedonbehalfbyValue { get; set; }
        public string Importsequencenumber { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedby_value")]
        #endif
        public string ModifiedbyValue { get; set; }
        public string Modifiedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedonbehalfby_value")]
        #endif
        public string ModifiedonbehalfbyValue { get; set; }
        public string Overriddencreatedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_ownerid_value")]
        #endif
        public string OwneridValue { get; set; }
        public BusinessUnit Owningbusinessunit { get; set; }
        public Team Owningteam { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owninguser_value")]
        #endif
        public string OwninguserValue { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_name")]
        #endif
        public string TheName { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_subscriptionproductid")]
        #endif
        public Guid? TheSubscriptionproductid { get; set; }
        public string Timezoneruleversionnumber { get; set; }
        public string Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
    }

    public partial class SubscriptionComponent
    {
        public string Createdby { get; set; }
        public string Createdon { get; set; }
        public string Createdonbehalfby { get; set; }
        public int? Importsequencenumber { get; set; }
        public string Modifiedby { get; set; }
        public string Modifiedon { get; set; }
        public string Modifiedonbehalfby { get; set; }
        public string Overriddencreatedon { get; set; }
        public Guid? Ownerid { get; set; }
        public BusinessUnit Owningbusinessunit { get; set; }
        public Team Owningteam { get; set; }
        public string Owninguser { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_componentidexternal")]
        #endif
        public string TheComponentidexternal { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_cr68c_productsubscription_value")]
        #endif
        public string Cr68CProductsubscriptionValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_memo")]
        #endif
        public string TheMemo { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_name")]
        #endif
        public string TheName { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_productcomponentreference")]
        #endif
        public ProductComponentReference TheProductcomponentreference { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_quantity")]
        #endif
        public int? TheQuantity { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_subscriptioncomponentid")]
        #endif
        public Guid? TheSubscriptioncomponentid { get; set; }
        public int? Timezoneruleversionnumber { get; set; }
        public int? Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
    }

    public partial class ProductComponentReference
    {
        public string Createdby { get; set; }
        public string Createdon { get; set; }
        public string Createdonbehalfby { get; set; }
        public int? Importsequencenumber { get; set; }
        public string Modifiedby { get; set; }
        public string Modifiedon { get; set; }
        public string Modifiedonbehalfby { get; set; }
        public string Overriddencreatedon { get; set; }
        public Guid? Ownerid { get; set; }
        public BusinessUnit Owningbusinessunit { get; set; }
        public Team Owningteam { get; set; }
        public string Owninguser { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_name")]
        #endif
        public string TheName { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_productcomponentreferenceid")]
        #endif
        public Guid? TheProductcomponentreferenceid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_subscriptionproductid")]
        #endif
        public SubscriptionProduct TheSubscriptionproductid { get; set; }
        public int? Timezoneruleversionnumber { get; set; }
        public int? Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
    }

    public partial class ProductPlanReference
    {
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdby_value")]
        #endif
        public string CreatedbyValue { get; set; }
        public string Createdon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_createdonbehalfby_value")]
        #endif
        public string CreatedonbehalfbyValue { get; set; }
        public string Importsequencenumber { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedby_value")]
        #endif
        public string ModifiedbyValue { get; set; }
        public string Modifiedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_modifiedonbehalfby_value")]
        #endif
        public string ModifiedonbehalfbyValue { get; set; }
        public string Overriddencreatedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_ownerid_value")]
        #endif
        public string OwneridValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owningbusinessunit_value")]
        #endif
        public BusinessUnit OwningbusinessunitValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owningteam_value")]
        #endif
        public Team OwningteamValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_owninguser_value")]
        #endif
        public string OwninguserValue { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_name")]
        #endif
        public string TheName { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_productplanreferenceid")]
        #endif
        public Guid? TheProductplanreferenceid { get; set; }
        public string Timezoneruleversionnumber { get; set; }
        public string Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
    }

    public partial class Subscription
    {
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("cr68c_name")]
        #endif
        public string Cr68CName { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("cr68c_productsubscriptionid")]
        #endif
        public Guid? Cr68CProductsubscriptionid { get; set; }
        public string Createdby { get; set; }
        public string Createdon { get; set; }
        public string Createdonbehalfby { get; set; }
        public int? Importsequencenumber { get; set; }
        public string Modifiedby { get; set; }
        public string Modifiedon { get; set; }
        public string Modifiedonbehalfby { get; set; }
        public string Overriddencreatedon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_ownerid_value")]
        #endif
        public SystemUser OwneridValue { get; set; }
        public BusinessUnit Owningbusinessunit { get; set; }
        public Team Owningteam { get; set; }
        public string Owninguser { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_account")]
        #endif
        public Account TheAccount { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_the_account_value")]
        #endif
        public string TheAccountValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_currency")]
        #endif
        public string TheCurrency { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_daysuntilendtrial")]
        #endif
        public int? TheDaysuntilendtrial { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_istrial")]
        #endif
        public bool? TheIstrial { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_operationalstatus")]
        #endif
        public string TheOperationalstatus { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentproviderproductplanexternalidnew")]
        #endif
        public string ThePaymentproviderproductplanexternalidnew { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentproviderproductplanexternalidold")]
        #endif
        public string ThePaymentproviderproductplanexternalidold { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentsubscriptionidnew")]
        #endif
        public string ThePaymentsubscriptionidnew { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_paymentsubscriptionidold")]
        #endif
        public string ThePaymentsubscriptionidold { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_priceidnew")]
        #endif
        public string ThePriceidnew { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_priceidold")]
        #endif
        public string ThePriceidold { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_productplanold")]
        #endif
        public string TheProductplanold { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_the_productplanreference_value")]
        #endif
        public ProductPlanReference TheProductplanreferenceValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_subscriptionaddon")]
        #endif
        public string TheSubscriptionaddon { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_the_subscriptionproduct_value")]
        #endif
        public SubscriptionProduct TheSubscriptionproductValue { get; set; }
        public int? Timezoneruleversionnumber { get; set; }
        public int? Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
    }

    public partial class SubscriptionRole
    {
        public string Createdby { get; set; }
        public string Createdon { get; set; }
        public string Createdonbehalfby { get; set; }
        public int? Importsequencenumber { get; set; }
        public string Modifiedby { get; set; }
        public string Modifiedon { get; set; }
        public string Modifiedonbehalfby { get; set; }
        public string Overriddencreatedon { get; set; }
        public Guid? Ownerid { get; set; }
        public BusinessUnit Owningbusinessunit { get; set; }
        public Team Owningteam { get; set; }
        public string Owninguser { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        public Subscription Subscriptionid { get; set; }
        public Contact Contactid { get; set; }
        public RoleReference Roleid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("the_subscriptionroleid")]
        #endif
        public Guid? TheSubscriptionroleid { get; set; }
        public int? Timezoneruleversionnumber { get; set; }
        public int? Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
    }

    public partial class Contact
    {
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_accountid_value")]
        #endif
        public Account AccountidValue { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_addressid")]
        #endif
        public Guid? Address1Addressid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_addresstypecode")]
        #endif
        public string Address1Addresstypecode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_city")]
        #endif
        public string Address1City { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_composite")]
        #endif
        public string Address1Composite { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_country")]
        #endif
        public string Address1Country { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_county")]
        #endif
        public string Address1County { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_fax")]
        #endif
        public string Address1Fax { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_freighttermscode")]
        #endif
        public string Address1Freighttermscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_latitude")]
        #endif
        public decimal? Address1Latitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line1")]
        #endif
        public string Address1Line1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line2")]
        #endif
        public string Address1Line2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line3")]
        #endif
        public string Address1Line3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_longitude")]
        #endif
        public decimal? Address1Longitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_name")]
        #endif
        public string Address1Name { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_postalcode")]
        #endif
        public string Address1Postalcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_postofficebox")]
        #endif
        public string Address1Postofficebox { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_primarycontactname")]
        #endif
        public string Address1Primarycontactname { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_shippingmethodcode")]
        #endif
        public string Address1Shippingmethodcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_stateorprovince")]
        #endif
        public string Address1Stateorprovince { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone1")]
        #endif
        public string Address1Telephone1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone2")]
        #endif
        public string Address1Telephone2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone3")]
        #endif
        public string Address1Telephone3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_upszone")]
        #endif
        public string Address1Upszone { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_utcoffset")]
        #endif
        public string Address1Utcoffset { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_addressid")]
        #endif
        public Guid? Address2Addressid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_addresstypecode")]
        #endif
        public string Address2Addresstypecode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_city")]
        #endif
        public string Address2City { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_composite")]
        #endif
        public string Address2Composite { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_country")]
        #endif
        public string Address2Country { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_county")]
        #endif
        public string Address2County { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_fax")]
        #endif
        public string Address2Fax { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_freighttermscode")]
        #endif
        public string Address2Freighttermscode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_latitude")]
        #endif
        public decimal? Address2Latitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line1")]
        #endif
        public string Address2Line1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line2")]
        #endif
        public string Address2Line2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line3")]
        #endif
        public string Address2Line3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_longitude")]
        #endif
        public decimal? Address2Longitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_name")]
        #endif
        public string Address2Name { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_postalcode")]
        #endif
        public string Address2Postalcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_postofficebox")]
        #endif
        public string Address2Postofficebox { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_primarycontactname")]
        #endif
        public string Address2Primarycontactname { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_shippingmethodcode")]
        #endif
        public string Address2Shippingmethodcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_stateorprovince")]
        #endif
        public string Address2Stateorprovince { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone1")]
        #endif
        public string Address2Telephone1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone2")]
        #endif
        public string Address2Telephone2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone3")]
        #endif
        public string Address2Telephone3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_upszone")]
        #endif
        public string Address2Upszone { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_utcoffset")]
        #endif
        public string Address2Utcoffset { get; set; }
        public decimal? Aging30 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("aging30_base")]
        #endif
        public decimal? Aging30Base { get; set; }
        public decimal? Aging60 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("aging60_base")]
        #endif
        public decimal? Aging60Base { get; set; }
        public decimal? Aging90 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("aging90_base")]
        #endif
        public decimal? Aging90Base { get; set; }
        public string Anniversary { get; set; }
        public string Assistantname { get; set; }
        public string Assistantphone { get; set; }
        public string Birthdate { get; set; }
        public string Business2 { get; set; }
        public string Callback { get; set; }
        public string Childrensnames { get; set; }
        public string Company { get; set; }
        public Guid? Contactid { get; set; }
        public string Createdby { get; set; }
        public string CreatedbyString { get; set; }
        public string Createdon { get; set; }
        public string Createdonbehalfby { get; set; }
        public decimal? Creditlimit { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("creditlimit_base")]
        #endif
        public decimal? CreditlimitBase { get; set; }
        public bool? Creditonhold { get; set; }
        public string Customersizecode { get; set; }
        public string Customertypecode { get; set; }
        public string Department { get; set; }
        public string Description { get; set; }
        public bool? Donotbulkemail { get; set; }
        public bool? Donotbulkpostalmail { get; set; }
        public bool? Donotemail { get; set; }
        public bool? Donotfax { get; set; }
        public bool? Donotphone { get; set; }
        public bool? Donotpostalmail { get; set; }
        public bool? Donotsendmm { get; set; }
        public string Emailaddress1 { get; set; }
        public string Emailaddress2 { get; set; }
        public string Emailaddress3 { get; set; }
        public string Employeeid { get; set; }
        public decimal? Exchangerate { get; set; }
        public string Externaluseridentifier { get; set; }
        public string Fax { get; set; }
        public string Firstname { get; set; }
        public bool? Followemail { get; set; }
        public string Fullname { get; set; }
        public int? Gendercode { get; set; }
        public string Governmentid { get; set; }
        public int? Haschildrencode { get; set; }
        public string Home2 { get; set; }
        public int? Importsequencenumber { get; set; }
        public bool? Isautocreate { get; set; }
        public bool? Isbackofficecustomer { get; set; }
        public bool? Isprivate { get; set; }
        public string Jobtitle { get; set; }
        public string Lastname { get; set; }
        public string Lastonholdtime { get; set; }
        public string Lastusedincampaign { get; set; }
        public string Leadsourcecode { get; set; }
        public string Managername { get; set; }
        public string Managerphone { get; set; }
        public bool? Marketingonly { get; set; }
        public Contact Masterid { get; set; }
        public bool? Merged { get; set; }
        public string Middlename { get; set; }
        public string Mobilephone { get; set; }
        public string Modifiedby { get; set; }
        public string Modifiedbyexternalparty { get; set; }
        public string Modifiedon { get; set; }
        public string Modifiedonbehalfby { get; set; }
        public string Nickname { get; set; }
        public int? Numberofchildren { get; set; }
        public string Overriddencreatedon { get; set; }
        public Guid? Ownerid { get; set; }
        public BusinessUnit Owningbusinessunit { get; set; }
        public Team Owningteam { get; set; }
        public string Owninguser { get; set; }
        public string Pager { get; set; }
        public Contact Parentcontactid { get; set; }
        public bool? Participatesinworkflow { get; set; }
        public string Paymenttermscode { get; set; }
        public string Preferredappointmentdaycode { get; set; }
        public string Preferredappointmenttimecode { get; set; }
        public string Preferredcontactmethodcode { get; set; }
        public string Preferredequipmentid { get; set; }
        public string Preferredserviceid { get; set; }
        public string Preferredsystemuserid { get; set; }
        public Guid? Processid { get; set; }
        public string Salutation { get; set; }
        public string Shippingmethodcode { get; set; }
        public string Spousesname { get; set; }
        public int? Statecode { get; set; }
        public int? Statuscode { get; set; }
        public Subscription Subscriptionid { get; set; }
        public string Suffix { get; set; }
        public int? Teamsfollowed { get; set; }
        public string Telephone1 { get; set; }
        public string Telephone2 { get; set; }
        public string Telephone3 { get; set; }
        public string Territorycode { get; set; }
        public string Timespentbymeonemailandmeetings { get; set; }
        public int? Timezoneruleversionnumber { get; set; }
        public string Transactioncurrencyid { get; set; }
        public string Traversedpath { get; set; }
        public int? Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
        public string Websiteurl { get; set; }
        public string Yomifullname { get; set; }
    }

    public partial class Team
    {
        public BusinessUnit Businessunitid { get; set; }
        public string Createdby { get; set; }
        public string Createdon { get; set; }
        public string Createdonbehalfby { get; set; }
        public string Description { get; set; }
        public int? Importsequencenumber { get; set; }
        public string Modifiedby { get; set; }
        public string Modifiedon { get; set; }
        public string Modifiedonbehalfby { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_organizationid_value")]
        #endif
        public string OrganizationidValue { get; set; }
        public string Overriddencreatedon { get; set; }
        public Guid? Ownerid { get; set; }
        public BusinessUnit Owningbusinessunit { get; set; }
        public Team Owningteam { get; set; }
        public string Owninguser { get; set; }
        public Guid? Teamid { get; set; }
        public int? Teamtype { get; set; }
        public int? Timezoneruleversionnumber { get; set; }
        public int? Utcconversiontimezonecode { get; set; }
        public string Versionnumber { get; set; }
    }

    public partial class BusinessUnit
    {
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_addressid")]
        #endif
        public Guid? Address1Addressid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_addresstypecode")]
        #endif
        public string Address1Addresstypecode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_city")]
        #endif
        public string Address1City { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_country")]
        #endif
        public string Address1Country { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_county")]
        #endif
        public string Address1County { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_fax")]
        #endif
        public string Address1Fax { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_latitude")]
        #endif
        public decimal? Address1Latitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line1")]
        #endif
        public string Address1Line1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line2")]
        #endif
        public string Address1Line2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_line3")]
        #endif
        public string Address1Line3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_longitude")]
        #endif
        public decimal? Address1Longitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_name")]
        #endif
        public string Address1Name { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_postalcode")]
        #endif
        public string Address1Postalcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_postofficebox")]
        #endif
        public string Address1Postofficebox { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_shippingmethodcode")]
        #endif
        public string Address1Shippingmethodcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_stateorprovince")]
        #endif
        public string Address1Stateorprovince { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone1")]
        #endif
        public string Address1Telephone1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone2")]
        #endif
        public string Address1Telephone2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_telephone3")]
        #endif
        public string Address1Telephone3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_upszone")]
        #endif
        public string Address1Upszone { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address1_utcoffset")]
        #endif
        public string Address1Utcoffset { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_addressid")]
        #endif
        public Guid? Address2Addressid { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_addresstypecode")]
        #endif
        public string Address2Addresstypecode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_city")]
        #endif
        public string Address2City { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_country")]
        #endif
        public string Address2Country { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_county")]
        #endif
        public string Address2County { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_fax")]
        #endif
        public string Address2Fax { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_latitude")]
        #endif
        public decimal? Address2Latitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line1")]
        #endif
        public string Address2Line1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line2")]
        #endif
        public string Address2Line2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_line3")]
        #endif
        public string Address2Line3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_longitude")]
        #endif
        public decimal? Address2Longitude { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_name")]
        #endif
        public string Address2Name { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_postalcode")]
        #endif
        public string Address2Postalcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_postofficebox")]
        #endif
        public string Address2Postofficebox { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_shippingmethodcode")]
        #endif
        public string Address2Shippingmethodcode { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_stateorprovince")]
        #endif
        public string Address2Stateorprovince { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone1")]
        #endif
        public string Address2Telephone1 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone2")]
        #endif
        public string Address2Telephone2 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_telephone3")]
        #endif
        public string Address2Telephone3 { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_upszone")]
        #endif
        public string Address2Upszone { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("address2_utcoffset")]
        #endif
        public string Address2Utcoffset { get; set; }
        public Guid? Businessunitid { get; set; }
        public string Calendarid { get; set; }
        public string Costcenter { get; set; }
        public Guid? Createdby { get; set; }
        public string Createdon { get; set; }
        public Guid? Createdonbehalfby { get; set; }
        public decimal? Creditlimit { get; set; }
        public string Description { get; set; }
        public string Disabledreason { get; set; }
        public string Divisionname { get; set; }
        public string Emailaddress { get; set; }
        public decimal? Exchangerate { get; set; }
        public string Fileasname { get; set; }
        public string Ftpsiteurl { get; set; }
        public int? Importsequencenumber { get; set; }
        public int? Inheritancemask { get; set; }
        public bool? Isdisabled { get; set; }
        public Guid? Modifiedby { get; set; }
        public string Modifiedon { get; set; }
        public Guid? Modifiedonbehalfby { get; set; }
        public string Name { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_organizationid_value")]
        #endif
        public string OrganizationidValue { get; set; }
        public string Overriddencreatedon { get; set; }
        public BusinessUnit Parentbusinessunitid { get; set; }
        public string Picture { get; set; }
        public string Stockexchange { get; set; }
        public string Tickersymbol { get; set; }
        public string Transactioncurrencyid { get; set; }
        public int? Utcoffset { get; set; }
        public int? Versionnumber { get; set; }
        public string Websiteurl { get; set; }
        public bool? Workflowsuspended { get; set; }
    }

    public partial class SystemUser
    {
        public Guid? Systemuserid { get; set; }
        public string Fullname { get; set; }
    }

    public partial class Mutation
    {
        public Account CreateAccount { get; set; }
        public Account UpdateAccount { get; set; }
        public Subscription CreateSubscription { get; set; }
        public Subscription UpdateSubscription { get; set; }
        public Contact CreateContact { get; set; }
        public Contact UpdateContact { get; set; }
    }

    public partial class Query
    {
        public ICollection<Account> Accounts { get; set; }
        public Account Account { get; set; }
        public RoleReference Rolereference { get; set; }
        public ICollection<RoleReference> Rolereferences { get; set; }
        public SubscriptionProduct Subscriptionproduct { get; set; }
        public ICollection<SubscriptionProduct> Subscriptionproducts { get; set; }
        public ProductComponentReference Productcomponentreference { get; set; }
        public ProductComponentReference ProductcomponentreferenceForName { get; set; }
        public ICollection<ProductComponentReference> Productcomponentreferences { get; set; }
        public ProductPlanReference Productplanreference { get; set; }
        public ICollection<ProductPlanReference> Productplanreferences { get; set; }
        public Subscription Subscription { get; set; }
        public ICollection<Subscription> SubscriptionForProductAndAccount { get; set; }
        public ICollection<Subscription> Subscriptions { get; set; }
        public ICollection<SubscriptionComponent> SubscriptionComponents { get; set; }
        public SubscriptionRole Subscriptionrole { get; set; }
        public SubscriptionRole Subscriptionroles { get; set; }
        public Contact Contact { get; set; }
        public ICollection<Contact> Contacts { get; set; }
        public Team Team { get; set; }
        public BusinessUnit Businessunit { get; set; }
        public ICollection<SystemUser> Systemusers { get; set; }
        public SystemUser Systemuser { get; set; }
    }
    #endregion
}
